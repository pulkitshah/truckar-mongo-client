{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { branchApi } from \"../api/branch-api\";\nimport axios from \"../utils/axios\";\nconst initialState = {\n  branches: [],\n  branchIds: [],\n  isNextPageLoading: true\n};\nexport const slice = createSlice({\n  name: \"branch\",\n  initialState,\n  reducers: {\n    getBranches(state, action) {\n      const branches = action.payload;\n      state.branches = branches;\n      state.isNextPageLoading = false;\n    },\n\n    createBranch(state, action) {\n      const {\n        branch\n      } = action.payload;\n      state.branches = [...state.branches, branch];\n    },\n\n    selectBranch(state, action) {\n      const {\n        branchId = null\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedBranchId = branchId;\n    },\n\n    updateBranch(state, action) {\n      const {\n        branch\n      } = action.payload;\n      state.branches = _.map(state.branches, _branch => {\n        if (_branch.id === branch.id) {\n          return branch;\n        }\n\n        return _branch;\n      });\n    },\n\n    deleteBranch(state, action) {\n      const {\n        branchId\n      } = action.payload;\n      state.branches = _.reject(state.branches, {\n        id: branchId\n      });\n    },\n\n    selectRange(state, action) {\n      const {\n        start,\n        end\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedBranchId = null;\n      state.selectedRange = null;\n    }\n\n  }\n});\nexport const reducer = slice.reducer;\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/branches.js"],"names":["createSlice","_","branchApi","axios","initialState","branches","branchIds","isNextPageLoading","slice","name","reducers","getBranches","state","action","payload","createBranch","branch","selectBranch","branchId","isModalOpen","selectedBranchId","updateBranch","map","_branch","id","deleteBranch","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,iBAAiB,EAAE;AAHA,CAArB;AAMA,OAAO,MAAMC,KAAK,GAAGR,WAAW,CAAC;AAC/BS,EAAAA,IAAI,EAAE,QADyB;AAE/BL,EAAAA,YAF+B;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMR,QAAQ,GAAGQ,MAAM,CAACC,OAAxB;AACAF,MAAAA,KAAK,CAACP,QAAN,GAAiBA,QAAjB;AACAO,MAAAA,KAAK,CAACL,iBAAN,GAA0B,KAA1B;AACD,KALO;;AAMRQ,IAAAA,YAAY,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAM;AAAEG,QAAAA;AAAF,UAAaH,MAAM,CAACC,OAA1B;AAEAF,MAAAA,KAAK,CAACP,QAAN,GAAiB,CAAC,GAAGO,KAAK,CAACP,QAAV,EAAoBW,MAApB,CAAjB;AACD,KAVO;;AAWRC,IAAAA,YAAY,CAACL,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAM;AAAEK,QAAAA,QAAQ,GAAG;AAAb,UAAsBL,MAAM,CAACC,OAAnC;AAEAF,MAAAA,KAAK,CAACO,WAAN,GAAoB,IAApB;AACAP,MAAAA,KAAK,CAACQ,gBAAN,GAAyBF,QAAzB;AACD,KAhBO;;AAiBRG,IAAAA,YAAY,CAACT,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAM;AAAEG,QAAAA;AAAF,UAAaH,MAAM,CAACC,OAA1B;AAEAF,MAAAA,KAAK,CAACP,QAAN,GAAiBJ,CAAC,CAACqB,GAAF,CAAMV,KAAK,CAACP,QAAZ,EAAuBkB,OAAD,IAAa;AAClD,YAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACQ,EAA1B,EAA8B;AAC5B,iBAAOR,MAAP;AACD;;AAED,eAAOO,OAAP;AACD,OANgB,CAAjB;AAOD,KA3BO;;AA4BRE,IAAAA,YAAY,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAC1B,YAAM;AAAEK,QAAAA;AAAF,UAAeL,MAAM,CAACC,OAA5B;AAEAF,MAAAA,KAAK,CAACP,QAAN,GAAiBJ,CAAC,CAACyB,MAAF,CAASd,KAAK,CAACP,QAAf,EAAyB;AACxCmB,QAAAA,EAAE,EAAEN;AADoC,OAAzB,CAAjB;AAGD,KAlCO;;AAmCRS,IAAAA,WAAW,CAACf,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAM;AAAEe,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAiBhB,MAAM,CAACC,OAA9B;AAEAF,MAAAA,KAAK,CAACO,WAAN,GAAoB,IAApB;AACAP,MAAAA,KAAK,CAACkB,aAAN,GAAsB;AACpBF,QAAAA,KADoB;AAEpBC,QAAAA;AAFoB,OAAtB;AAID,KA3CO;;AA4CRE,IAAAA,SAAS,CAACnB,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACO,WAAN,GAAoB,IAApB;AACD,KA9CO;;AA+CRa,IAAAA,UAAU,CAACpB,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACO,WAAN,GAAoB,KAApB;AACAP,MAAAA,KAAK,CAACQ,gBAAN,GAAyB,IAAzB;AACAR,MAAAA,KAAK,CAACkB,aAAN,GAAsB,IAAtB;AACD;;AAnDO;AAHqB,CAAD,CAAzB;AA0DP,OAAO,MAAMG,OAAO,GAAGzB,KAAK,CAACyB,OAAtB;AAEP,eAAezB,KAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { branchApi } from \"../api/branch-api\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  branches: [],\n  branchIds: [],\n  isNextPageLoading: true,\n};\n\nexport const slice = createSlice({\n  name: \"branch\",\n  initialState,\n  reducers: {\n    getBranches(state, action) {\n      const branches = action.payload;\n      state.branches = branches;\n      state.isNextPageLoading = false;\n    },\n    createBranch(state, action) {\n      const { branch } = action.payload;\n\n      state.branches = [...state.branches, branch];\n    },\n    selectBranch(state, action) {\n      const { branchId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedBranchId = branchId;\n    },\n    updateBranch(state, action) {\n      const { branch } = action.payload;\n\n      state.branches = _.map(state.branches, (_branch) => {\n        if (_branch.id === branch.id) {\n          return branch;\n        }\n\n        return _branch;\n      });\n    },\n    deleteBranch(state, action) {\n      const { branchId } = action.payload;\n\n      state.branches = _.reject(state.branches, {\n        id: branchId,\n      });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedBranchId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}