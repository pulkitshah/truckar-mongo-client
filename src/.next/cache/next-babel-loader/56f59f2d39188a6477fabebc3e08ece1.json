{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/party/party-address-card.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport { Button, Card, CardActions, CardHeader, Divider, useMediaQuery } from \"@mui/material\";\nimport { PropertyList } from \"../../property-list\";\nimport { PropertyListItem } from \"../../property-list-item\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nimport React from \"react\";\nexport const AddressCard = props => {\n  const {\n    address\n  } = props;\n  const mdUp = useMediaQuery(theme => theme.breakpoints.up(\"md\"));\n  const align = mdUp ? \"horizontal\" : \"vertical\";\n  const [status, setStatus] = useState(true);\n\n  const toggleStatus = () => {\n    setStatus(!status);\n  };\n\n  let addressCard = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, _objectSpread(_objectSpread({}, other), {}, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: address.name,\n        action: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: toggleStatus,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyList, {\n        children: [/*#__PURE__*/_jsxDEV(PropertyListItem, {\n          align: align,\n          divider: true,\n          label: \"GSTIN\",\n          value: address.gstin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n          align: align,\n          divider: true,\n          label: \"PAN\",\n          value: address.pan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n          align: align,\n          divider: true,\n          label: \"Address Line 1\",\n          value: address.billingAddressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n          align: align,\n          divider: true,\n          label: \"Address Line 2\",\n          value: address.billingAddressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n          align: align,\n          disableGutters: true,\n          label: \"City\",\n          value: JSON.parse(address.city).description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n\n  const PartyAddressForm = props => {\n    const {\n      onCancel,\n      address\n    } = props;\n    const dispatch = useDispatch();\n    const formik = useFormik({\n      initialValues: {\n        name: address.name || \"\",\n        gstin: address.gstin || \"\",\n        pan: address.pan || \"\",\n        billingAddressLine1: address.billingAddressLine1 || \"\",\n        billingAddressLine2: address.billingAddressLine2 || \"\",\n        city: address.city || \"\",\n        submit: null\n      },\n      onSubmit: async (values, helpers) => {\n        try {\n          // NOTE: Make API request\n          type === \"new\" ? await partyApi.createPartyAddress(values, dispatch) : await partyApi.updatePartyAddress(values, dispatch);\n          toggleStatus();\n          toast.success(\"Party updated!\");\n          onCancel();\n        } catch (err) {\n          console.error(err);\n          toast.error(\"Something went wrong!\");\n          helpers.setStatus({\n            success: false\n          });\n          helpers.setErrors({\n            submit: err.message\n          });\n          helpers.setSubmitting(false);\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n        onSubmit: formik.handleSubmit\n      }, props), {}, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            backgroundColor: theme => theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n            bpartyRadius: 1,\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            px: 3,\n            py: 2.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            sx: {\n              mr: 2\n            },\n            color: \"textSecondary\",\n            children: \"Party\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: \"center\",\n              display: \"flex\",\n              m: -1,\n              \"& > button\": {\n                m: 1\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"submit\",\n              size: \"small\",\n              variant: \"contained\",\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onCancel,\n              size: \"small\",\n              variant: \"outlined\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            my: 3\n          },\n          variant: \"h6\",\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          error: Boolean(formik.touched.name && formik.errors.name),\n          fullWidth: true,\n          helperText: formik.touched.name && formik.errors.name,\n          label: \"Name\",\n          name: \"name\",\n          onBlur: formik.handleBlur,\n          onChange: event => {\n            formik.setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }));\n          },\n          value: formik.values.name,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(formik.touched.gstin && formik.errors.gstin),\n          fullWidth: true,\n          helperText: formik.touched.gstin && eformik.rrors.gstin,\n          label: \"GSTIN\",\n          name: \"gstin\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          value: formik.values.gstin,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(formik.touched.pan && formik.errors.pan),\n          fullWidth: true,\n          helperText: formik.touched.pan && eformik.rrors.pan,\n          label: \"PAN\",\n          name: \"pan\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          value: formik.values.pan,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          error: Boolean(formik.touched.billingaddressline1 && formik.errors.billingaddressline1),\n          fullWidth: true,\n          helperText: formik.touched.billingaddressline1 && formik.errors.billingaddressline1,\n          label: \"Billing Address Line 1\",\n          name: \"billingaddressline1\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          value: formik.values.billingAddressLine1,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          error: Boolean(formik.touched.billingaddressline2 && formik.errors.billingaddressline2),\n          fullWidth: true,\n          helperText: formik.touched.billingaddressline2 && formik.errors.billingaddressline2,\n          label: \"Billing Address Line 2\",\n          name: \"billingaddressline2\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          value: formik.values.billingAddressLine2,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleMaps, {\n          formik: formik,\n          error: Boolean(formik.touched.city && formik.errors.city),\n          label: \"City\",\n          field: \"city\",\n          setFieldValue: formik.setFieldValue,\n          handleBlur: formik.handleBlur,\n          values: formik.values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginRight: 10\n            },\n            variant: \"contained\",\n            color: \"secondary\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: type === \"new\" ? \"Create Party\" : \"Update Party\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: toggleStatus,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  };\n\n  return status ? {\n    addressCard\n  } : {\n    PartyAddressForm\n  };\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/party/party-address-card.js"],"names":["PropTypes","Button","Card","CardActions","CardHeader","Divider","useMediaQuery","PropertyList","PropertyListItem","useDispatch","GoogleMaps","React","AddressCard","props","address","mdUp","theme","breakpoints","up","align","status","setStatus","useState","toggleStatus","addressCard","other","name","gstin","pan","billingAddressLine1","billingAddressLine2","JSON","parse","city","description","PartyAddressForm","onCancel","dispatch","formik","useFormik","initialValues","submit","onSubmit","values","helpers","type","partyApi","createPartyAddress","updatePartyAddress","toast","success","err","console","error","setErrors","message","setSubmitting","handleSubmit","alignItems","backgroundColor","palette","mode","bpartyRadius","display","flexWrap","justifyContent","px","py","mr","m","my","Boolean","touched","errors","handleBlur","event","setFieldValue","target","value","replace","txt","charAt","toUpperCase","substr","toLowerCase","eformik","rrors","handleChange","billingaddressline1","billingaddressline2","marginRight","isSubmitting"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { PropertyList } from \"../../property-list\";\nimport { PropertyListItem } from \"../../property-list-item\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nimport React from \"react\";\n\nexport const AddressCard = (props) => {\n  const { address } = props;\n  const mdUp = useMediaQuery((theme) => theme.breakpoints.up(\"md\"));\n\n  const align = mdUp ? \"horizontal\" : \"vertical\";\n\n  const [status, setStatus] = useState(true);\n  const toggleStatus = () => {\n    setStatus(!status);\n  };\n\n  let addressCard = (\n    <React.Fragment>\n      <Card {...other}>\n        <CardHeader\n          title={address.name}\n          action={\n            <Button variant=\"outlined\" color=\"primary\" onClick={toggleStatus}>\n              Edit\n            </Button>\n          }\n        />\n        <Divider />\n        <PropertyList>\n          <PropertyListItem\n            align={align}\n            divider\n            label=\"GSTIN\"\n            value={address.gstin}\n          />\n          <PropertyListItem\n            align={align}\n            divider\n            label=\"PAN\"\n            value={address.pan}\n          />\n          <PropertyListItem\n            align={align}\n            divider\n            label=\"Address Line 1\"\n            value={address.billingAddressLine1}\n          />\n          <PropertyListItem\n            align={align}\n            divider\n            label=\"Address Line 2\"\n            value={address.billingAddressLine2}\n          />\n          <PropertyListItem\n            align={align}\n            disableGutters\n            label=\"City\"\n            value={JSON.parse(address.city).description}\n          />\n        </PropertyList>\n      </Card>\n    </React.Fragment>\n  );\n\n  const PartyAddressForm = (props) => {\n    const { onCancel, address } = props;\n    const dispatch = useDispatch();\n\n    const formik = useFormik({\n      initialValues: {\n        name: address.name || \"\",\n        gstin: address.gstin || \"\",\n        pan: address.pan || \"\",\n        billingAddressLine1: address.billingAddressLine1 || \"\",\n        billingAddressLine2: address.billingAddressLine2 || \"\",\n        city: address.city || \"\",\n        submit: null,\n      },\n      onSubmit: async (values, helpers) => {\n        try {\n          // NOTE: Make API request\n          type === \"new\"\n            ? await partyApi.createPartyAddress(values, dispatch)\n            : await partyApi.updatePartyAddress(values, dispatch);\n          toggleStatus();\n\n          toast.success(\"Party updated!\");\n          onCancel();\n        } catch (err) {\n          console.error(err);\n          toast.error(\"Something went wrong!\");\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      },\n    });\n\n    return (\n      <>\n        <form onSubmit={formik.handleSubmit} {...props}>\n          <Box\n            sx={{\n              alignItems: \"center\",\n              backgroundColor: (theme) =>\n                theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n              bpartyRadius: 1,\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              px: 3,\n              py: 2.5,\n            }}\n          >\n            <Typography variant=\"overline\" sx={{ mr: 2 }} color=\"textSecondary\">\n              Party\n            </Typography>\n            <Box\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n                m: -1,\n                \"& > button\": {\n                  m: 1,\n                },\n              }}\n            >\n              <Button\n                color=\"primary\"\n                type=\"submit\"\n                size=\"small\"\n                variant=\"contained\"\n              >\n                Save changes\n              </Button>\n              <Button onClick={onCancel} size=\"small\" variant=\"outlined\">\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n\n          <Typography sx={{ my: 3 }} variant=\"h6\">\n            Details\n          </Typography>\n\n          <TextField\n            margin=\"normal\"\n            error={Boolean(formik.touched.name && formik.errors.name)}\n            fullWidth\n            helperText={formik.touched.name && formik.errors.name}\n            label=\"Name\"\n            name=\"name\"\n            onBlur={formik.handleBlur}\n            onChange={(event) => {\n              formik.setFieldValue(\n                \"name\",\n                event.target.value.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                })\n              );\n            }}\n            value={formik.values.name}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(formik.touched.gstin && formik.errors.gstin)}\n            fullWidth\n            helperText={formik.touched.gstin && eformik.rrors.gstin}\n            label=\"GSTIN\"\n            name=\"gstin\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.gstin}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(formik.touched.pan && formik.errors.pan)}\n            fullWidth\n            helperText={formik.touched.pan && eformik.rrors.pan}\n            label=\"PAN\"\n            name=\"pan\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.pan}\n            variant=\"outlined\"\n          />\n          <TextField\n            margin=\"normal\"\n            error={Boolean(\n              formik.touched.billingaddressline1 &&\n                formik.errors.billingaddressline1\n            )}\n            fullWidth\n            helperText={\n              formik.touched.billingaddressline1 &&\n              formik.errors.billingaddressline1\n            }\n            label=\"Billing Address Line 1\"\n            name=\"billingaddressline1\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.billingAddressLine1}\n            variant=\"outlined\"\n          />\n          <TextField\n            margin=\"normal\"\n            error={Boolean(\n              formik.touched.billingaddressline2 &&\n                formik.errors.billingaddressline2\n            )}\n            fullWidth\n            helperText={\n              formik.touched.billingaddressline2 &&\n              formik.errors.billingaddressline2\n            }\n            label=\"Billing Address Line 2\"\n            name=\"billingaddressline2\"\n            onBlur={formik.handleBlur}\n            onChange={formik.handleChange}\n            value={formik.values.billingAddressLine2}\n            variant=\"outlined\"\n          />\n          <GoogleMaps\n            formik={formik}\n            error={Boolean(formik.touched.city && formik.errors.city)}\n            label={\"City\"}\n            field={\"city\"}\n            setFieldValue={formik.setFieldValue}\n            handleBlur={formik.handleBlur}\n            values={formik.values}\n          />\n          <Box mt={2}>\n            <Button\n              style={{ marginRight: 10 }}\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              {type === \"new\" ? \"Create Party\" : \"Update Party\"}\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={toggleStatus}>\n              Cancel\n            </Button>\n          </Box>\n        </form>\n      </>\n    );\n  };\n\n  return status ? { addressCard } : { PartyAddressForm };\n};\n"]},"metadata":{},"sourceType":"module"}