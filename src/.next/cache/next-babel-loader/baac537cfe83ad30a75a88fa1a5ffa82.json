{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport axios from \"../utils/axios\";\nvar initialState = {\n  orders: [],\n  orderIds: [],\n  isNextPageLoading: true\n};\nvar slice = createSlice({\n  name: \"order\",\n  initialState: initialState,\n  reducers: {\n    getOrders: function getOrders(state, action) {\n      var orders = action.payload;\n      state.orders = orders;\n      state.isNextPageLoading = false;\n    },\n    getOrderIds: function getOrderIds(state, action) {\n      var orderIds = action.payload;\n      state.orderIds = orderIds;\n      state.isNextPageLoading = false;\n    },\n    addOrders: function addOrders(state, action) {\n      var newOrders = action.payload;\n      state.orders = [].concat(_toConsumableArray(state.orders), _toConsumableArray(newOrders));\n    },\n    addOrderId: function addOrderId(state, action) {\n      var orderIds = action.payload;\n      state.orderIds = [].concat(_toConsumableArray(orderIds), _toConsumableArray(state.orderIds));\n    },\n    updateDelivery: function updateDelivery(state, action) {\n      var delivery = action.payload;\n      state.orders = _.map(state.orders, function (_order) {\n        if (_order._id.toString() === delivery.order.toString()) {\n          console.log(_order);\n          var newOrder = _order;\n          newOrder.trips[0].deliveries = newOrder.trips[0].deliveries.map(function (_delivery) {\n            if (_delivery._id === delivery._id) {\n              return delivery;\n            }\n\n            return _delivery;\n          });\n          return newOrder;\n        }\n\n        return _order;\n      });\n    },\n    createOrder: function createOrder(state, action) {\n      var order = action.payload.order;\n      state.orders = [].concat(_toConsumableArray(state.orders), [order]);\n    },\n    selectOrder: function selectOrder(state, action) {\n      var _action$payload$order = action.payload.orderId,\n          orderId = _action$payload$order === void 0 ? null : _action$payload$order;\n      state.isModalOpen = true;\n      state.selectedOrderId = orderId;\n    },\n    updateOrder: function updateOrder(state, action) {\n      var order = action.payload.order;\n      state.orders = _.map(state.orders, function (_order) {\n        if (_order.id === order.id) {\n          return order;\n        }\n\n        return _order;\n      });\n    },\n    deleteOrder: function deleteOrder(state, action) {\n      var orderId = action.payload.orderId;\n      state.orders = _.reject(state.orders, {\n        id: orderId\n      });\n    },\n    selectRange: function selectRange(state, action) {\n      var _action$payload = action.payload,\n          start = _action$payload.start,\n          end = _action$payload.end;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start: start,\n        end: end\n      };\n    },\n    openModal: function openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal: function closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrderId = null;\n      state.selectedRange = null;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getOrders = function getOrders(limit) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"/api/orders?page=1&limit=\".concat(limit));\n\n            case 2:\n              response = _context.sent;\n              console.log(\"getOrders = ()\");\n              dispatch(slice.actions.getOrders(response.data));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getOrderIds = function getOrderIds() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.get(\"/api/orders/orderids?page=1&limit=1500\");\n\n            case 2:\n              response = _context2.sent;\n              console.log(\"getOrderIds = ()\");\n              dispatch(slice.actions.getOrderIds(response.data));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var addOrders = function addOrders(page, limit) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.get(\"/api/orders?page=\".concat(page + 1, \"&limit=\").concat(limit));\n\n            case 2:\n              response = _context3.sent;\n              console.log(\"addOrders = (\".concat(page, \", \").concat(limit, \")\"));\n              dispatch(slice.actions.addOrders(response.data));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var addOrderId = function addOrderId(orderIdArray) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch(slice.actions.addOrderId(orderIdArray));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var updateDelivery = function updateDelivery(deliveryId, values) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return axios.patch(\"/api/orders/delivery/\".concat(deliveryId), values);\n\n            case 2:\n              response = _context5.sent;\n              console.log(\"updateWeights = (\".concat(deliveryId, \", })\"));\n              dispatch(slice.actions.updateDelivery(response.data));\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var createOrder = function createOrder(data) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return axios.post(\"/api/calendar/orders/new\", data);\n\n            case 2:\n              response = _context6.sent;\n              dispatch(slice.actions.createOrder(response.data));\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var selectOrder = function selectOrder(orderId) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              dispatch(slice.actions.selectOrder({\n                orderId: orderId\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var updateOrder = function updateOrder(orderId, update) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return axios.post(\"/api/calendar/orders/update\", {\n                orderId: orderId,\n                update: update\n              });\n\n            case 2:\n              response = _context8.sent;\n              dispatch(slice.actions.updateOrder(response.data));\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteOrder = function deleteOrder(orderId) {\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return axios.post(\"/api/calendar/orders/remove\", {\n                orderId: orderId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteOrder({\n                orderId: orderId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function (_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n};\nexport var selectRange = function selectRange(start, end) {\n  return function (dispatch) {\n    dispatch(slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime()\n    }));\n  };\n};\nexport var openModal = function openModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.openModal());\n  };\n};\nexport var closeModal = function closeModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.closeModal());\n  };\n};\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/orders.js"],"names":["createSlice","_","axios","initialState","orders","orderIds","isNextPageLoading","slice","name","reducers","getOrders","state","action","payload","getOrderIds","addOrders","newOrders","addOrderId","updateDelivery","delivery","map","_order","_id","toString","order","console","log","newOrder","trips","deliveries","_delivery","createOrder","selectOrder","orderId","isModalOpen","selectedOrderId","updateOrder","id","deleteOrder","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer","limit","dispatch","get","response","actions","data","page","orderIdArray","deliveryId","values","patch","post","update","getTime"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  orders: [],\n  orderIds: [],\n  isNextPageLoading: true,\n};\n\nconst slice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    getOrders(state, action) {\n      const orders = action.payload;\n      state.orders = orders;\n      state.isNextPageLoading = false;\n    },\n    getOrderIds(state, action) {\n      const orderIds = action.payload;\n      state.orderIds = orderIds;\n      state.isNextPageLoading = false;\n    },\n    addOrders(state, action) {\n      const newOrders = action.payload;\n      state.orders = [...state.orders, ...newOrders];\n    },\n    addOrderId(state, action) {\n      const orderIds = action.payload;\n      state.orderIds = [...orderIds, ...state.orderIds];\n    },\n    updateDelivery(state, action) {\n      const delivery = action.payload;\n\n      state.orders = _.map(state.orders, (_order) => {\n        if (_order._id.toString() === delivery.order.toString()) {\n          console.log(_order);\n          let newOrder = _order;\n          newOrder.trips[0].deliveries = newOrder.trips[0].deliveries.map(\n            (_delivery) => {\n              if (_delivery._id === delivery._id) {\n                return delivery;\n              }\n              return _delivery;\n            }\n          );\n          return newOrder;\n        }\n\n        return _order;\n      });\n    },\n    createOrder(state, action) {\n      const { order } = action.payload;\n\n      state.orders = [...state.orders, order];\n    },\n    selectOrder(state, action) {\n      const { orderId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedOrderId = orderId;\n    },\n    updateOrder(state, action) {\n      const { order } = action.payload;\n\n      state.orders = _.map(state.orders, (_order) => {\n        if (_order.id === order.id) {\n          return order;\n        }\n\n        return _order;\n      });\n    },\n    deleteOrder(state, action) {\n      const { orderId } = action.payload;\n\n      state.orders = _.reject(state.orders, { id: orderId });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrderId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport const getOrders = (limit) => async (dispatch) => {\n  const response = await axios.get(`/api/orders?page=1&limit=${limit}`);\n  console.log(\"getOrders = ()\");\n  dispatch(slice.actions.getOrders(response.data));\n};\n\nexport const getOrderIds = () => async (dispatch) => {\n  const response = await axios.get(`/api/orders/orderids?page=1&limit=1500`);\n  console.log(\"getOrderIds = ()\");\n  dispatch(slice.actions.getOrderIds(response.data));\n};\n\nexport const addOrders = (page, limit) => async (dispatch) => {\n  const response = await axios.get(\n    `/api/orders?page=${page + 1}&limit=${limit}`\n  );\n  console.log(`addOrders = (${page}, ${limit})`);\n\n  dispatch(slice.actions.addOrders(response.data));\n};\n\nexport const addOrderId = (orderIdArray) => async (dispatch) => {\n  dispatch(slice.actions.addOrderId(orderIdArray));\n};\n\nexport const updateDelivery = (deliveryId, values) => async (dispatch) => {\n  const response = await axios.patch(\n    `/api/orders/delivery/${deliveryId}`,\n    values\n  );\n  console.log(`updateWeights = (${deliveryId}, })`);\n\n  dispatch(slice.actions.updateDelivery(response.data));\n};\n\nexport const createOrder = (data) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/orders/new\", data);\n\n  dispatch(slice.actions.createOrder(response.data));\n};\n\nexport const selectOrder = (orderId) => async (dispatch) => {\n  dispatch(slice.actions.selectOrder({ orderId }));\n};\n\nexport const updateOrder = (orderId, update) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/orders/update\", {\n    orderId,\n    update,\n  });\n\n  dispatch(slice.actions.updateOrder(response.data));\n};\n\nexport const deleteOrder = (orderId) => async (dispatch) => {\n  await axios.post(\"/api/calendar/orders/remove\", {\n    orderId,\n  });\n\n  dispatch(slice.actions.deleteOrder({ orderId }));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(\n    slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime(),\n    })\n  );\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}