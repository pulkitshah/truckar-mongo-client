{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/notifications-popover.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { format, subDays, subHours } from 'date-fns';\nimport { Avatar, Box, IconButton, Link, List, ListItem, ListItemAvatar, ListItemText, Popover, Tooltip, Typography } from '@mui/material';\nimport { ChatAlt as ChatAltIcon } from '../../icons/chat-alt';\nimport { MailOpen as MailOpenIcon } from '../../icons/mail-open';\nimport { X as XIcon } from '../../icons/x';\nimport { UserCircle as UserCircleIcon } from '../../icons/user-circle';\nimport { Scrollbar } from '../scrollbar';\nconst now = new Date();\nconst data = [{\n  id: '5e8883f1b51cc1956a5a1ec0',\n  author: 'Jie Yang Song',\n  avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n  createdAt: subHours(now, 2).getTime(),\n  job: 'Remote React / React Native Developer',\n  read: true,\n  type: 'job_add'\n}, {\n  id: 'bfb21a370c017acc416757c7',\n  author: 'Jie Yang Song',\n  avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n  createdAt: subHours(now, 2).getTime(),\n  job: 'Senior Golang Backend Engineer',\n  read: false,\n  type: 'job_add'\n}, {\n  id: '20d9df4f23fff19668d7031c',\n  createdAt: subDays(now, 1).getTime(),\n  description: 'Logistics management is now available',\n  read: true,\n  type: 'new_feature'\n}, {\n  id: '5e8883fca0e8612044248ecf',\n  author: 'Jie Yang Song',\n  avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n  company: 'Augmastic Inc',\n  createdAt: subHours(now, 2).getTime(),\n  read: false,\n  type: 'company_created'\n}];\n\nconst getNotificationContent = notification => {\n  switch (notification.type) {\n    case 'job_add':\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          sx: {\n            mt: 0.5\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: notification.avatar,\n            children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mr: 0.5\n              },\n              variant: \"subtitle2\",\n              children: notification.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mr: 0.5\n              },\n              variant: \"body2\",\n              children: \"added a new job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/dashboard/jobs\",\n              underline: \"always\",\n              variant: \"body2\",\n              children: notification.job\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"caption\",\n            children: format(notification.createdAt, 'MMM dd, h:mm a')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this),\n          sx: {\n            my: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n\n    case 'new_feature':\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          sx: {\n            mt: 0.5\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: /*#__PURE__*/_jsxDEV(ChatAltIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                mr: 0.5\n              },\n              children: \"New feature!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: notification.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"caption\",\n            children: format(notification.createdAt, 'MMM dd, h:mm a')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this),\n          sx: {\n            my: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n\n    case 'company_created':\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          sx: {\n            mt: 0.5\n          },\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            src: notification.avatar,\n            children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              flexWrap: 'wrap',\n              m: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mr: 0.5\n              },\n              variant: \"subtitle2\",\n              children: notification.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mr: 0.5\n              },\n              children: \"created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/dashboard/jobs\",\n              underline: \"always\",\n              variant: \"body2\",\n              children: notification.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"caption\",\n            children: format(notification.createdAt, 'MMM dd, h:mm a')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this),\n          sx: {\n            my: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n\n    default:\n      return null;\n  }\n};\n\nexport const NotificationsPopover = props => {\n  const {\n    anchorEl,\n    onClose,\n    onUpdateUnread,\n    open\n  } = props,\n        other = _objectWithoutProperties(props, [\"anchorEl\", \"onClose\", \"onUpdateUnread\", \"open\"]);\n\n  const {\n    0: notifications,\n    1: setNotifications\n  } = useState(data);\n  const unread = useMemo(() => notifications.reduce((acc, notification) => acc + (notification.read ? 0 : 1), 0), [notifications]);\n  useEffect(() => {\n    onUpdateUnread === null || onUpdateUnread === void 0 ? void 0 : onUpdateUnread(unread);\n  }, [onUpdateUnread, unread]);\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(prevState => prevState.map(notification => _objectSpread(_objectSpread({}, notification), {}, {\n      read: true\n    })));\n  };\n\n  const handleRemoveOne = notificationId => {\n    setNotifications(prevState => prevState.filter(notification => notification.id !== notificationId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Popover, _objectSpread(_objectSpread({\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      horizontal: 'left',\n      vertical: 'bottom'\n    },\n    onClose: onClose,\n    open: open,\n    PaperProps: {\n      sx: {\n        width: 380\n      }\n    },\n    transitionDuration: 0\n  }, other), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        backgroundColor: 'primary.main',\n        color: 'primary.contrastText',\n        display: 'flex',\n        justifyContent: 'space-between',\n        px: 3,\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        variant: \"h6\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Mark all as read\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleMarkAllAsRead,\n          size: \"small\",\n          sx: {\n            color: 'inherit'\n          },\n          children: /*#__PURE__*/_jsxDEV(MailOpenIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        children: \"There are no notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Scrollbar, {\n      sx: {\n        maxHeight: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        disablePadding: true,\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(ListItem, {\n          divider: true,\n          sx: {\n            alignItems: 'flex-start',\n            '&:hover': {\n              backgroundColor: 'action.hover'\n            },\n            '& .MuiListItemSecondaryAction-root': {\n              top: '24%'\n            }\n          },\n          secondaryAction: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Remove\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => handleRemoveOne(notification.id),\n              size: \"small\",\n              children: /*#__PURE__*/_jsxDEV(XIcon, {\n                sx: {\n                  fontSize: 14\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 21\n          }, this),\n          children: getNotificationContent(notification)\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\nNotificationsPopover.propTypes = {\n  anchorEl: PropTypes.any,\n  onClose: PropTypes.func,\n  onUpdateUnread: PropTypes.func,\n  open: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/notifications-popover.js"],"names":["useEffect","useMemo","useState","PropTypes","format","subDays","subHours","Avatar","Box","IconButton","Link","List","ListItem","ListItemAvatar","ListItemText","Popover","Tooltip","Typography","ChatAlt","ChatAltIcon","MailOpen","MailOpenIcon","X","XIcon","UserCircle","UserCircleIcon","Scrollbar","now","Date","data","id","author","avatar","createdAt","getTime","job","read","type","description","company","getNotificationContent","notification","mt","alignItems","display","flexWrap","mr","my","m","NotificationsPopover","props","anchorEl","onClose","onUpdateUnread","open","other","notifications","setNotifications","unread","reduce","acc","handleMarkAllAsRead","prevState","map","handleRemoveOne","notificationId","filter","horizontal","vertical","sx","width","backgroundColor","color","justifyContent","px","py","length","p","maxHeight","top","fontSize","propTypes","any","func","bool"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { format, subDays, subHours } from 'date-fns';\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport { ChatAlt as ChatAltIcon } from '../../icons/chat-alt';\nimport { MailOpen as MailOpenIcon } from '../../icons/mail-open';\nimport { X as XIcon } from '../../icons/x';\nimport { UserCircle as UserCircleIcon } from '../../icons/user-circle';\nimport { Scrollbar } from '../scrollbar';\n\nconst now = new Date();\n\nconst data = [\n  {\n    id: '5e8883f1b51cc1956a5a1ec0',\n    author: 'Jie Yang Song',\n    avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n    createdAt: subHours(now, 2).getTime(),\n    job: 'Remote React / React Native Developer',\n    read: true,\n    type: 'job_add'\n  },\n  {\n    id: 'bfb21a370c017acc416757c7',\n    author: 'Jie Yang Song',\n    avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n    createdAt: subHours(now, 2).getTime(),\n    job: 'Senior Golang Backend Engineer',\n    read: false,\n    type: 'job_add'\n  },\n  {\n    id: '20d9df4f23fff19668d7031c',\n    createdAt: subDays(now, 1).getTime(),\n    description: 'Logistics management is now available',\n    read: true,\n    type: 'new_feature'\n  },\n  {\n    id: '5e8883fca0e8612044248ecf',\n    author: 'Jie Yang Song',\n    avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n    company: 'Augmastic Inc',\n    createdAt: subHours(now, 2).getTime(),\n    read: false,\n    type: 'company_created'\n  }\n];\n\nconst getNotificationContent = (notification) => {\n  switch (notification.type) {\n    case 'job_add':\n      return (\n        <>\n          <ListItemAvatar sx={{ mt: 0.5 }}>\n            <Avatar src={notification.avatar}>\n              <UserCircleIcon fontSize=\"small\" />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  flexWrap: 'wrap'\n                }}\n              >\n                <Typography\n                  sx={{ mr: 0.5 }}\n                  variant=\"subtitle2\"\n                >\n                  {notification.author}\n                </Typography>\n                <Typography\n                  sx={{ mr: 0.5 }}\n                  variant=\"body2\"\n                >\n                  added a new job\n                </Typography>\n                <Link\n                  href=\"/dashboard/jobs\"\n                  underline=\"always\"\n                  variant=\"body2\"\n                >\n                  {notification.job}\n                </Link>\n              </Box>\n            )}\n            secondary={(\n              <Typography\n                color=\"textSecondary\"\n                variant=\"caption\"\n              >\n                {format(notification.createdAt, 'MMM dd, h:mm a')}\n              </Typography>\n            )}\n            sx={{ my: 0 }}\n          />\n        </>\n      );\n    case 'new_feature':\n      return (\n        <>\n          <ListItemAvatar sx={{ mt: 0.5 }}>\n            <Avatar>\n              <ChatAltIcon fontSize=\"small\" />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  flexWrap: 'wrap'\n                }}\n              >\n                <Typography\n                  variant=\"subtitle2\"\n                  sx={{ mr: 0.5 }}\n                >\n                  New feature!\n                </Typography>\n                <Typography variant=\"body2\">\n                  {notification.description}\n                </Typography>\n              </Box>\n            )}\n            secondary={(\n              <Typography\n                color=\"textSecondary\"\n                variant=\"caption\"\n              >\n                {format(notification.createdAt, 'MMM dd, h:mm a')}\n              </Typography>\n            )}\n            sx={{ my: 0 }}\n          />\n        </>\n      );\n    case 'company_created':\n      return (\n        <>\n          <ListItemAvatar sx={{ mt: 0.5 }}>\n            <Avatar src={notification.avatar}>\n              <UserCircleIcon fontSize=\"small\" />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  m: 0\n                }}\n              >\n                <Typography\n                  sx={{ mr: 0.5 }}\n                  variant=\"subtitle2\"\n                >\n                  {notification.author}\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  sx={{ mr: 0.5 }}\n                >\n                  created\n                </Typography>\n                <Link\n                  href=\"/dashboard/jobs\"\n                  underline=\"always\"\n                  variant=\"body2\"\n                >\n                  {notification.company}\n                </Link>\n              </Box>\n            )}\n            secondary={(\n              <Typography\n                color=\"textSecondary\"\n                variant=\"caption\"\n              >\n                {format(notification.createdAt, 'MMM dd, h:mm a')}\n              </Typography>\n            )}\n            sx={{ my: 0 }}\n          />\n        </>\n      );\n    default:\n      return null;\n  }\n};\n\nexport const NotificationsPopover = (props) => {\n  const { anchorEl, onClose, onUpdateUnread, open, ...other } = props;\n  const [notifications, setNotifications] = useState(data);\n  const unread = useMemo(() => notifications.reduce((acc, notification) => acc + (notification.read\n    ? 0\n    : 1), 0), [notifications]);\n\n  useEffect(() => {\n    onUpdateUnread?.(unread);\n  }, [onUpdateUnread, unread]);\n\n  const handleMarkAllAsRead = () => {\n    setNotifications((prevState) => prevState.map((notification) => ({\n      ...notification,\n      read: true\n    })));\n  };\n\n  const handleRemoveOne = (notificationId) => {\n    setNotifications((prevState) => prevState.filter((notification) => notification.id\n      !== notificationId));\n  };\n\n  return (\n    <Popover\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        horizontal: 'left',\n        vertical: 'bottom'\n      }}\n      onClose={onClose}\n      open={open}\n      PaperProps={{ sx: { width: 380 } }}\n      transitionDuration={0}\n      {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          backgroundColor: 'primary.main',\n          color: 'primary.contrastText',\n          display: 'flex',\n          justifyContent: 'space-between',\n          px: 3,\n          py: 2\n        }}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"h6\"\n        >\n          Notifications\n        </Typography>\n        <Tooltip title=\"Mark all as read\">\n          <IconButton\n            onClick={handleMarkAllAsRead}\n            size=\"small\"\n            sx={{ color: 'inherit' }}\n          >\n            <MailOpenIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </Box>\n      {notifications.length === 0\n        ? (\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"subtitle2\">\n              There are no notifications\n            </Typography>\n          </Box>\n        )\n        : (\n          <Scrollbar sx={{ maxHeight: 400 }}>\n            <List disablePadding>\n              {notifications.map((notification) => (\n                <ListItem\n                  divider\n                  key={notification.id}\n                  sx={{\n                    alignItems: 'flex-start',\n                    '&:hover': {\n                      backgroundColor: 'action.hover'\n                    },\n                    '& .MuiListItemSecondaryAction-root': {\n                      top: '24%'\n                    }\n                  }}\n                  secondaryAction={(\n                    <Tooltip title=\"Remove\">\n                      <IconButton\n                        edge=\"end\"\n                        onClick={() => handleRemoveOne(notification.id)}\n                        size=\"small\"\n                      >\n                        <XIcon sx={{ fontSize: 14 }} />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n                >\n                  {getNotificationContent(notification)}\n                </ListItem>\n              ))}\n            </List>\n          </Scrollbar>\n        )}\n    </Popover>\n  );\n};\n\nNotificationsPopover.propTypes = {\n  anchorEl: PropTypes.any,\n  onClose: PropTypes.func,\n  onUpdateUnread: PropTypes.func,\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}