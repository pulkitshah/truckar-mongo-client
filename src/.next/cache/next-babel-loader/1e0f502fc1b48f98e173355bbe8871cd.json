{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/orders/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useRef, useState } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport { Box, Button, Divider, Grid, InputAdornment, Tab, Tabs, TextField, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { OnBoardingGuard } from \"../../../components/authentication/onboarding-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { OrderDrawer } from \"../../../components/dashboard/order/order-drawer\";\nimport OrderGrid from \"../../../components/dashboard/order/order-grid\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { gtm } from \"../../../lib/gtm\";\nimport { useDispatch } from \"../../../store\";\nimport { partyApi } from \"../../../api/party-api\";\nconst tabs = [{\n  label: \"ORDER REGISTER\",\n  value: \"order-register\"\n}, {\n  label: \"Canceled\",\n  value: \"canceled\"\n}];\nconst sortOptions = [{\n  label: \"Newest\",\n  value: \"desc\"\n}, {\n  label: \"Oldest\",\n  value: \"asc\"\n}];\n\nconst applyFilters = (orders, filters) => orders.filter(order => {\n  if (filters.query) {\n    // Checks only the order number, but can be extended to support other fields, such as customer\n    // name, email, etc.\n    const containsQuery = order.number.toLowerCase().includes(filters.query.toLowerCase());\n\n    if (!containsQuery) {\n      return false;\n    }\n  }\n\n  if (typeof filters.status !== \"undefined\") {\n    const statusMatched = order.status === filters.status;\n\n    if (!statusMatched) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nconst applySort = (orders, order) => orders.sort((a, b) => {\n  const comparator = a.createdAt > b.createdAt ? -1 : 1;\n  return order === \"desc\" ? comparator : -comparator;\n});\n\nconst OrderListInner = styled(\"div\", {\n  shouldForwardProp: prop => prop !== \"open\"\n})(({\n  theme,\n  open\n}) => _objectSpread({\n  flexGrow: 1,\n  overflow: \"hidden\",\n  paddingBottom: theme.spacing(8),\n  paddingTop: theme.spacing(8),\n  zIndex: 1,\n  [theme.breakpoints.up(\"lg\")]: {\n    marginRight: -500\n  },\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}, open && {\n  [theme.breakpoints.up(\"lg\")]: {\n    marginRight: 0\n  },\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}));\n\nconst OrderList = () => {\n  const isMounted = useMounted();\n  const dispatch = useDispatch();\n  const {\n    parties\n  } = useSelector(state => state.parties);\n  const {\n    orders\n  } = useSelector(state => state.orders);\n  const {\n    t\n  } = useTranslation();\n  const {\n    user\n  } = useAuth();\n  const rootRef = useRef(null);\n  const queryRef = useRef(null);\n  const {\n    0: currentTab,\n    1: setCurrentTab\n  } = useState(\"order-register\");\n  const {\n    0: sort,\n    1: setSort\n  } = useState(\"desc\");\n  const {\n    0: ordersForTable,\n    1: setOrdersForTable\n  } = useState([]);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    query: \"\",\n    status: undefined\n  });\n  const {\n    0: drawer,\n    1: setDrawer\n  } = useState({\n    isOpen: false,\n    orderId: null\n  });\n  useEffect(async () => {\n    try {\n      await orderApi.getOrdersByUser(user, dispatch);\n      await partyApi.getPartiesByUser(user, dispatch);\n      let ordersWithCustomers = orders.map((order, index) => {\n        let party = parties.find(party => party.id.toString() === order.customerId.toString());\n        return _objectSpread(_objectSpread({}, order), {}, {\n          customer: party\n        });\n      });\n      setOrdersForTable(ordersWithCustomers);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  const newOrder = useEffect(() => {\n    gtm.push({\n      event: \"page_view\"\n    });\n  }, []);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n    setFilters(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n      status: value === \"all\" ? undefined : value\n    }));\n  };\n\n  const handleQueryChange = event => {\n    event.preventDefault();\n    setFilters(prevState => {\n      var _queryRef$current;\n\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        query: (_queryRef$current = queryRef.current) === null || _queryRef$current === void 0 ? void 0 : _queryRef$current.value\n      });\n    });\n  };\n\n  const handleSortChange = event => {\n    const value = event.target.value;\n    setSort(value);\n  };\n\n  const handleCloseDrawer = () => {\n    setDrawer({\n      isOpen: false,\n      orderId: null\n    });\n  }; // Usually query is done on backend with indexing solutions\n\n\n  const filteredOrders = applyFilters(orders, filters);\n  const sortedOrders = applySort(filteredOrders, sort);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard: Order List | Truckar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      ref: rootRef,\n      sx: {\n        backgroundColor: \"background.paper\",\n        display: \"flex\",\n        flexGrow: 1,\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(OrderListInner, {\n        open: drawer.isOpen,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            px: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: t(\"Orders\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(NextLink, {\n                href: \"/dashboard/orders/new\",\n                passHref: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: \"a\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 32\n                  }, this),\n                  variant: \"contained\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            indicatorColor: \"primary\",\n            onChange: handleTabsChange,\n            scrollButtons: \"auto\",\n            textColor: \"primary\",\n            value: currentTab,\n            sx: {\n              mt: 3\n            },\n            variant: \"scrollable\",\n            children: tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n              label: tab.label,\n              value: tab.value\n            }, tab.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            m: -1.5,\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleQueryChange,\n            sx: {\n              flexGrow: 1,\n              m: 1.5\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              defaultValue: \"\",\n              fullWidth: true,\n              inputProps: {\n                ref: queryRef\n              },\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)\n              },\n              placeholder: \"Search by order number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Sort By\",\n            name: \"order\",\n            onChange: handleSortChange,\n            select: true,\n            SelectProps: {\n              native: true\n            },\n            sx: {\n              m: 1.5\n            },\n            value: sort,\n            children: sortOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrderGrid, {\n          orders: ordersForTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrderDrawer, {\n        containerRef: rootRef,\n        onClose: handleCloseDrawer,\n        open: drawer.isOpen,\n        order: orders.find(order => order.id === drawer.orderId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nOrderList.getLayout = page => /*#__PURE__*/_jsxDEV(AuthGuard, {\n  children: /*#__PURE__*/_jsxDEV(OnBoardingGuard, {\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 300,\n  columnNumber: 3\n}, this);\n\nexport default OrderList;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/orders/index.js"],"names":["useEffect","useRef","useState","NextLink","Head","useTranslation","moment","Box","Button","Divider","Grid","InputAdornment","Tab","Tabs","TextField","Typography","styled","orderApi","AuthGuard","OnBoardingGuard","DashboardLayout","OrderDrawer","OrderGrid","useMounted","useAuth","Plus","PlusIcon","Search","SearchIcon","gtm","useDispatch","partyApi","tabs","label","value","sortOptions","applyFilters","orders","filters","filter","order","query","containsQuery","number","toLowerCase","includes","status","statusMatched","applySort","sort","a","b","comparator","createdAt","OrderListInner","shouldForwardProp","prop","theme","open","flexGrow","overflow","paddingBottom","spacing","paddingTop","zIndex","breakpoints","up","marginRight","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","OrderList","isMounted","dispatch","parties","useSelector","state","t","user","rootRef","queryRef","currentTab","setCurrentTab","setSort","ordersForTable","setOrdersForTable","setFilters","undefined","drawer","setDrawer","isOpen","orderId","getOrdersByUser","getPartiesByUser","ordersWithCustomers","map","index","party","find","id","toString","customerId","customer","error","console","log","newOrder","push","event","handleTabsChange","prevState","handleQueryChange","preventDefault","current","handleSortChange","target","handleCloseDrawer","filteredOrders","sortedOrders","backgroundColor","display","px","mt","tab","alignItems","flexWrap","m","p","ref","startAdornment","native","option","getLayout","page"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Grid,\n  InputAdornment,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { OnBoardingGuard } from \"../../../components/authentication/onboarding-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { OrderDrawer } from \"../../../components/dashboard/order/order-drawer\";\nimport OrderGrid from \"../../../components/dashboard/order/order-grid\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { gtm } from \"../../../lib/gtm\";\nimport { useDispatch } from \"../../../store\";\nimport { partyApi } from \"../../../api/party-api\";\n\nconst tabs = [\n  {\n    label: \"ORDER REGISTER\",\n    value: \"order-register\",\n  },\n  {\n    label: \"Canceled\",\n    value: \"canceled\",\n  },\n];\n\nconst sortOptions = [\n  {\n    label: \"Newest\",\n    value: \"desc\",\n  },\n  {\n    label: \"Oldest\",\n    value: \"asc\",\n  },\n];\n\nconst applyFilters = (orders, filters) =>\n  orders.filter((order) => {\n    if (filters.query) {\n      // Checks only the order number, but can be extended to support other fields, such as customer\n      // name, email, etc.\n      const containsQuery = order.number\n        .toLowerCase()\n        .includes(filters.query.toLowerCase());\n\n      if (!containsQuery) {\n        return false;\n      }\n    }\n\n    if (typeof filters.status !== \"undefined\") {\n      const statusMatched = order.status === filters.status;\n\n      if (!statusMatched) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\nconst applySort = (orders, order) =>\n  orders.sort((a, b) => {\n    const comparator = a.createdAt > b.createdAt ? -1 : 1;\n\n    return order === \"desc\" ? comparator : -comparator;\n  });\n\nconst OrderListInner = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  flexGrow: 1,\n  overflow: \"hidden\",\n  paddingBottom: theme.spacing(8),\n  paddingTop: theme.spacing(8),\n  zIndex: 1,\n  [theme.breakpoints.up(\"lg\")]: {\n    marginRight: -500,\n  },\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    [theme.breakpoints.up(\"lg\")]: {\n      marginRight: 0,\n    },\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst OrderList = () => {\n  const isMounted = useMounted();\n  const dispatch = useDispatch();\n  const { parties } = useSelector((state) => state.parties);\n  const { orders } = useSelector((state) => state.orders);\n\n  const { t } = useTranslation();\n\n  const { user } = useAuth();\n  const rootRef = useRef(null);\n  const queryRef = useRef(null);\n  const [currentTab, setCurrentTab] = useState(\"order-register\");\n  const [sort, setSort] = useState(\"desc\");\n  const [ordersForTable, setOrdersForTable] = useState([]);\n\n  const [filters, setFilters] = useState({\n    query: \"\",\n    status: undefined,\n  });\n  const [drawer, setDrawer] = useState({\n    isOpen: false,\n    orderId: null,\n  });\n\n  useEffect(async () => {\n    try {\n      await orderApi.getOrdersByUser(user, dispatch);\n      await partyApi.getPartiesByUser(user, dispatch);\n\n      let ordersWithCustomers = orders.map((order, index) => {\n        let party = parties.find(\n          (party) => party.id.toString() === order.customerId.toString()\n        );\n        return { ...order, customer: party };\n      });\n\n      setOrdersForTable(ordersWithCustomers);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const newOrder = useEffect(() => {\n    gtm.push({ event: \"page_view\" });\n  }, []);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n    setFilters((prevState) => ({\n      ...prevState,\n      status: value === \"all\" ? undefined : value,\n    }));\n  };\n\n  const handleQueryChange = (event) => {\n    event.preventDefault();\n    setFilters((prevState) => ({\n      ...prevState,\n      query: queryRef.current?.value,\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    const value = event.target.value;\n    setSort(value);\n  };\n\n  const handleCloseDrawer = () => {\n    setDrawer({\n      isOpen: false,\n      orderId: null,\n    });\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredOrders = applyFilters(orders, filters);\n  const sortedOrders = applySort(filteredOrders, sort);\n\n  return (\n    <>\n      <Head>\n        <title>Dashboard: Order List | Truckar</title>\n      </Head>\n      <Box\n        component=\"main\"\n        ref={rootRef}\n        sx={{\n          backgroundColor: \"background.paper\",\n          display: \"flex\",\n          flexGrow: 1,\n          overflow: \"hidden\",\n        }}\n      >\n        <OrderListInner open={drawer.isOpen}>\n          <Box sx={{ px: 3 }}>\n            <Grid container justifyContent=\"space-between\" spacing={3}>\n              <Grid item>\n                <Typography variant=\"h4\">{t(\"Orders\")}</Typography>\n              </Grid>\n              <Grid item>\n                <NextLink href=\"/dashboard/orders/new\" passHref>\n                  <Button\n                    component=\"a\"\n                    startIcon={<PlusIcon fontSize=\"small\" />}\n                    variant=\"contained\"\n                  >\n                    Add\n                  </Button>\n                </NextLink>\n              </Grid>\n            </Grid>\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              textColor=\"primary\"\n              value={currentTab}\n              sx={{ mt: 3 }}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab key={tab.value} label={tab.label} value={tab.value} />\n              ))}\n            </Tabs>\n          </Box>\n          <Divider />\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              m: -1.5,\n              p: 3,\n            }}\n          >\n            <Box\n              component=\"form\"\n              onSubmit={handleQueryChange}\n              sx={{\n                flexGrow: 1,\n                m: 1.5,\n              }}\n            >\n              <TextField\n                defaultValue=\"\"\n                fullWidth\n                inputProps={{ ref: queryRef }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  ),\n                }}\n                placeholder=\"Search by order number\"\n              />\n            </Box>\n            <TextField\n              label=\"Sort By\"\n              name=\"order\"\n              onChange={handleSortChange}\n              select\n              SelectProps={{ native: true }}\n              sx={{ m: 1.5 }}\n              value={sort}\n            >\n              {sortOptions.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </TextField>\n          </Box>\n          <Divider />\n          <OrderGrid orders={ordersForTable} />\n        </OrderListInner>\n        <OrderDrawer\n          containerRef={rootRef}\n          onClose={handleCloseDrawer}\n          open={drawer.isOpen}\n          order={orders.find((order) => order.id === drawer.orderId)}\n        />\n      </Box>\n    </>\n  );\n};\n\nOrderList.getLayout = (page) => (\n  <AuthGuard>\n    <OnBoardingGuard>\n      <DashboardLayout>{page}</DashboardLayout>\n    </OnBoardingGuard>\n  </AuthGuard>\n);\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}