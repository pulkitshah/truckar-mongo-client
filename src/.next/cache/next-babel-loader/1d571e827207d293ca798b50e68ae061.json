{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { organisationApi } from \"../api/organisation-api\";\nimport axios from \"../utils/axios\";\nconst initialState = {\n  organisations: [],\n  organisationIds: [],\n  isNextPageLoading: true\n};\nexport const slice = createSlice({\n  name: \"organisation\",\n  initialState,\n  reducers: {\n    getOrganisations(state, action) {\n      const organisations = action.payload;\n      state.organisations = organisations;\n      state.isNextPageLoading = false;\n    },\n\n    createOrganisation(state, action) {\n      const {\n        organisation\n      } = action.payload;\n      state.organisations = [...state.organisations, organisation];\n    },\n\n    selectOrganisation(state, action) {\n      const {\n        organisationId = null\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedOrganisationId = organisationId;\n    },\n\n    updateOrganisation(state, action) {\n      const {\n        organisation\n      } = action.payload;\n      console.log(organisation);\n      state.organisations = _.map(state.organisations, _organisation => {\n        if (_organisation.id === organisation.id) {\n          return organisation;\n        }\n\n        return _organisation;\n      });\n    },\n\n    deleteOrganisation(state, action) {\n      const {\n        organisationId\n      } = action.payload;\n      state.organisations = _.reject(state.organisations, {\n        id: organisationId\n      });\n    },\n\n    selectRange(state, action) {\n      const {\n        start,\n        end\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrganisationId = null;\n      state.selectedRange = null;\n    }\n\n  }\n});\nexport const reducer = slice.reducer;\nexport const getOrganisations = limit => async dispatch => {\n  const response = await organisationApi.getOrganisationsByUser();\n  console.log(\"getOrganisations = ()\");\n  dispatch(slice.actions.getOrganisations(response.data));\n};\nexport const createOrganisation = data => async dispatch => {\n  const response = await axios.post(\"/api/calendar/organisations/new\", data);\n  dispatch(slice.actions.createOrganisation(response.data));\n};\nexport const selectOrganisation = organisationId => async dispatch => {\n  dispatch(slice.actions.selectOrganisation({\n    organisationId\n  }));\n};\nexport const updateOrganisation = (organisationId, update) => async dispatch => {\n  const response = await axios.post(\"/api/calendar/organisations/update\", {\n    organisationId,\n    update\n  });\n  dispatch(slice.actions.updateOrganisation(response.data));\n};\nexport const deleteOrganisation = organisationId => async dispatch => {\n  await axios.post(\"/api/calendar/organisations/remove\", {\n    organisationId\n  });\n  dispatch(slice.actions.deleteOrganisation({\n    organisationId\n  }));\n};\nexport const selectRange = (start, end) => dispatch => {\n  dispatch(slice.actions.selectRange({\n    start: start.getTime(),\n    end: end.getTime()\n  }));\n};\nexport const openModal = () => dispatch => {\n  dispatch(slice.actions.openModal());\n};\nexport const closeModal = () => dispatch => {\n  dispatch(slice.actions.closeModal());\n};\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/organisations.js"],"names":["createSlice","_","organisationApi","axios","initialState","organisations","organisationIds","isNextPageLoading","slice","name","reducers","getOrganisations","state","action","payload","createOrganisation","organisation","selectOrganisation","organisationId","isModalOpen","selectedOrganisationId","updateOrganisation","console","log","map","_organisation","id","deleteOrganisation","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer","limit","dispatch","response","getOrganisationsByUser","actions","data","post","update","getTime"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { organisationApi } from \"../api/organisation-api\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  organisations: [],\n  organisationIds: [],\n  isNextPageLoading: true,\n};\n\nexport const slice = createSlice({\n  name: \"organisation\",\n  initialState,\n  reducers: {\n    getOrganisations(state, action) {\n      const organisations = action.payload;\n      state.organisations = organisations;\n      state.isNextPageLoading = false;\n    },\n    createOrganisation(state, action) {\n      const { organisation } = action.payload;\n\n      state.organisations = [...state.organisations, organisation];\n    },\n    selectOrganisation(state, action) {\n      const { organisationId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedOrganisationId = organisationId;\n    },\n    updateOrganisation(state, action) {\n      const { organisation } = action.payload;\n      console.log(organisation);\n\n      state.organisations = _.map(state.organisations, (_organisation) => {\n        if (_organisation.id === organisation.id) {\n          return organisation;\n        }\n\n        return _organisation;\n      });\n    },\n    deleteOrganisation(state, action) {\n      const { organisationId } = action.payload;\n\n      state.organisations = _.reject(state.organisations, {\n        id: organisationId,\n      });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrganisationId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport const getOrganisations = (limit) => async (dispatch) => {\n  const response = await organisationApi.getOrganisationsByUser();\n  console.log(\"getOrganisations = ()\");\n  dispatch(slice.actions.getOrganisations(response.data));\n};\n\nexport const createOrganisation = (data) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/organisations/new\", data);\n\n  dispatch(slice.actions.createOrganisation(response.data));\n};\n\nexport const selectOrganisation = (organisationId) => async (dispatch) => {\n  dispatch(slice.actions.selectOrganisation({ organisationId }));\n};\n\nexport const updateOrganisation =\n  (organisationId, update) => async (dispatch) => {\n    const response = await axios.post(\"/api/calendar/organisations/update\", {\n      organisationId,\n      update,\n    });\n\n    dispatch(slice.actions.updateOrganisation(response.data));\n  };\n\nexport const deleteOrganisation = (organisationId) => async (dispatch) => {\n  await axios.post(\"/api/calendar/organisations/remove\", {\n    organisationId,\n  });\n\n  dispatch(slice.actions.deleteOrganisation({ organisationId }));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(\n    slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime(),\n    })\n  );\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}