{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Autocomplete, Box, Button, Card, CardContent, FormControlLabel, FormHelperText, Grid, MenuItem, Switch, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/PartyAutocomplete\";\nimport moment from \"moment\";\nimport { API } from \"aws-amplify\";\nimport { createOrder } from \"../../../graphql/mutations\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Order } from \"../../../models\"; // import { v4 as uuid } from \"uuid\";\n\nvar categoryOptions = [{\n  label: \"Healthcare\",\n  value: \"healthcare\"\n}, {\n  label: \"Makeup\",\n  value: \"makeup\"\n}, {\n  label: \"Dress\",\n  value: \"dress\"\n}, {\n  label: \"Skincare\",\n  value: \"skincare\"\n}, {\n  label: \"Jewelry\",\n  value: \"jewelry\"\n}, {\n  label: \"Blouse\",\n  value: \"blouse\"\n}];\nexport var OrderCreateForm = function OrderCreateForm(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState([]),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var _useState2 = useState([]),\n      parties = _useState2[0],\n      setParties = _useState2[1];\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      barcode: \"925487986526\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      name: \"\",\n      newPrice: 0,\n      oldPrice: 0,\n      sku: \"IYV-8745\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n      category: Yup.string().max(255),\n      description: Yup.string().max(5000),\n      images: Yup.array(),\n      //   name: Yup.string().max(255).required(),\n      //   newPrice: Yup.number().min(0).required(),\n      oldPrice: Yup.number().min(0),\n      sku: Yup.string().max(255)\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var newOrder, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                // NOTE: Make API request\n                console.log(user);\n                newOrder = {\n                  //   id: uuid(),\n                  orderNo: parseInt(values.orderNo),\n                  user: user.id,\n                  saleDate: values.saleDate.format()\n                };\n                _context.next = 5;\n                return API.graphql({\n                  query: createOrder,\n                  variables: {\n                    input: newOrder\n                  },\n                  authMode: \"AMAZON_COGNITO_USER_POOLS\"\n                });\n\n              case 5:\n                response = _context.sent;\n                console.log(response); // await DataStore.save(\n                //   new Order({\n                //     id: uuid(),\n                //     orderNo: parseInt(values.orderNo),\n                //     user: auth.user._id,\n                //     saleDate: values.saleDate.format(),\n                //   })\n                // );\n\n                toast.success(\"Order created!\");\n                router.push(\"/dashboard/orders\");\n                _context.next = 18;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var partiesDB;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return partyApi.getPartiesByUser(user, dispatch);\n\n          case 3:\n            partiesDB = _context2.sent;\n            setParties(partiesDB);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  })), []);\n\n  var handleDrop = function handleDrop(newFiles) {\n    setFiles(function (prevFiles) {\n      return [].concat(_toConsumableArray(prevFiles), _toConsumableArray(newFiles));\n    });\n  };\n\n  var handleRemove = function handleRemove(file) {\n    setFiles(function (prevFiles) {\n      return prevFiles.filter(function (_file) {\n        return _file.path !== file.path;\n      });\n    });\n  };\n\n  var handleRemoveAll = function handleRemoveAll() {\n    setFiles([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: function onClick() {\n                    return setFieldTouched(\"end\");\n                  },\n                  onChange: function onChange(date) {\n                    return formik.setFieldValue(\"saleDate\", moment(date));\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                      fullWidth: true\n                    }, params), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"type\",\n                  options: parties,\n                  getOptionLabel: function getOptionLabel(option) {\n                    return option.title;\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n                      onKeyPress: function onKeyPress(e) {\n                        e.which === 13 && e.preventDefault();\n                      }\n                    }, params), {}, {\n                      label: \"Customer\",\n                      variant: \"outlined\"\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrderCreateForm, \"aumhavevpqHDjY3k5k+qLHkoTdg=\", false, function () {\n  return [useRouter, useAuth, useFormik];\n});\n\n_c = OrderCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["useState","useEffect","useRouter","toast","Yup","useFormik","Autocomplete","Box","Button","Card","CardContent","FormControlLabel","FormHelperText","Grid","MenuItem","Switch","TextField","Typography","DatePicker","FileDropzone","QuillEditor","useAuth","PartyAutocomplete","moment","API","createOrder","DataStore","Predicates","Order","categoryOptions","label","value","OrderCreateForm","props","router","files","setFiles","parties","setParties","user","formik","initialValues","saleDate","barcode","category","description","images","name","newPrice","oldPrice","sku","submit","validationSchema","object","string","max","array","number","min","onSubmit","values","helpers","console","log","newOrder","orderNo","parseInt","id","format","graphql","query","variables","input","authMode","response","success","push","error","setStatus","setErrors","message","setSubmitting","partyApi","getPartiesByUser","dispatch","partiesDB","handleDrop","newFiles","prevFiles","handleRemove","file","filter","_file","path","handleRemoveAll","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","setFieldTouched","date","setFieldValue","params","option","title","e","which","preventDefault","display","flexWrap","justifyContent","mx","mb","mt","m","mr"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SACEC,YADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,gBANF,EAOEC,cAPF,EAQEC,IARF,EASEC,QATF,EAUEC,MAVF,EAWEC,SAXF,EAYEC,UAZF,QAaO,eAbP;AAcA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AACA,SAASC,KAAT,QAAsB,iBAAtB,C,CACA;;AAEA,IAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADsB,EAKtB;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALsB,EAStB;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATsB,EAatB;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbsB,EAiBtB;AACED,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBsB,EAqBtB;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CArBsB,CAAxB;AA2BA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA;;AACxC,MAAMC,MAAM,GAAGhC,SAAS,EAAxB;;AADwC,kBAEdF,QAAQ,CAAC,EAAD,CAFM;AAAA,MAEjCmC,KAFiC;AAAA,MAE1BC,QAF0B;;AAAA,mBAGVpC,QAAQ,CAAC,EAAD,CAHE;AAAA,MAGjCqC,OAHiC;AAAA,MAGxBC,UAHwB;;AAAA,iBAIvBjB,OAAO,EAJgB;AAAA,MAIhCkB,IAJgC,YAIhCA,IAJgC;;AAKxC,MAAMC,MAAM,GAAGnC,SAAS,CAAC;AACvBoC,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAEnB,MAAM,EADH;AAEboB,MAAAA,OAAO,EAAE,cAFI;AAGbC,MAAAA,QAAQ,EAAE,EAHG;AAIbC,MAAAA,WAAW,EAAE,EAJA;AAKbC,MAAAA,MAAM,EAAE,EALK;AAMbC,MAAAA,IAAI,EAAE,EANO;AAObC,MAAAA,QAAQ,EAAE,CAPG;AAQbC,MAAAA,QAAQ,EAAE,CARG;AASbC,MAAAA,GAAG,EAAE,UATQ;AAUbC,MAAAA,MAAM,EAAE;AAVK,KADQ;AAavBC,IAAAA,gBAAgB,EAAEhD,GAAG,CAACiD,MAAJ,CAAW;AAC3BV,MAAAA,OAAO,EAAEvC,GAAG,CAACkD,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,CADkB;AAE3BX,MAAAA,QAAQ,EAAExC,GAAG,CAACkD,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,CAFiB;AAG3BV,MAAAA,WAAW,EAAEzC,GAAG,CAACkD,MAAJ,GAAaC,GAAb,CAAiB,IAAjB,CAHc;AAI3BT,MAAAA,MAAM,EAAE1C,GAAG,CAACoD,KAAJ,EAJmB;AAK3B;AACA;AACAP,MAAAA,QAAQ,EAAE7C,GAAG,CAACqD,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,CAPiB;AAQ3BR,MAAAA,GAAG,EAAE9C,GAAG,CAACkD,MAAJ,GAAaC,GAAb,CAAiB,GAAjB;AARsB,KAAX,CAbK;AAuBvBI,IAAAA,QAAQ;AAAA,+EAAE,iBAAOC,MAAP,EAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEN;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYxB,IAAZ;AAEMyB,gBAAAA,QALA,GAKW;AACf;AACAC,kBAAAA,OAAO,EAAEC,QAAQ,CAACN,MAAM,CAACK,OAAR,CAFF;AAGf1B,kBAAAA,IAAI,EAAEA,IAAI,CAAC4B,EAHI;AAIfzB,kBAAAA,QAAQ,EAAEkB,MAAM,CAAClB,QAAP,CAAgB0B,MAAhB;AAJK,iBALX;AAAA;AAAA,uBAYiB5C,GAAG,CAAC6C,OAAJ,CAAY;AACjCC,kBAAAA,KAAK,EAAE7C,WAD0B;AAEjC8C,kBAAAA,SAAS,EAAE;AAAEC,oBAAAA,KAAK,EAAER;AAAT,mBAFsB;AAGjCS,kBAAAA,QAAQ,EAAE;AAHuB,iBAAZ,CAZjB;;AAAA;AAYAC,gBAAAA,QAZA;AAkBNZ,gBAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ,EAlBM,CAmBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAvE,gBAAAA,KAAK,CAACwE,OAAN,CAAc,gBAAd;AACAzC,gBAAAA,MAAM,CAAC0C,IAAP,CAAY,mBAAZ;AA5BM;AAAA;;AAAA;AAAA;AAAA;AA8BNd,gBAAAA,OAAO,CAACe,KAAR;AACA1E,gBAAAA,KAAK,CAAC0E,KAAN,CAAY,uBAAZ;AACAhB,gBAAAA,OAAO,CAACiB,SAAR,CAAkB;AAAEH,kBAAAA,OAAO,EAAE;AAAX,iBAAlB;AACAd,gBAAAA,OAAO,CAACkB,SAAR,CAAkB;AAAE5B,kBAAAA,MAAM,EAAE,YAAI6B;AAAd,iBAAlB;AACAnB,gBAAAA,OAAO,CAACoB,aAAR,CAAsB,KAAtB;;AAlCM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAvBe,GAAD,CAAxB;AA8DAhF,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBiF,QAAQ,CAACC,gBAAT,CAA0B5C,IAA1B,EAAgC6C,QAAhC,CAFlB;;AAAA;AAEAC,YAAAA,SAFA;AAGN/C,YAAAA,UAAU,CAAC+C,SAAD,CAAV;AAHM;AAAA;;AAAA;AAAA;AAAA;AAKNvB,YAAAA,OAAO,CAACC,GAAR;;AALM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAON,EAPM,CAAT;;AASA,MAAMuB,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC/BnD,IAAAA,QAAQ,CAAC,UAACoD,SAAD;AAAA,0CAAmBA,SAAnB,sBAAiCD,QAAjC;AAAA,KAAD,CAAR;AACD,GAFD;;AAIA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7BtD,IAAAA,QAAQ,CAAC,UAACoD,SAAD;AAAA,aACPA,SAAS,CAACG,MAAV,CAAiB,UAACC,KAAD;AAAA,eAAWA,KAAK,CAACC,IAAN,KAAeH,IAAI,CAACG,IAA/B;AAAA,OAAjB,CADO;AAAA,KAAD,CAAR;AAGD,GAJD;;AAMA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B1D,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEI,MAAM,CAACuD;AAAvB,KAAyC9D,KAAzC;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAE+D,OAAO,CACZxD,MAAM,CAACyD,OAAP,CAAehC,OAAf,IAA0BzB,MAAM,CAAC0D,MAAP,CAAcjC,OAD5B,CADhB;AAIE,kBAAA,SAAS,MAJX;AAKE,kBAAA,UAAU,EAAEzB,MAAM,CAACyD,OAAP,CAAehC,OAAf,IAA0BzB,MAAM,CAAC0D,MAAP,CAAcjC,OALtD;AAME,kBAAA,KAAK,EAAC,UANR;AAOE,kBAAA,IAAI,EAAC,SAPP;AAQE,kBAAA,MAAM,EAAEzB,MAAM,CAAC2D,UARjB;AASE,kBAAA,QAAQ,EAAE3D,MAAM,CAAC4D,YATnB;AAUE,kBAAA,KAAK,EAAE5D,MAAM,CAACoB,MAAP,CAAcK;AAVvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBADF,eAeE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,EAAE,EAAC,UADL;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,KAAK,EAAC,WAHR;AAIE,kBAAA,eAAe,EAAE,IAJnB;AAKE,kBAAA,WAAW,EAAC,YALd;AAME,kBAAA,KAAK,EAAEzB,MAAM,CAACoB,MAAP,CAAclB,QANvB;AAOE,kBAAA,OAAO,EAAE;AAAA,2BAAM2D,eAAe,CAAC,KAAD,CAArB;AAAA,mBAPX;AAQE,kBAAA,QAAQ,EAAE,kBAACC,IAAD;AAAA,2BACR9D,MAAM,CAAC+D,aAAP,CAAqB,UAArB,EAAiChF,MAAM,CAAC+E,IAAD,CAAvC,CADQ;AAAA,mBARZ;AAWE,kBAAA,WAAW,EAAE,qBAACE,MAAD;AAAA,wCACX,QAAC,SAAD;AAAW,sBAAA,SAAS;AAApB,uBAAyBA,MAAzB;AAAA;AAAA;AAAA;AAAA,6BADW;AAAA;AAXf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAfF,eAgCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,YAAD;AACE,kBAAA,EAAE,EAAE,MADN;AAEE,kBAAA,OAAO,EAAEnE,OAFX;AAGE,kBAAA,cAAc,EAAE,wBAACoE,MAAD;AAAA,2BAAYA,MAAM,CAACC,KAAnB;AAAA,mBAHlB;AAIE,kBAAA,WAAW,EAAE,qBAACF,MAAD;AAAA,wCACX,QAAC,SAAD;AACE,sBAAA,UAAU,EAAE,oBAACG,CAAD,EAAO;AACjBA,wBAAAA,CAAC,CAACC,KAAF,KAAY,EAAZ,IAAkBD,CAAC,CAACE,cAAF,EAAlB;AACD;AAHH,uBAIML,MAJN;AAKE,sBAAA,KAAK,EAAE,UALT;AAME,sBAAA,OAAO,EAAC;AANV;AAAA;AAAA;AAAA;AAAA,6BADW;AAAA;AAJf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eA8DE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFM,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,QAAQ,EAAE,MAFR;AAGFC,QAAAA,cAAc,EAAE,eAHd;AAIFC,QAAAA,EAAE,EAAE,CAAC,CAJH;AAKFC,QAAAA,EAAE,EAAE,CAAC,CALH;AAMFC,QAAAA,EAAE,EAAE;AANF,OADN;AAAA,8BAUE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,EAAE,EAAE;AACFC,UAAAA,CAAC,EAAE,CADD;AAEFC,UAAAA,EAAE,EAAE;AAFF,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,eAmBE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAED,UAAAA,CAAC,EAAE;AAAL,SAAZ;AAAsB,QAAA,OAAO,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnBF,eAsBE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAEA,UAAAA,CAAC,EAAE;AAAL,SAAZ;AAAsB,QAAA,IAAI,EAAC,QAA3B;AAAoC,QAAA,OAAO,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,aA9DF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA2FD,CArLM;;GAAMpF,e;UACI9B,S,EAGEmB,O,EACFhB,S;;;KALJ2B,e","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/PartyAutocomplete\";\nimport moment from \"moment\";\n\nimport { API } from \"aws-amplify\";\nimport { createOrder } from \"../../../graphql/mutations\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Order } from \"../../../models\";\n// import { v4 as uuid } from \"uuid\";\n\nconst categoryOptions = [\n  {\n    label: \"Healthcare\",\n    value: \"healthcare\",\n  },\n  {\n    label: \"Makeup\",\n    value: \"makeup\",\n  },\n  {\n    label: \"Dress\",\n    value: \"dress\",\n  },\n  {\n    label: \"Skincare\",\n    value: \"skincare\",\n  },\n  {\n    label: \"Jewelry\",\n    value: \"jewelry\",\n  },\n  {\n    label: \"Blouse\",\n    value: \"blouse\",\n  },\n];\n\nexport const OrderCreateForm = (props) => {\n  const router = useRouter();\n  const [files, setFiles] = useState([]);\n  const [parties, setParties] = useState([]);\n  const { user } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      barcode: \"925487986526\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      name: \"\",\n      newPrice: 0,\n      oldPrice: 0,\n      sku: \"IYV-8745\",\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n      category: Yup.string().max(255),\n      description: Yup.string().max(5000),\n      images: Yup.array(),\n      //   name: Yup.string().max(255).required(),\n      //   newPrice: Yup.number().min(0).required(),\n      oldPrice: Yup.number().min(0),\n      sku: Yup.string().max(255),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        console.log(user);\n\n        const newOrder = {\n          //   id: uuid(),\n          orderNo: parseInt(values.orderNo),\n          user: user.id,\n          saleDate: values.saleDate.format(),\n        };\n\n        const response = await API.graphql({\n          query: createOrder,\n          variables: { input: newOrder },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\",\n        });\n\n        console.log(response);\n        // await DataStore.save(\n        //   new Order({\n        //     id: uuid(),\n        //     orderNo: parseInt(values.orderNo),\n        //     user: auth.user._id,\n        //     saleDate: values.saleDate.format(),\n        //   })\n        // );\n        toast.success(\"Order created!\");\n        router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  useEffect(async () => {\n    try {\n      const partiesDB = await partyApi.getPartiesByUser(user, dispatch);\n      setParties(partiesDB);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const handleDrop = (newFiles) => {\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n  };\n\n  const handleRemove = (file) => {\n    setFiles((prevFiles) =>\n      prevFiles.filter((_file) => _file.path !== file.path)\n    );\n  };\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Autocomplete\n                    id={\"type\"}\n                    options={parties}\n                    getOptionLabel={(option) => option.title}\n                    renderInput={(params) => (\n                      <TextField\n                        onKeyPress={(e) => {\n                          e.which === 13 && e.preventDefault();\n                        }}\n                        {...params}\n                        label={\"Customer\"}\n                        variant=\"outlined\"\n                      />\n                    )}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}