{"ast":null,"code":"import _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/dashboard-navbar.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AppBar, Avatar, Badge, Box, ButtonBase, IconButton, Toolbar, Tooltip } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { Menu as MenuIcon } from \"../../icons/menu\";\nimport { AccountPopover } from \"./account-popover\";\nimport { ContentSearchDialog } from \"./content-search-dialog\";\nimport { NotificationsPopover } from \"./notifications-popover\";\nimport { Bell as BellIcon } from \"../../icons/bell\";\nimport { UserCircle as UserCircleIcon } from \"../../icons/user-circle\";\nimport { Search as SearchIcon } from \"../../icons/search\";\nimport { Users as UsersIcon } from \"../../icons/users\";\nvar drawerWidth = 280;\nvar DashboardNavbarRoot = styled(AppBar, {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return prop !== \"open\";\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      open = _ref.open;\n  return _objectSpread(_objectSpread({\n    backgroundColor: theme.palette.background.paper\n  }, theme.palette.mode === \"light\" ? {\n    boxShadow: theme.shadows[3]\n  } : {\n    backgroundColor: theme.palette.background.paper,\n    borderBottomColor: theme.palette.divider,\n    borderBottomStyle: \"solid\",\n    borderBottomWidth: 1,\n    boxShadow: \"none\"\n  }), {}, {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  }, open && {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  });\n});\n\nvar NotificationsButton = function NotificationsButton() {\n  _s();\n\n  var anchorRef = useRef(null);\n\n  var _useState = useState(0),\n      unread = _useState[0],\n      setUnread = _useState[1];\n\n  var _useState2 = useState(false),\n      openPopover = _useState2[0],\n      setOpenPopover = _useState2[1]; // Unread notifications should come from a context and be shared with both this component and\n  // notifications popover. To simplify the demo, we get it from the popover\n\n\n  var handleOpenPopover = function handleOpenPopover() {\n    setOpenPopover(true);\n  };\n\n  var handleClosePopover = function handleClosePopover() {\n    setOpenPopover(false);\n  };\n\n  var handleUpdateUnread = function handleUpdateUnread(value) {\n    setUnread(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Notifications\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        ref: anchorRef,\n        sx: {\n          ml: 1\n        },\n        onClick: handleOpenPopover,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"error\",\n          badgeContent: unread,\n          children: /*#__PURE__*/_jsxDEV(BellIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(NotificationsPopover, {\n      anchorEl: anchorRef.current,\n      onClose: handleClosePopover,\n      onUpdateUnread: handleUpdateUnread,\n      open: openPopover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(NotificationsButton, \"PfyXIg22tinhlEvYePTACWzeCso=\");\n\n_c = NotificationsButton;\n\nvar AccountButton = function AccountButton() {\n  _s2();\n\n  var anchorRef = useRef(null);\n\n  var _useState3 = useState(false),\n      openPopover = _useState3[0],\n      setOpenPopover = _useState3[1]; // To get the user from the authContext, you can use\n\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var handleOpenPopover = function handleOpenPopover() {\n    setOpenPopover(true);\n  };\n\n  var handleClosePopover = function handleClosePopover() {\n    setOpenPopover(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: ButtonBase,\n      onClick: handleOpenPopover,\n      ref: anchorRef,\n      sx: {\n        alignItems: \"center\",\n        display: \"flex\",\n        ml: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          height: 40,\n          width: 40\n        },\n        src: user.avatar,\n        children: /*#__PURE__*/_jsxDEV(UserCircleIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AccountPopover, {\n      anchorEl: anchorRef.current,\n      onClose: handleClosePopover,\n      open: openPopover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(AccountButton, \"JQH+vtygRk2J+zMmivRV1b01Cmo=\", true);\n\n_c2 = AccountButton;\nexport var DashboardNavbar = function DashboardNavbar(props) {\n  var onOpenSidebar = props.onOpenSidebar,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"onOpenSidebar\", \"open\"]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DashboardNavbarRoot, _objectSpread(_objectSpread({\n      position: \"fixed\",\n      open: open\n    }, other), {}, {\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        sx: {\n          minHeight: 64,\n          left: 0,\n          px: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onOpenSidebar,\n          sx: {\n            display: {\n              xs: \"inline-flex\" // lg: 'none',\n\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(NotificationsButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(AccountButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, _this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n_c3 = DashboardNavbar;\nDashboardNavbar.propTypes = {\n  onOpenSidebar: PropTypes.func\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NotificationsButton\");\n$RefreshReg$(_c2, \"AccountButton\");\n$RefreshReg$(_c3, \"DashboardNavbar\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/dashboard-navbar.js"],"names":["useRef","useState","PropTypes","AppBar","Avatar","Badge","Box","ButtonBase","IconButton","Toolbar","Tooltip","styled","Menu","MenuIcon","AccountPopover","ContentSearchDialog","NotificationsPopover","Bell","BellIcon","UserCircle","UserCircleIcon","Search","SearchIcon","Users","UsersIcon","drawerWidth","DashboardNavbarRoot","shouldForwardProp","prop","theme","open","backgroundColor","palette","background","paper","mode","boxShadow","shadows","borderBottomColor","divider","borderBottomStyle","borderBottomWidth","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","NotificationsButton","anchorRef","unread","setUnread","openPopover","setOpenPopover","handleOpenPopover","handleClosePopover","handleUpdateUnread","value","ml","current","AccountButton","useAuth","user","alignItems","display","height","avatar","DashboardNavbar","props","onOpenSidebar","other","minHeight","left","px","xs","flexGrow","propTypes","func"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Avatar,\n  Badge,\n  Box,\n  ButtonBase,\n  IconButton,\n  Toolbar,\n  Tooltip,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { Menu as MenuIcon } from \"../../icons/menu\";\nimport { AccountPopover } from \"./account-popover\";\nimport { ContentSearchDialog } from \"./content-search-dialog\";\nimport { NotificationsPopover } from \"./notifications-popover\";\nimport { Bell as BellIcon } from \"../../icons/bell\";\nimport { UserCircle as UserCircleIcon } from \"../../icons/user-circle\";\nimport { Search as SearchIcon } from \"../../icons/search\";\nimport { Users as UsersIcon } from \"../../icons/users\";\n\nconst drawerWidth = 280;\n\nconst DashboardNavbarRoot = styled(AppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  backgroundColor: theme.palette.background.paper,\n  ...(theme.palette.mode === \"light\"\n    ? {\n        boxShadow: theme.shadows[3],\n      }\n    : {\n        backgroundColor: theme.palette.background.paper,\n        borderBottomColor: theme.palette.divider,\n        borderBottomStyle: \"solid\",\n        borderBottomWidth: 1,\n        boxShadow: \"none\",\n      }),\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst NotificationsButton = () => {\n  const anchorRef = useRef(null);\n  const [unread, setUnread] = useState(0);\n  const [openPopover, setOpenPopover] = useState(false);\n  // Unread notifications should come from a context and be shared with both this component and\n  // notifications popover. To simplify the demo, we get it from the popover\n\n  const handleOpenPopover = () => {\n    setOpenPopover(true);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(false);\n  };\n\n  const handleUpdateUnread = (value) => {\n    setUnread(value);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Notifications\">\n        <IconButton ref={anchorRef} sx={{ ml: 1 }} onClick={handleOpenPopover}>\n          <Badge color=\"error\" badgeContent={unread}>\n            <BellIcon fontSize=\"small\" />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n      <NotificationsPopover\n        anchorEl={anchorRef.current}\n        onClose={handleClosePopover}\n        onUpdateUnread={handleUpdateUnread}\n        open={openPopover}\n      />\n    </>\n  );\n};\n\nconst AccountButton = () => {\n  const anchorRef = useRef(null);\n  const [openPopover, setOpenPopover] = useState(false);\n  // To get the user from the authContext, you can use\n  const { user } = useAuth();\n\n  const handleOpenPopover = () => {\n    setOpenPopover(true);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(false);\n  };\n\n  return (\n    <>\n      <Box\n        component={ButtonBase}\n        onClick={handleOpenPopover}\n        ref={anchorRef}\n        sx={{\n          alignItems: \"center\",\n          display: \"flex\",\n          ml: 2,\n        }}\n      >\n        <Avatar\n          sx={{\n            height: 40,\n            width: 40,\n          }}\n          src={user.avatar}\n        >\n          <UserCircleIcon fontSize=\"small\" />\n        </Avatar>\n      </Box>\n      <AccountPopover\n        anchorEl={anchorRef.current}\n        onClose={handleClosePopover}\n        open={openPopover}\n      />\n    </>\n  );\n};\n\nexport const DashboardNavbar = (props) => {\n  const { onOpenSidebar, open, ...other } = props;\n\n  return (\n    <>\n      <DashboardNavbarRoot position=\"fixed\" open={open} {...other}>\n        <Toolbar\n          disableGutters\n          sx={{\n            minHeight: 64,\n            left: 0,\n            px: 2,\n          }}\n        >\n          <IconButton\n            onClick={onOpenSidebar}\n            sx={{\n              display: {\n                xs: \"inline-flex\",\n                // lg: 'none',\n              },\n            }}\n          >\n            <MenuIcon fontSize=\"small\" />\n          </IconButton>\n          <Box sx={{ flexGrow: 1 }} />\n          <NotificationsButton />\n          <AccountButton />\n        </Toolbar>\n      </DashboardNavbarRoot>\n    </>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onOpenSidebar: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}