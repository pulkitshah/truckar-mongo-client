{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-grid.js\";\nimport React from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport moment from \"moment\";\nimport { debounce } from \"lodash\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nconst Table = ({\n  organisations\n}) => {\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 90\n  }, {\n    field: \"organisationName\",\n    headerName: \"First name\",\n    width: 150,\n    editable: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine-dark\",\n    style: {\n      height: \"70vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      onGridReady: onGridReady,\n      rowSelection: \"multiple\",\n      suppressRowClickSelection: true,\n      statusBar: {\n        statusPanels: [{\n          statusPanel: \"agTotalAndFilteredRowCountComponent\",\n          align: \"left\"\n        }, {\n          statusPanel: \"agFilteredRowCountComponent\"\n        }, {\n          statusPanel: \"agSelectedRowCountComponent\"\n        }, {\n          statusPanel: \"agAggregationComponent\"\n        }]\n      },\n      enableRangeSelection: true,\n      masterDetail: true,\n      immutableData: true,\n      detailRowAutoHeight: true,\n      onBodyScroll: event => {\n        if (event.direction === \"vertical\") {\n          visibleRowsChange(event);\n        }\n      },\n      getRowNodeId: data => {\n        return data._id;\n      },\n      rowData: organisations,\n      detailCellRenderer: \"detailRenderer\",\n      onFirstDataRendered: params => {\n        const autoSizeAll = skipHeader => {\n          var allColumnIds = [];\n          params.columnApi.getAllColumns().forEach(function (column) {\n            allColumnIds.push(column.colId);\n          });\n          params.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n        };\n\n        params.api.sizeColumnsToFit();\n        autoSizeAll(); // params.api.ensureIndexVisible(lastSelectedRow.organisationsAll, 'top');\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"organisationName\",\n        cellRenderer: \"agGroupCellRenderer\",\n        menuTabs: [\"filterMenuTab\", \"generalMenuTab\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Table;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-grid.js"],"names":["React","AgGridColumn","AgGridReact","moment","debounce","DataGrid","Table","organisations","columns","field","headerName","width","editable","height","onGridReady","statusPanels","statusPanel","align","event","direction","visibleRowsChange","data","_id","params","autoSizeAll","skipHeader","allColumnIds","columnApi","getAllColumns","forEach","column","push","colId","autoSizeColumns","api","sizeColumnsToFit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,eAA1C;AACA,OAAO,oBAAP;AACA,OAAO,2CAAP;AACA,OAAO,wDAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACnC,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GADc,EAEd;AACEF,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,UAAU,EAAE,YAFd;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GAFc,CAAhB;AAUA,sBACE;AACE,IAAA,SAAS,EAAE,sBADb;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,MAAV;AAAkBF,MAAAA,KAAK,EAAE;AAAzB,KAFT;AAAA,2BAIE,QAAC,WAAD;AACE,MAAA,WAAW,EAAEG,WADf;AAEE,MAAA,YAAY,EAAE,UAFhB;AAGE,MAAA,yBAAyB,EAAE,IAH7B;AAIE,MAAA,SAAS,EAAE;AACTC,QAAAA,YAAY,EAAE,CACZ;AACEC,UAAAA,WAAW,EAAE,qCADf;AAEEC,UAAAA,KAAK,EAAE;AAFT,SADY,EAKZ;AAAED,UAAAA,WAAW,EAAE;AAAf,SALY,EAMZ;AAAEA,UAAAA,WAAW,EAAE;AAAf,SANY,EAOZ;AAAEA,UAAAA,WAAW,EAAE;AAAf,SAPY;AADL,OAJb;AAeE,MAAA,oBAAoB,EAAE,IAfxB;AAgBE,MAAA,YAAY,EAAE,IAhBhB;AAiBE,MAAA,aAAa,EAAE,IAjBjB;AAkBE,MAAA,mBAAmB,EAAE,IAlBvB;AAmBE,MAAA,YAAY,EAAGE,KAAD,IAAW;AACvB,YAAIA,KAAK,CAACC,SAAN,KAAoB,UAAxB,EAAoC;AAClCC,UAAAA,iBAAiB,CAACF,KAAD,CAAjB;AACD;AACF,OAvBH;AAwBE,MAAA,YAAY,EAAGG,IAAD,IAAU;AACtB,eAAOA,IAAI,CAACC,GAAZ;AACD,OA1BH;AA2BE,MAAA,OAAO,EAAEf,aA3BX;AA4BE,MAAA,kBAAkB,EAAE,gBA5BtB;AA6BE,MAAA,mBAAmB,EAAGgB,MAAD,IAAY;AAC/B,cAAMC,WAAW,GAAIC,UAAD,IAAgB;AAClC,cAAIC,YAAY,GAAG,EAAnB;AACAH,UAAAA,MAAM,CAACI,SAAP,CAAiBC,aAAjB,GAAiCC,OAAjC,CAAyC,UAAUC,MAAV,EAAkB;AACzDJ,YAAAA,YAAY,CAACK,IAAb,CAAkBD,MAAM,CAACE,KAAzB;AACD,WAFD;AAGAT,UAAAA,MAAM,CAACI,SAAP,CAAiBM,eAAjB,CAAiCP,YAAjC,EAA+CD,UAA/C;AACD,SAND;;AAOAF,QAAAA,MAAM,CAACW,GAAP,CAAWC,gBAAX;AACAX,QAAAA,WAAW,GAToB,CAU/B;AACD,OAxCH;AAAA,6BA0CE,QAAC,YAAD;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,YAAY,EAAE,qBAFhB;AAGE,QAAA,QAAQ,EAAE,CAAC,eAAD,EAAkB,gBAAlB;AAHZ;AAAA;AAAA;AAAA;AAAA;AA1CF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CAlED;;AAoEA,eAAelB,KAAf","sourcesContent":["import React from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport moment from \"moment\";\nimport { debounce } from \"lodash\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nconst Table = ({ organisations }) => {\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"organisationName\",\n      headerName: \"First name\",\n      width: 150,\n      editable: true,\n    },\n  ];\n\n  return (\n    <div\n      className={\"ag-theme-alpine-dark\"}\n      style={{ height: \"70vh\", width: \"100%\" }}\n    >\n      <AgGridReact\n        onGridReady={onGridReady}\n        rowSelection={\"multiple\"}\n        suppressRowClickSelection={true}\n        statusBar={{\n          statusPanels: [\n            {\n              statusPanel: \"agTotalAndFilteredRowCountComponent\",\n              align: \"left\",\n            },\n            { statusPanel: \"agFilteredRowCountComponent\" },\n            { statusPanel: \"agSelectedRowCountComponent\" },\n            { statusPanel: \"agAggregationComponent\" },\n          ],\n        }}\n        enableRangeSelection={true}\n        masterDetail={true}\n        immutableData={true}\n        detailRowAutoHeight={true}\n        onBodyScroll={(event) => {\n          if (event.direction === \"vertical\") {\n            visibleRowsChange(event);\n          }\n        }}\n        getRowNodeId={(data) => {\n          return data._id;\n        }}\n        rowData={organisations}\n        detailCellRenderer={\"detailRenderer\"}\n        onFirstDataRendered={(params) => {\n          const autoSizeAll = (skipHeader) => {\n            var allColumnIds = [];\n            params.columnApi.getAllColumns().forEach(function (column) {\n              allColumnIds.push(column.colId);\n            });\n            params.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n          };\n          params.api.sizeColumnsToFit();\n          autoSizeAll();\n          // params.api.ensureIndexVisible(lastSelectedRow.organisationsAll, 'top');\n        }}\n      >\n        <AgGridColumn\n          field=\"organisationName\"\n          cellRenderer={\"agGroupCellRenderer\"}\n          menuTabs={[\"filterMenuTab\", \"generalMenuTab\"]}\n        />\n      </AgGridReact>\n    </div>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}