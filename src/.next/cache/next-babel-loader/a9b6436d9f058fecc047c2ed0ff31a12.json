{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/driver/driver-create-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { forwardRef, useImperativeHandle } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport { Box, Button, Divider, Grid, TextField, Typography } from \"@mui/material\";\nimport GoogleMaps from \"../driver/google-places-autocomplete\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { useDispatch } from \"../../../store\";\nimport { driverApi } from \"../../../api/driver-api\";\nimport { userApi } from \"../../../api/user-api\";\nexport const DriverCreateForm = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    handleNext\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"handleNext\"]);\n\n  const {\n    user,\n    initialize\n  } = useAuth();\n  const router = useRouter();\n  const dispatch = useDispatch();\n  useImperativeHandle(ref, () => ({\n    handleFormSubmit() {\n      formik.handleSubmit();\n    }\n\n  }));\n  const formik = useFormik({\n    initialValues: {\n      driverName: \"\",\n      city: \"\",\n      driverType: \"main\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(255).required(\"Name is required\").test(\"Unique Name\", \"A party already exists with this name\", // <- key, message\n      async function (value) {\n        try {\n          const response = await partyApi.validateDuplicateName(value, user);\n          return response;\n        } catch (error) {}\n      }),\n      mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Mobile is not valid\").required(\"Mobile is required\").test(\"Unique Mobile\", \"Mobile already in use\", // <- key, message\n      async function (value) {\n        try {\n          const response = await partyApi.validateDuplicateMobile(value, user);\n          return response;\n        } catch (error) {}\n      })\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        const id = uuid();\n        const newDriver = {\n          id: id,\n          name: values.name,\n          mobile: values.mobile,\n          user: user.id\n        };\n        await driverApi.createDriver(newDriver, dispatch);\n        toast.success(\"Driver created!\");\n        router.push(\"/dashboard/drivers\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      alignItems: \"center\",\n      sx: {\n        mb: 4,\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Enter Driver's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(formik.touched.name && formik.errors.name),\n          helperText: formik.touched.name && formik.errors.name,\n          fullWidth: true,\n          label: \"Main contact name\",\n          name: \"name\",\n          onBlur: formik.handleBlur,\n          onChange: event => {\n            formik.setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }));\n          },\n          required: true,\n          value: formik.values.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Enter Driver Mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(formik.touched.mobile && formik.errors.mobile),\n          fullWidth: true,\n          helperText: formik.touched.mobile && formik.errors.mobile,\n          label: \"Mobile\",\n          name: \"mobile\",\n          onBlur: formik.handleBlur,\n          onChange: async event => {\n            formik.setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n          },\n          value: formik.values.mobile,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"right\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n});","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/driver/driver-create-form.js"],"names":["forwardRef","useImperativeHandle","useRouter","toast","Yup","useFormik","v4","uuid","Box","Button","Divider","Grid","TextField","Typography","GoogleMaps","useAuth","useDispatch","driverApi","userApi","DriverCreateForm","ref","handleNext","props","user","initialize","router","dispatch","handleFormSubmit","formik","handleSubmit","initialValues","driverName","city","driverType","submit","validationSchema","object","name","string","max","required","test","value","response","partyApi","validateDuplicateName","error","mobile","matches","validateDuplicateMobile","onSubmit","values","helpers","id","newDriver","createDriver","success","push","err","console","setStatus","setErrors","message","setSubmitting","mb","mt","Boolean","touched","errors","handleBlur","event","setFieldValue","target","replace","txt","charAt","toUpperCase","substr","toLowerCase","display","flexWrap","justifyContent","mx","m"],"mappings":"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","sourcesContent":["import { forwardRef, useImperativeHandle } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport GoogleMaps from \"../driver/google-places-autocomplete\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { useDispatch } from \"../../../store\";\nimport { driverApi } from \"../../../api/driver-api\";\nimport { userApi } from \"../../../api/user-api\";\n\nexport const DriverCreateForm = forwardRef(({ handleNext, ...props }, ref) => {\n  const { user, initialize } = useAuth();\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  useImperativeHandle(ref, () => ({\n    handleFormSubmit() {\n      formik.handleSubmit();\n    },\n  }));\n\n  const formik = useFormik({\n    initialValues: {\n      driverName: \"\",\n      city: \"\",\n      driverType: \"main\",\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .max(255)\n        .required(\"Name is required\")\n        .test(\n          \"Unique Name\",\n          \"A party already exists with this name\", // <- key, message\n          async function (value) {\n            try {\n              const response = await partyApi.validateDuplicateName(\n                value,\n                user\n              );\n              return response;\n            } catch (error) {}\n          }\n        ),\n      mobile: Yup.string()\n        .matches(/^[6-9]\\d{9}$/, \"Mobile is not valid\")\n        .required(\"Mobile is required\")\n        .test(\n          \"Unique Mobile\",\n          \"Mobile already in use\", // <- key, message\n          async function (value) {\n            try {\n              const response = await partyApi.validateDuplicateMobile(\n                value,\n                user\n              );\n              return response;\n            } catch (error) {}\n          }\n        ),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        const id = uuid();\n        const newDriver = {\n          id: id,\n          name: values.name,\n          mobile: values.mobile,\n          user: user.id,\n        };\n        await driverApi.createDriver(newDriver, dispatch);\n\n        toast.success(\"Driver created!\");\n        router.push(\"/dashboard/drivers\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Grid container spacing={5} alignItems=\"center\" sx={{ mb: 4, mt: 2 }}>\n        <Grid item md={4} xs={12}>\n          <Typography variant=\"h6\">Enter Driver's name</Typography>\n        </Grid>\n        <Grid item md={8} xs={12}>\n          <TextField\n            error={Boolean(formik.touched.name && formik.errors.name)}\n            helperText={formik.touched.name && formik.errors.name}\n            fullWidth\n            label=\"Main contact name\"\n            name=\"name\"\n            onBlur={formik.handleBlur}\n            onChange={(event) => {\n              formik.setFieldValue(\n                \"name\",\n                event.target.value.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                })\n              );\n            }}\n            required\n            value={formik.values.name}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item md={4} xs={12}>\n          <Typography variant=\"h6\">Enter Driver Mobile</Typography>\n        </Grid>\n        <Grid item md={8} xs={12}>\n          <TextField\n            error={Boolean(formik.touched.mobile && formik.errors.mobile)}\n            fullWidth\n            helperText={formik.touched.mobile && formik.errors.mobile}\n            label=\"Mobile\"\n            name=\"mobile\"\n            onBlur={formik.handleBlur}\n            onChange={async (event) => {\n              formik.setFieldValue(\n                \"mobile\",\n                event.target.value.replace(/ /g, \"\")\n              );\n            }}\n            value={formik.values.mobile}\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"right\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}