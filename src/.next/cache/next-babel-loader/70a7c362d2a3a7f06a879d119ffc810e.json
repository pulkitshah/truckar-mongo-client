{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/utils/customFormatters.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport MaskedInput, { conformToMask } from \"react-text-mask\";\nimport PropTypes from \"prop-types\";\nvar vehicleNumberFormatter = /*#__PURE__*/React.forwardRef(function (props) {\n  return /*#__PURE__*/_jsxDEV(MaskedInput, _objectSpread(_objectSpread({}, props), {}, {\n    mask: function mask(rawValue) {\n      var mask = false;\n      var b = rawValue.replace(/-/g, \"\");\n\n      if (b.length > 2 && b.charAt(2).match(/[A-Z]/i)) {\n        mask = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n\n      if (b.length > 3 && b.charAt(2).match(/[0-9]/i) && b.charAt(3).match(/[A-Z]/i) && b.charAt(4).match(/[0-9]/i)) {\n        mask = [/[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, \"-\", /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n\n      if (b.length > 3 && b.charAt(2).match(/[0-9]/i) && b.charAt(3).match(/[A-Z]/i) && b.charAt(4).match(/[A-Z]/i)) {\n        mask = [/[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, \"-\", /[a-zA-Z]/, /[a-zA-Z0-9]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n\n      if (b.length > 4 && b.charAt(2).match(/[0-9]/i) && b.charAt(3).match(/[0-9]/i) && b.charAt(4).match(/[A-Z]/i) && b.charAt(5).match(/[0-9]/i)) {\n        mask = [/[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, \"-\", /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n      }\n\n      if (mask) return mask;\n      return [/[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[a-zA-Z0-9]/, /[a-zA-Z0-9]/, \"-\", /[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n    },\n    guide: false //   keepCharPositions={true}\n\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n});\nexport function conformVehicleNumber(value) {\n  var b = value.toUpperCase();\n  var mask = [/[A-Z]/, /[A-Z]/, \"-\", /[0-9]/, /[0-9]/, \"-\", /[A-Z]/, /[A-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n\n  if (b.length > 2 && b.charAt(2).match(/[A-Z]/i)) {\n    mask = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n  }\n\n  if (b.length > 3 && b.charAt(2).match(/[0-9]/i) && b.charAt(3).match(/[A-Z]/i) && b.charAt(4).match(/[0-9]/i)) {\n    mask = [/[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, \"-\", /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n  }\n\n  if (b.length > 3 && b.charAt(2).match(/[0-9]/i) && b.charAt(3).match(/[A-Z]/i) && b.charAt(4).match(/[A-Z]/i)) {\n    mask = [/[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, \"-\", /[a-zA-Z]/, /[a-zA-Z0-9]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n  }\n\n  if (b.length > 4 && b.charAt(2).match(/[0-9]/i) && b.charAt(3).match(/[0-9]/i) && b.charAt(4).match(/[A-Z]/i) && b.charAt(5).match(/[0-9]/i)) {\n    mask = [/[a-zA-Z]/, /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, \"-\", /[a-zA-Z]/, \"-\", /[0-9]/, /[0-9]/, /[0-9]/, /[0-9]/];\n  }\n\n  var a = conformToMask(b, mask, {\n    guide: false\n  });\n  console.log(a);\n  return a;\n}","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/utils/customFormatters.js"],"names":["React","MaskedInput","conformToMask","PropTypes","vehicleNumberFormatter","forwardRef","props","rawValue","mask","b","replace","length","charAt","match","conformVehicleNumber","value","toUpperCase","a","guide","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaskedInput, { conformToMask } from \"react-text-mask\";\nimport PropTypes from \"prop-types\";\n\nconst vehicleNumberFormatter = React.forwardRef((props) => {\n  return (\n    <MaskedInput\n      {...props}\n      mask={function (rawValue) {\n        let mask = false;\n        let b = rawValue.replace(/-/g, \"\");\n        if (b.length > 2 && b.charAt(2).match(/[A-Z]/i)) {\n          mask = [\n            /[a-zA-Z]/,\n            /[a-zA-Z]/,\n            /[a-zA-Z]/,\n            \"-\",\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n          ];\n        }\n        if (\n          b.length > 3 &&\n          b.charAt(2).match(/[0-9]/i) &&\n          b.charAt(3).match(/[A-Z]/i) &&\n          b.charAt(4).match(/[0-9]/i)\n        ) {\n          mask = [\n            /[a-zA-Z]/,\n            /[a-zA-Z]/,\n            \"-\",\n            /[0-9]/,\n            \"-\",\n            /[a-zA-Z]/,\n            \"-\",\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n          ];\n        }\n\n        if (\n          b.length > 3 &&\n          b.charAt(2).match(/[0-9]/i) &&\n          b.charAt(3).match(/[A-Z]/i) &&\n          b.charAt(4).match(/[A-Z]/i)\n        ) {\n          mask = [\n            /[a-zA-Z]/,\n            /[a-zA-Z]/,\n            \"-\",\n            /[0-9]/,\n            \"-\",\n            /[a-zA-Z]/,\n            /[a-zA-Z0-9]/,\n            \"-\",\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n          ];\n        }\n\n        if (\n          b.length > 4 &&\n          b.charAt(2).match(/[0-9]/i) &&\n          b.charAt(3).match(/[0-9]/i) &&\n          b.charAt(4).match(/[A-Z]/i) &&\n          b.charAt(5).match(/[0-9]/i)\n        ) {\n          mask = [\n            /[a-zA-Z]/,\n            /[a-zA-Z]/,\n            \"-\",\n            /[0-9]/,\n            /[0-9]/,\n            \"-\",\n            /[a-zA-Z]/,\n            \"-\",\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n            /[0-9]/,\n          ];\n        }\n        if (mask) return mask;\n        return [\n          /[a-zA-Z]/,\n          /[a-zA-Z]/,\n          \"-\",\n          /[a-zA-Z0-9]/,\n          /[a-zA-Z0-9]/,\n          \"-\",\n          /[a-zA-Z]/,\n          /[a-zA-Z]/,\n          \"-\",\n          /[0-9]/,\n          /[0-9]/,\n          /[0-9]/,\n          /[0-9]/,\n        ];\n      }}\n      guide={false}\n      //   keepCharPositions={true}\n    />\n  );\n});\n\nexport function conformVehicleNumber(value) {\n  let b = value.toUpperCase();\n  let mask = [\n    /[A-Z]/,\n    /[A-Z]/,\n    \"-\",\n    /[0-9]/,\n    /[0-9]/,\n    \"-\",\n    /[A-Z]/,\n    /[A-Z]/,\n    \"-\",\n    /[0-9]/,\n    /[0-9]/,\n    /[0-9]/,\n    /[0-9]/,\n  ];\n\n  if (b.length > 2 && b.charAt(2).match(/[A-Z]/i)) {\n    mask = [\n      /[a-zA-Z]/,\n      /[a-zA-Z]/,\n      /[a-zA-Z]/,\n      \"-\",\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n    ];\n  }\n  if (\n    b.length > 3 &&\n    b.charAt(2).match(/[0-9]/i) &&\n    b.charAt(3).match(/[A-Z]/i) &&\n    b.charAt(4).match(/[0-9]/i)\n  ) {\n    mask = [\n      /[a-zA-Z]/,\n      /[a-zA-Z]/,\n      \"-\",\n      /[0-9]/,\n      \"-\",\n      /[a-zA-Z]/,\n      \"-\",\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n    ];\n  }\n\n  if (\n    b.length > 3 &&\n    b.charAt(2).match(/[0-9]/i) &&\n    b.charAt(3).match(/[A-Z]/i) &&\n    b.charAt(4).match(/[A-Z]/i)\n  ) {\n    mask = [\n      /[a-zA-Z]/,\n      /[a-zA-Z]/,\n      \"-\",\n      /[0-9]/,\n      \"-\",\n      /[a-zA-Z]/,\n      /[a-zA-Z0-9]/,\n      \"-\",\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n    ];\n  }\n\n  if (\n    b.length > 4 &&\n    b.charAt(2).match(/[0-9]/i) &&\n    b.charAt(3).match(/[0-9]/i) &&\n    b.charAt(4).match(/[A-Z]/i) &&\n    b.charAt(5).match(/[0-9]/i)\n  ) {\n    mask = [\n      /[a-zA-Z]/,\n      /[a-zA-Z]/,\n      \"-\",\n      /[0-9]/,\n      /[0-9]/,\n      \"-\",\n      /[a-zA-Z]/,\n      \"-\",\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n      /[0-9]/,\n    ];\n  }\n\n  let a = conformToMask(b, mask, {\n    guide: false,\n  });\n  console.log(a);\n  return a;\n}\n"]},"metadata":{},"sourceType":"module"}