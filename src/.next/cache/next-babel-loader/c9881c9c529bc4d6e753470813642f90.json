{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/orders/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport { Box, Button, Divider, Grid, InputAdornment, Tab, Tabs, TextField, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { OrderDrawer } from \"../../../components/dashboard/order/order-drawer\";\nimport { OrderListTable } from \"../../../components/dashboard/order/order-list-table\";\nimport OrderGrid from \"../../../components/dashboard/order/order-grid\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { gtm } from \"../../../lib/gtm\"; // MongoDB Realm Imports\n\nimport getOrders from \"../../../graphql/orders\";\nimport getTrips from \"../../../graphql/trips\";\nimport getDeliveries from \"../../../graphql/deliveries\"; // DataStore Imports\n\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Order } from \"../../../models\"; // APP SYNC IMPORTS\n\nimport { API, Auth } from \"aws-amplify\";\nimport { ordersByUser } from \"../../../graphql/queries\";\nvar tabs = [{\n  label: \"All\",\n  value: \"all\"\n}, {\n  label: \"Canceled\",\n  value: \"canceled\"\n}, {\n  label: \"Completed\",\n  value: \"complete\"\n}, {\n  label: \"Pending\",\n  value: \"pending\"\n}, {\n  label: \"Rejected\",\n  value: \"rejected\"\n}];\nvar sortOptions = [{\n  label: \"Newest\",\n  value: \"desc\"\n}, {\n  label: \"Oldest\",\n  value: \"asc\"\n}];\n\nvar applyFilters = function applyFilters(orders, filters) {\n  return orders.filter(function (order) {\n    if (filters.query) {\n      // Checks only the order number, but can be extended to support other fields, such as customer\n      // name, email, etc.\n      var containsQuery = order.number.toLowerCase().includes(filters.query.toLowerCase());\n\n      if (!containsQuery) {\n        return false;\n      }\n    }\n\n    if (typeof filters.status !== \"undefined\") {\n      var statusMatched = order.status === filters.status;\n\n      if (!statusMatched) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n};\n\nvar applySort = function applySort(orders, order) {\n  return orders.sort(function (a, b) {\n    var comparator = a.createdAt > b.createdAt ? -1 : 1;\n    return order === \"desc\" ? comparator : -comparator;\n  });\n};\n\nvar applyPagination = function applyPagination(orders, page, rowsPerPage) {\n  return orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n};\n\nvar OrderListInner = styled(\"div\", {\n  shouldForwardProp: function shouldForwardProp(prop) {\n    return prop !== \"open\";\n  }\n})(function (_ref) {\n  var _objectSpread2, _ref2;\n\n  var theme = _ref.theme,\n      open = _ref.open;\n  return _objectSpread((_objectSpread2 = {\n    flexGrow: 1,\n    overflow: \"hidden\",\n    paddingBottom: theme.spacing(8),\n    paddingTop: theme.spacing(8),\n    zIndex: 1\n  }, _defineProperty(_objectSpread2, theme.breakpoints.up(\"lg\"), {\n    marginRight: -500\n  }), _defineProperty(_objectSpread2, \"transition\", theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  })), _objectSpread2), open && (_ref2 = {}, _defineProperty(_ref2, theme.breakpoints.up(\"lg\"), {\n    marginRight: 0\n  }), _defineProperty(_ref2, \"transition\", theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.enteringScreen\n  })), _ref2));\n});\n\nvar OrderList = function OrderList() {\n  _s();\n\n  var isMounted = useMounted();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var rootRef = useRef(null);\n  var queryRef = useRef(null);\n\n  var _useState = useState(\"all\"),\n      currentTab = _useState[0],\n      setCurrentTab = _useState[1];\n\n  var _useState2 = useState(\"desc\"),\n      sort = _useState2[0],\n      setSort = _useState2[1];\n\n  var _useState3 = useState(0),\n      page = _useState3[0],\n      setPage = _useState3[1];\n\n  var _useState4 = useState(5),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var _useState5 = useState([]),\n      orders = _useState5[0],\n      setOrders = _useState5[1];\n\n  var _useState6 = useState([]),\n      copiedOrders = _useState6[0],\n      setCopiedOrders = _useState6[1];\n\n  var _useState7 = useState({\n    query: \"\",\n    status: undefined\n  }),\n      filters = _useState7[0],\n      setFilters = _useState7[1];\n\n  var _useState8 = useState({\n    isOpen: false,\n    orderId: null\n  }),\n      drawer = _useState8[0],\n      setDrawer = _useState8[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var dataStoreItems, ordersforgrid;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return DataStore.query(Order);\n\n          case 2:\n            dataStoreItems = _context.sent;\n            ordersforgrid = _.map(dataStoreItems, function (item) {\n              return {\n                _id: item._id,\n                orderNo: item.orderNo,\n                saleDate: item.saleDate,\n                customer: item.customer\n              };\n            });\n            setOrders(ordersforgrid);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), // eslint-disable-next-line react-hooks/exhaustive-deps\n  []); // API FETCHING OF ORDERS FROM APP SYNC\n\n  function fetchOrders() {\n    return _fetchOrders.apply(this, arguments);\n  }\n\n  function _fetchOrders() {\n    _fetchOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _Auth$currentAuthenti, user, ordersDB;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _Auth$currentAuthenti = Auth.currentAuthenticatedUser(), user = _Auth$currentAuthenti.user;\n              _context2.next = 3;\n              return API.graphql({\n                query: ordersByUser,\n                variables: {\n                  user: user\n                }\n              });\n\n            case 3:\n              ordersDB = _context2.sent;\n              console.log(ordersDB);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchOrders.apply(this, arguments);\n  }\n\n  console.log(orders); // const getOrders = useCallback(async () => {\n  //   try {\n  //     const data = await orderApi.getOrdersTable();\n  //     if (isMounted()) {\n  //       setCopiedOrders(data.data);\n  //     }\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }, [isMounted]);\n\n  useEffect(function () {\n    fetchOrders();\n  }, []); // console.log(copiedOrders);\n  // useEffect(() => {\n  //   _.map(copiedOrders, async (item) => {\n  //     await DataStore.save(\n  //       new Order({\n  //         _id: item._id,\n  //         orderNo: item.orderNo,\n  //         user: item.user,\n  //         customer: item.customer,\n  //         saleDate: item.saleDate,\n  //       })\n  //     );\n  //     return {\n  //       id: item.id,\n  //       orderNo: item.orderNo,\n  //     };\n  //   });\n  //   console.log(\"saved \");\n  // }, [copiedOrders]);\n\n  var newOrder = useEffect(function () {\n    gtm.push({\n      event: \"page_view\"\n    });\n  }, []);\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    setCurrentTab(value);\n    setFilters(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        status: value === \"all\" ? undefined : value\n      });\n    });\n  };\n\n  var handleQueryChange = function handleQueryChange(event) {\n    event.preventDefault();\n    setFilters(function (prevState) {\n      var _queryRef$current;\n\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        query: (_queryRef$current = queryRef.current) === null || _queryRef$current === void 0 ? void 0 : _queryRef$current.value\n      });\n    });\n  };\n\n  var handleSortChange = function handleSortChange(event) {\n    var value = event.target.value;\n    setSort(value);\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleRowsPerPageChange = function handleRowsPerPageChange(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  var handleOpenDrawer = function handleOpenDrawer(orderId) {\n    setDrawer({\n      isOpen: true,\n      orderId: orderId\n    });\n  };\n\n  var handleCloseDrawer = function handleCloseDrawer() {\n    setDrawer({\n      isOpen: false,\n      orderId: null\n    });\n  }; // Usually query is done on backend with indexing solutions\n\n\n  var filteredOrders = applyFilters(orders, filters);\n  var sortedOrders = applySort(filteredOrders, sort);\n  var paginatedOrders = applyPagination(sortedOrders, page, rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard: Order List | Material Kit Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      ref: rootRef,\n      sx: {\n        backgroundColor: \"background.paper\",\n        display: \"flex\",\n        flexGrow: 1,\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(OrderListInner, {\n        open: drawer.isOpen,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            px: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: t(\"Orders\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(NextLink, {\n                href: \"/dashboard/orders/new\",\n                passHref: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: \"a\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 32\n                  }, _this),\n                  variant: \"contained\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Tabs, {\n            indicatorColor: \"primary\",\n            onChange: handleTabsChange,\n            scrollButtons: \"auto\",\n            textColor: \"primary\",\n            value: currentTab,\n            sx: {\n              mt: 3\n            },\n            variant: \"scrollable\",\n            children: tabs.map(function (tab) {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                label: tab.label,\n                value: tab.value\n              }, tab.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            m: -1.5,\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            onSubmit: handleQueryChange,\n            sx: {\n              flexGrow: 1,\n              m: 1.5\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              defaultValue: \"\",\n              fullWidth: true,\n              inputProps: {\n                ref: queryRef\n              },\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, _this)\n              },\n              placeholder: \"Search by order number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Sort By\",\n            name: \"order\",\n            onChange: handleSortChange,\n            select: true,\n            SelectProps: {\n              \"native\": true\n            },\n            sx: {\n              m: 1.5\n            },\n            value: sort,\n            children: sortOptions.map(function (option) {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(OrderGrid, {\n          orders: orders\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(OrderDrawer, {\n        containerRef: rootRef,\n        onClose: handleCloseDrawer,\n        open: drawer.isOpen,\n        order: orders.find(function (order) {\n          return order.id === drawer.orderId;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(OrderList, \"3U1iRKPG486F83ROLHljDxTISoE=\", false, function () {\n  return [useMounted, useTranslation];\n});\n\n_c = OrderList;\n\nOrderList.getLayout = function (page) {\n  return /*#__PURE__*/_jsxDEV(AuthGuard, {\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 3\n  }, _this);\n};\n\nexport default OrderList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderList\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/orders/index.js"],"names":["useCallback","useEffect","useRef","useState","NextLink","Head","useTranslation","moment","Box","Button","Divider","Grid","InputAdornment","Tab","Tabs","TextField","Typography","styled","orderApi","AuthGuard","DashboardLayout","OrderDrawer","OrderListTable","OrderGrid","useMounted","Plus","PlusIcon","Search","SearchIcon","gtm","getOrders","getTrips","getDeliveries","DataStore","Predicates","Order","API","Auth","ordersByUser","tabs","label","value","sortOptions","applyFilters","orders","filters","filter","order","query","containsQuery","number","toLowerCase","includes","status","statusMatched","applySort","sort","a","b","comparator","createdAt","applyPagination","page","rowsPerPage","slice","OrderListInner","shouldForwardProp","prop","theme","open","flexGrow","overflow","paddingBottom","spacing","paddingTop","zIndex","breakpoints","up","marginRight","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","OrderList","isMounted","t","rootRef","queryRef","currentTab","setCurrentTab","setSort","setPage","setRowsPerPage","setOrders","copiedOrders","setCopiedOrders","undefined","setFilters","isOpen","orderId","drawer","setDrawer","dataStoreItems","ordersforgrid","_","map","item","_id","orderNo","saleDate","customer","fetchOrders","currentAuthenticatedUser","user","graphql","variables","ordersDB","console","log","newOrder","push","event","handleTabsChange","prevState","handleQueryChange","preventDefault","current","handleSortChange","target","handlePageChange","newPage","handleRowsPerPageChange","parseInt","handleOpenDrawer","handleCloseDrawer","filteredOrders","sortedOrders","paginatedOrders","backgroundColor","display","px","mt","tab","alignItems","flexWrap","m","p","ref","startAdornment","option","find","id","getLayout"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Grid,\n  InputAdornment,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { OrderDrawer } from \"../../../components/dashboard/order/order-drawer\";\nimport { OrderListTable } from \"../../../components/dashboard/order/order-list-table\";\nimport OrderGrid from \"../../../components/dashboard/order/order-grid\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { gtm } from \"../../../lib/gtm\";\n\n// MongoDB Realm Imports\nimport getOrders from \"../../../graphql/orders\";\nimport getTrips from \"../../../graphql/trips\";\nimport getDeliveries from \"../../../graphql/deliveries\";\n\n// DataStore Imports\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Order } from \"../../../models\";\n\n// APP SYNC IMPORTS\n\nimport { API, Auth } from \"aws-amplify\";\nimport { ordersByUser } from \"../../../graphql/queries\";\n\nconst tabs = [\n  {\n    label: \"All\",\n    value: \"all\",\n  },\n  {\n    label: \"Canceled\",\n    value: \"canceled\",\n  },\n  {\n    label: \"Completed\",\n    value: \"complete\",\n  },\n  {\n    label: \"Pending\",\n    value: \"pending\",\n  },\n  {\n    label: \"Rejected\",\n    value: \"rejected\",\n  },\n];\n\nconst sortOptions = [\n  {\n    label: \"Newest\",\n    value: \"desc\",\n  },\n  {\n    label: \"Oldest\",\n    value: \"asc\",\n  },\n];\n\nconst applyFilters = (orders, filters) =>\n  orders.filter((order) => {\n    if (filters.query) {\n      // Checks only the order number, but can be extended to support other fields, such as customer\n      // name, email, etc.\n      const containsQuery = order.number\n        .toLowerCase()\n        .includes(filters.query.toLowerCase());\n\n      if (!containsQuery) {\n        return false;\n      }\n    }\n\n    if (typeof filters.status !== \"undefined\") {\n      const statusMatched = order.status === filters.status;\n\n      if (!statusMatched) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\nconst applySort = (orders, order) =>\n  orders.sort((a, b) => {\n    const comparator = a.createdAt > b.createdAt ? -1 : 1;\n\n    return order === \"desc\" ? comparator : -comparator;\n  });\n\nconst applyPagination = (orders, page, rowsPerPage) =>\n  orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\nconst OrderListInner = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  flexGrow: 1,\n  overflow: \"hidden\",\n  paddingBottom: theme.spacing(8),\n  paddingTop: theme.spacing(8),\n  zIndex: 1,\n  [theme.breakpoints.up(\"lg\")]: {\n    marginRight: -500,\n  },\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    [theme.breakpoints.up(\"lg\")]: {\n      marginRight: 0,\n    },\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst OrderList = () => {\n  const isMounted = useMounted();\n  const { t } = useTranslation();\n  const rootRef = useRef(null);\n  const queryRef = useRef(null);\n  const [currentTab, setCurrentTab] = useState(\"all\");\n  const [sort, setSort] = useState(\"desc\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [orders, setOrders] = useState([]);\n  const [copiedOrders, setCopiedOrders] = useState([]);\n\n  const [filters, setFilters] = useState({\n    query: \"\",\n    status: undefined,\n  });\n  const [drawer, setDrawer] = useState({\n    isOpen: false,\n    orderId: null,\n  });\n\n  useEffect(\n    async () => {\n      let dataStoreItems = await DataStore.query(Order);\n      let ordersforgrid = _.map(dataStoreItems, (item) => {\n        return {\n          _id: item._id,\n          orderNo: item.orderNo,\n          saleDate: item.saleDate,\n          customer: item.customer,\n        };\n      });\n      setOrders(ordersforgrid);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // API FETCHING OF ORDERS FROM APP SYNC\n\n  async function fetchOrders() {\n    const { user } = Auth.currentAuthenticatedUser();\n\n    const ordersDB = await API.graphql({\n      query: ordersByUser,\n      variables: { user },\n    });\n\n    console.log(ordersDB);\n  }\n\n  console.log(orders);\n\n  // const getOrders = useCallback(async () => {\n  //   try {\n  //     const data = await orderApi.getOrdersTable();\n\n  //     if (isMounted()) {\n  //       setCopiedOrders(data.data);\n  //     }\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }, [isMounted]);\n\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  // console.log(copiedOrders);\n\n  // useEffect(() => {\n  //   _.map(copiedOrders, async (item) => {\n  //     await DataStore.save(\n  //       new Order({\n  //         _id: item._id,\n  //         orderNo: item.orderNo,\n  //         user: item.user,\n  //         customer: item.customer,\n  //         saleDate: item.saleDate,\n  //       })\n  //     );\n\n  //     return {\n  //       id: item.id,\n  //       orderNo: item.orderNo,\n  //     };\n  //   });\n  //   console.log(\"saved \");\n  // }, [copiedOrders]);\n\n  const newOrder = useEffect(() => {\n    gtm.push({ event: \"page_view\" });\n  }, []);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n    setFilters((prevState) => ({\n      ...prevState,\n      status: value === \"all\" ? undefined : value,\n    }));\n  };\n\n  const handleQueryChange = (event) => {\n    event.preventDefault();\n    setFilters((prevState) => ({\n      ...prevState,\n      query: queryRef.current?.value,\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    const value = event.target.value;\n    setSort(value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  const handleOpenDrawer = (orderId) => {\n    setDrawer({\n      isOpen: true,\n      orderId,\n    });\n  };\n\n  const handleCloseDrawer = () => {\n    setDrawer({\n      isOpen: false,\n      orderId: null,\n    });\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredOrders = applyFilters(orders, filters);\n  const sortedOrders = applySort(filteredOrders, sort);\n  const paginatedOrders = applyPagination(sortedOrders, page, rowsPerPage);\n\n  return (\n    <>\n      <Head>\n        <title>Dashboard: Order List | Material Kit Pro</title>\n      </Head>\n      <Box\n        component=\"main\"\n        ref={rootRef}\n        sx={{\n          backgroundColor: \"background.paper\",\n          display: \"flex\",\n          flexGrow: 1,\n          overflow: \"hidden\",\n        }}\n      >\n        <OrderListInner open={drawer.isOpen}>\n          <Box sx={{ px: 3 }}>\n            <Grid container justifyContent=\"space-between\" spacing={3}>\n              <Grid item>\n                <Typography variant=\"h4\">{t(\"Orders\")}</Typography>\n              </Grid>\n              <Grid item>\n                <NextLink href=\"/dashboard/orders/new\" passHref>\n                  <Button\n                    component=\"a\"\n                    startIcon={<PlusIcon fontSize=\"small\" />}\n                    variant=\"contained\"\n                  >\n                    Add\n                  </Button>\n                </NextLink>\n              </Grid>\n            </Grid>\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              textColor=\"primary\"\n              value={currentTab}\n              sx={{ mt: 3 }}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab key={tab.value} label={tab.label} value={tab.value} />\n              ))}\n            </Tabs>\n          </Box>\n          <Divider />\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              m: -1.5,\n              p: 3,\n            }}\n          >\n            <Box\n              component=\"form\"\n              onSubmit={handleQueryChange}\n              sx={{\n                flexGrow: 1,\n                m: 1.5,\n              }}\n            >\n              <TextField\n                defaultValue=\"\"\n                fullWidth\n                inputProps={{ ref: queryRef }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  ),\n                }}\n                placeholder=\"Search by order number\"\n              />\n            </Box>\n            <TextField\n              label=\"Sort By\"\n              name=\"order\"\n              onChange={handleSortChange}\n              select\n              SelectProps={{ native: true }}\n              sx={{ m: 1.5 }}\n              value={sort}\n            >\n              {sortOptions.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </TextField>\n          </Box>\n          <Divider />\n          {/* <OrderListTable\n            onOpenDrawer={handleOpenDrawer}\n            onPageChange={handlePageChange}\n            onRowsPerPageChange={handleRowsPerPageChange}\n            orders={paginatedOrders}\n            ordersCount={filteredOrders.length}\n            page={page}\n            rowsPerPage={rowsPerPage}\n          /> */}\n          <OrderGrid orders={orders} />\n        </OrderListInner>\n        <OrderDrawer\n          containerRef={rootRef}\n          onClose={handleCloseDrawer}\n          open={drawer.isOpen}\n          order={orders.find((order) => order.id === drawer.orderId)}\n        />\n      </Box>\n    </>\n  );\n};\n\nOrderList.getLayout = (page) => (\n  <AuthGuard>\n    <DashboardLayout>{page}</DashboardLayout>\n  </AuthGuard>\n);\n\nexport default OrderList;\n"]},"metadata":{},"sourceType":"module"}