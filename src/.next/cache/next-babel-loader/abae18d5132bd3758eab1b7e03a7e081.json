{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/parties/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport Head from 'next/head';\nimport { Box, Button, Card, Container, Divider, Grid, InputAdornment, Tab, Tabs, TextField, Typography } from '@mui/material';\nimport { customerApi } from '../../../__fake-api__/customer-api';\nimport { AuthGuard } from '../../../components/authentication/auth-guard';\nimport { DashboardLayout } from '../../../components/dashboard/dashboard-layout';\nimport { CustomerListTable } from '../../../components/dashboard/customer/customer-list-table';\nimport { useMounted } from '../../../hooks/use-mounted';\nimport { Download as DownloadIcon } from '../../../icons/download';\nimport { Plus as PlusIcon } from '../../../icons/plus';\nimport { Search as SearchIcon } from '../../../icons/search';\nimport { Upload as UploadIcon } from '../../../icons/upload';\nimport { gtm } from '../../../lib/gtm';\nvar tabs = [{\n  label: 'All',\n  value: 'all'\n}, {\n  label: 'Accepts Marketing',\n  value: 'hasAcceptedMarketing'\n}, {\n  label: 'Prospect',\n  value: 'isProspect'\n}, {\n  label: 'Returning',\n  value: 'isReturning'\n}];\nvar sortOptions = [{\n  label: 'Last update (newest)',\n  value: 'updatedAt|desc'\n}, {\n  label: 'Last update (oldest)',\n  value: 'updatedAt|asc'\n}, {\n  label: 'Total orders (highest)',\n  value: 'orders|desc'\n}, {\n  label: 'Total orders (lowest)',\n  value: 'orders|asc'\n}];\n\nvar applyFilters = function applyFilters(customers, filters) {\n  return customers.filter(function (customer) {\n    if (filters.query) {\n      var queryMatched = false;\n      var properties = ['email', 'name'];\n      properties.forEach(function (property) {\n        if (customer[property].toLowerCase().includes(filters.query.toLowerCase())) {\n          queryMatched = true;\n        }\n      });\n\n      if (!queryMatched) {\n        return false;\n      }\n    }\n\n    if (filters.hasAcceptedMarketing && !customer.hasAcceptedMarketing) {\n      return false;\n    }\n\n    if (filters.isProspect && !customer.isProspect) {\n      return false;\n    }\n\n    if (filters.isReturning && !customer.isReturning) {\n      return false;\n    }\n\n    return true;\n  });\n};\n\nvar descendingComparator = function descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nvar getComparator = function getComparator(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return descendingComparator(a, b, orderBy);\n  } : function (a, b) {\n    return -descendingComparator(a, b, orderBy);\n  };\n};\n\nvar applySort = function applySort(customers, sort) {\n  var _sort$split = sort.split('|'),\n      _sort$split2 = _slicedToArray(_sort$split, 2),\n      orderBy = _sort$split2[0],\n      order = _sort$split2[1];\n\n  var comparator = getComparator(order, orderBy);\n  var stabilizedThis = customers.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n};\n\nvar applyPagination = function applyPagination(customers, page, rowsPerPage) {\n  return customers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n};\n\nvar CustomerList = function CustomerList() {\n  _s();\n\n  var isMounted = useMounted();\n  var queryRef = useRef(null);\n\n  var _useState = useState([]),\n      customers = _useState[0],\n      setCustomers = _useState[1];\n\n  var _useState2 = useState('all'),\n      currentTab = _useState2[0],\n      setCurrentTab = _useState2[1];\n\n  var _useState3 = useState(0),\n      page = _useState3[0],\n      setPage = _useState3[1];\n\n  var _useState4 = useState(10),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var _useState5 = useState(sortOptions[0].value),\n      sort = _useState5[0],\n      setSort = _useState5[1];\n\n  var _useState6 = useState({\n    query: '',\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  }),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  useEffect(function () {\n    gtm.push({\n      event: 'page_view'\n    });\n  }, []);\n  var getCustomers = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return customerApi.getCustomers();\n\n          case 3:\n            data = _context.sent;\n\n            if (isMounted()) {\n              setCustomers(data);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  })), [isMounted]);\n  useEffect(function () {\n    getCustomers();\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n\n  var handleTabsChange = function handleTabsChange(event, value) {\n    var updatedFilters = _objectSpread(_objectSpread({}, filters), {}, {\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    });\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setCurrentTab(value);\n  };\n\n  var handleQueryChange = function handleQueryChange(event) {\n    event.preventDefault();\n    setFilters(function (prevState) {\n      var _queryRef$current;\n\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        query: (_queryRef$current = queryRef.current) === null || _queryRef$current === void 0 ? void 0 : _queryRef$current.value\n      });\n    });\n  };\n\n  var handleSortChange = function handleSortChange(event) {\n    setSort(event.target.value);\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleRowsPerPageChange = function handleRowsPerPageChange(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }; // Usually query is done on backend with indexing solutions\n\n\n  var filteredCustomers = applyFilters(customers, filters);\n  var sortedCustomers = applySort(filteredCustomers, sort);\n  var paginatedCustomers = applyPagination(sortedCustomers, page, rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard: Customer List | Material Kit Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        py: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Customers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 30\n                }, _this),\n                variant: \"contained\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              m: -1,\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 34\n              }, _this),\n              sx: {\n                m: 1\n              },\n              children: \"Import\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 28\n              }, _this),\n              sx: {\n                m: 1\n              },\n              children: \"Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            indicatorColor: \"primary\",\n            onChange: handleTabsChange,\n            scrollButtons: \"auto\",\n            sx: {\n              px: 3\n            },\n            textColor: \"primary\",\n            value: currentTab,\n            variant: \"scrollable\",\n            children: tabs.map(function (tab) {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                label: tab.label,\n                value: tab.value\n              }, tab.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: 'center',\n              display: 'flex',\n              flexWrap: 'wrap',\n              m: -1.5,\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              onSubmit: handleQueryChange,\n              sx: {\n                flexGrow: 1,\n                m: 1.5\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                defaultValue: \"\",\n                fullWidth: true,\n                inputProps: {\n                  ref: queryRef\n                },\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, _this)\n                },\n                placeholder: \"Search customers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Sort By\",\n              name: \"sort\",\n              onChange: handleSortChange,\n              select: true,\n              SelectProps: {\n                \"native\": true\n              },\n              sx: {\n                m: 1.5\n              },\n              value: sort,\n              children: sortOptions.map(function (option) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CustomerListTable, {\n            customers: paginatedCustomers,\n            customersCount: filteredCustomers.length,\n            onPageChange: handlePageChange,\n            onRowsPerPageChange: handleRowsPerPageChange,\n            rowsPerPage: rowsPerPage,\n            page: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(CustomerList, \"2AkgNk57mEAKr0IlBFdnxcKkHhY=\", false, function () {\n  return [useMounted];\n});\n\n_c = CustomerList;\n\nCustomerList.getLayout = function (page) {\n  return /*#__PURE__*/_jsxDEV(AuthGuard, {\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 3\n  }, _this);\n};\n\nexport default CustomerList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/parties/index.js"],"names":["useState","useEffect","useCallback","useRef","Head","Box","Button","Card","Container","Divider","Grid","InputAdornment","Tab","Tabs","TextField","Typography","customerApi","AuthGuard","DashboardLayout","CustomerListTable","useMounted","Download","DownloadIcon","Plus","PlusIcon","Search","SearchIcon","Upload","UploadIcon","gtm","tabs","label","value","sortOptions","applyFilters","customers","filters","filter","customer","query","queryMatched","properties","forEach","property","toLowerCase","includes","hasAcceptedMarketing","isProspect","isReturning","descendingComparator","a","b","orderBy","getComparator","order","applySort","sort","split","comparator","stabilizedThis","map","el","index","newOrder","applyPagination","page","rowsPerPage","slice","CustomerList","isMounted","queryRef","setCustomers","currentTab","setCurrentTab","setPage","setRowsPerPage","setSort","setFilters","push","event","getCustomers","data","console","error","handleTabsChange","updatedFilters","handleQueryChange","preventDefault","prevState","current","handleSortChange","target","handlePageChange","newPage","handleRowsPerPageChange","parseInt","filteredCustomers","sortedCustomers","paginatedCustomers","flexGrow","py","mb","m","mt","px","tab","alignItems","display","flexWrap","p","ref","startAdornment","option","length","getLayout"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,OAAzD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,cAPF,EAQEC,GARF,EASEC,IATF,EAUEC,SAVF,EAWEC,UAXF,QAYO,eAZP;AAaA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,SAAT,QAA0B,+CAA1B;AACA,SAASC,eAAT,QAAgC,gDAAhC;AACA,SAASC,iBAAT,QAAkC,4DAAlC;AACA,SAASC,UAAT,QAA2B,4BAA3B;AACA,SAASC,QAAQ,IAAIC,YAArB,QAAyC,yBAAzC;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,qBAAjC;AACA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,uBAArC;AACA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,uBAArC;AACA,SAASC,GAAT,QAAoB,kBAApB;AAEA,IAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADW,EAKX;AACED,EAAAA,KAAK,EAAE,mBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALW,EASX;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATW,EAaX;AACED,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbW,CAAb;AAmBA,IAAMC,WAAW,GAAG,CAClB;AACEF,EAAAA,KAAK,EAAE,sBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADkB,EAKlB;AACED,EAAAA,KAAK,EAAE,sBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALkB,EASlB;AACED,EAAAA,KAAK,EAAE,wBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATkB,EAalB;AACED,EAAAA,KAAK,EAAE,uBADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbkB,CAApB;;AAmBA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAYC,OAAZ;AAAA,SACnBD,SAAS,CAACE,MAAV,CAAiB,UAACC,QAAD,EAAc;AAC7B,QAAIF,OAAO,CAACG,KAAZ,EAAmB;AACjB,UAAIC,YAAY,GAAG,KAAnB;AACA,UAAMC,UAAU,GAAG,CAAC,OAAD,EAAU,MAAV,CAAnB;AAEAA,MAAAA,UAAU,CAACC,OAAX,CAAmB,UAACC,QAAD,EAAc;AAC/B,YACEL,QAAQ,CAACK,QAAD,CAAR,CAAmBC,WAAnB,GAAiCC,QAAjC,CAA0CT,OAAO,CAACG,KAAR,CAAcK,WAAd,EAA1C,CADF,EAEE;AACAJ,UAAAA,YAAY,GAAG,IAAf;AACD;AACF,OAND;;AAQA,UAAI,CAACA,YAAL,EAAmB;AACjB,eAAO,KAAP;AACD;AACF;;AAED,QAAIJ,OAAO,CAACU,oBAAR,IAAgC,CAACR,QAAQ,CAACQ,oBAA9C,EAAoE;AAClE,aAAO,KAAP;AACD;;AAED,QAAIV,OAAO,CAACW,UAAR,IAAsB,CAACT,QAAQ,CAACS,UAApC,EAAgD;AAC9C,aAAO,KAAP;AACD;;AAED,QAAIX,OAAO,CAACY,WAAR,IAAuB,CAACV,QAAQ,CAACU,WAArC,EAAkD;AAChD,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GA/BD,CADmB;AAAA,CAArB;;AAkCA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,EAAmB;AAC9C,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAC,CAAR;AACD;;AAED,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AAC3B,WAAO,CAAP;AACD;;AAED,SAAO,CAAP;AACD,CAVD;;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQF,OAAR;AAAA,SACpBE,KAAK,KAAK,MAAV,GACI,UAACJ,CAAD,EAAIC,CAAJ;AAAA,WAAUF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAA9B;AAAA,GADJ,GAEI,UAACF,CAAD,EAAIC,CAAJ;AAAA,WAAU,CAACF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAA/B;AAAA,GAHgB;AAAA,CAAtB;;AAKA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACpB,SAAD,EAAYqB,IAAZ,EAAqB;AAAA,oBACZA,IAAI,CAACC,KAAL,CAAW,GAAX,CADY;AAAA;AAAA,MAC9BL,OAD8B;AAAA,MACrBE,KADqB;;AAErC,MAAMI,UAAU,GAAGL,aAAa,CAACC,KAAD,EAAQF,OAAR,CAAhC;AACA,MAAMO,cAAc,GAAGxB,SAAS,CAACyB,GAAV,CAAc,UAACC,EAAD,EAAKC,KAAL;AAAA,WAAe,CAACD,EAAD,EAAKC,KAAL,CAAf;AAAA,GAAd,CAAvB;AAEAH,EAAAA,cAAc,CAACH,IAAf,CAAoB,UAACN,CAAD,EAAIC,CAAJ,EAAU;AAC5B,QAAMY,QAAQ,GAAGL,UAAU,CAACR,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAA3B;;AAEA,QAAIY,QAAQ,KAAK,CAAjB,EAAoB;AAClB,aAAOA,QAAP;AACD;;AAED,WAAOb,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACD,GARD;AAUA,SAAOQ,cAAc,CAACC,GAAf,CAAmB,UAACC,EAAD;AAAA,WAAQA,EAAE,CAAC,CAAD,CAAV;AAAA,GAAnB,CAAP;AACD,CAhBD;;AAkBA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAC7B,SAAD,EAAY8B,IAAZ,EAAkBC,WAAlB;AAAA,SACtB/B,SAAS,CAACgC,KAAV,CAAgBF,IAAI,GAAGC,WAAvB,EAAoCD,IAAI,GAAGC,WAAP,GAAqBA,WAAzD,CADsB;AAAA,CAAxB;;AAGA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,SAAS,GAAGjD,UAAU,EAA5B;AACA,MAAMkD,QAAQ,GAAGnE,MAAM,CAAC,IAAD,CAAvB;;AAFyB,kBAGSH,QAAQ,CAAC,EAAD,CAHjB;AAAA,MAGlBmC,SAHkB;AAAA,MAGPoC,YAHO;;AAAA,mBAIWvE,QAAQ,CAAC,KAAD,CAJnB;AAAA,MAIlBwE,UAJkB;AAAA,MAINC,aAJM;;AAAA,mBAKDzE,QAAQ,CAAC,CAAD,CALP;AAAA,MAKlBiE,IALkB;AAAA,MAKZS,OALY;;AAAA,mBAMa1E,QAAQ,CAAC,EAAD,CANrB;AAAA,MAMlBkE,WANkB;AAAA,MAMLS,cANK;;AAAA,mBAOD3E,QAAQ,CAACiC,WAAW,CAAC,CAAD,CAAX,CAAeD,KAAhB,CAPP;AAAA,MAOlBwB,IAPkB;AAAA,MAOZoB,OAPY;;AAAA,mBAQK5E,QAAQ,CAAC;AACrCuC,IAAAA,KAAK,EAAE,EAD8B;AAErCO,IAAAA,oBAAoB,EAAE,IAFe;AAGrCC,IAAAA,UAAU,EAAE,IAHyB;AAIrCC,IAAAA,WAAW,EAAE;AAJwB,GAAD,CARb;AAAA,MAQlBZ,OARkB;AAAA,MAQTyC,UARS;;AAezB5E,EAAAA,SAAS,CAAC,YAAM;AACd4B,IAAAA,GAAG,CAACiD,IAAJ,CAAS;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAT;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMC,YAAY,GAAG9E,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEVc,WAAW,CAACgE,YAAZ,EAFU;;AAAA;AAEvBC,YAAAA,IAFuB;;AAI7B,gBAAIZ,SAAS,EAAb,EAAiB;AACfE,cAAAA,YAAY,CAACU,IAAD,CAAZ;AACD;;AAN4B;AAAA;;AAAA;AAAA;AAAA;AAQ7BC,YAAAA,OAAO,CAACC,KAAR;;AAR6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAU7B,CAACd,SAAD,CAV6B,CAAhC;AAYApE,EAAAA,SAAS,CACP,YAAM;AACJ+E,IAAAA,YAAY;AACb,GAHM,EAIP;AACA,IALO,CAAT;;AAQA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACL,KAAD,EAAQ/C,KAAR,EAAkB;AACzC,QAAMqD,cAAc,mCACfjD,OADe;AAElBU,MAAAA,oBAAoB,EAAE,IAFJ;AAGlBC,MAAAA,UAAU,EAAE,IAHM;AAIlBC,MAAAA,WAAW,EAAE;AAJK,MAApB;;AAOA,QAAIhB,KAAK,KAAK,KAAd,EAAqB;AACnBqD,MAAAA,cAAc,CAACrD,KAAD,CAAd,GAAwB,IAAxB;AACD;;AAED6C,IAAAA,UAAU,CAACQ,cAAD,CAAV;AACAZ,IAAAA,aAAa,CAACzC,KAAD,CAAb;AACD,GAdD;;AAgBA,MAAMsD,iBAAiB,GAAG,SAApBA,iBAAoB,CAACP,KAAD,EAAW;AACnCA,IAAAA,KAAK,CAACQ,cAAN;AACAV,IAAAA,UAAU,CAAC,UAACW,SAAD;AAAA;;AAAA,6CACNA,SADM;AAETjD,QAAAA,KAAK,uBAAE+B,QAAQ,CAACmB,OAAX,sDAAE,kBAAkBzD;AAFhB;AAAA,KAAD,CAAV;AAID,GAND;;AAQA,MAAM0D,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACX,KAAD,EAAW;AAClCH,IAAAA,OAAO,CAACG,KAAK,CAACY,MAAN,CAAa3D,KAAd,CAAP;AACD,GAFD;;AAIA,MAAM4D,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACb,KAAD,EAAQc,OAAR,EAAoB;AAC3CnB,IAAAA,OAAO,CAACmB,OAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACf,KAAD,EAAW;AACzCJ,IAAAA,cAAc,CAACoB,QAAQ,CAAChB,KAAK,CAACY,MAAN,CAAa3D,KAAd,EAAqB,EAArB,CAAT,CAAd;AACD,GAFD,CAvEyB,CA2EzB;;;AACA,MAAMgE,iBAAiB,GAAG9D,YAAY,CAACC,SAAD,EAAYC,OAAZ,CAAtC;AACA,MAAM6D,eAAe,GAAG1C,SAAS,CAACyC,iBAAD,EAAoBxC,IAApB,CAAjC;AACA,MAAM0C,kBAAkB,GAAGlC,eAAe,CACxCiC,eADwC,EAExChC,IAFwC,EAGxCC,WAHwC,CAA1C;AAMA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,EAAE,EAAE;AACFiC,QAAAA,QAAQ,EAAE,CADR;AAEFC,QAAAA,EAAE,EAAE;AAFF,OAFN;AAAA,6BAOE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAAT;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,eAA/B;AAA+C,YAAA,OAAO,EAAE,CAAxD;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,SAAS,eAAE,QAAC,QAAD;AAAU,kBAAA,QAAQ,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,yBADb;AAEE,gBAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAcE,QAAC,GAAD;AACE,YAAA,EAAE,EAAE;AACFC,cAAAA,CAAC,EAAE,CAAC,CADF;AAEFC,cAAAA,EAAE,EAAE;AAFF,aADN;AAAA,oCAME,QAAC,MAAD;AAAQ,cAAA,SAAS,eAAE,QAAC,UAAD;AAAY,gBAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,uBAAnB;AAAoD,cAAA,EAAE,EAAE;AAAED,gBAAAA,CAAC,EAAE;AAAL,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,eASE,QAAC,MAAD;AACE,cAAA,SAAS,eAAE,QAAC,YAAD;AAAc,gBAAA,QAAQ,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,uBADb;AAEE,cAAA,EAAE,EAAE;AAAEA,gBAAAA,CAAC,EAAE;AAAL,eAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAgCE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD;AACE,YAAA,cAAc,EAAC,SADjB;AAEE,YAAA,QAAQ,EAAElB,gBAFZ;AAGE,YAAA,aAAa,EAAC,MAHhB;AAIE,YAAA,EAAE,EAAE;AAAEoB,cAAAA,EAAE,EAAE;AAAN,aAJN;AAKE,YAAA,SAAS,EAAC,SALZ;AAME,YAAA,KAAK,EAAEhC,UANT;AAOE,YAAA,OAAO,EAAC,YAPV;AAAA,sBASG1C,IAAI,CAAC8B,GAAL,CAAS,UAAC6C,GAAD;AAAA,kCACR,QAAC,GAAD;AAAqB,gBAAA,KAAK,EAAEA,GAAG,CAAC1E,KAAhC;AAAuC,gBAAA,KAAK,EAAE0E,GAAG,CAACzE;AAAlD,iBAAUyE,GAAG,CAACzE,KAAd;AAAA;AAAA;AAAA;AAAA,uBADQ;AAAA,aAAT;AATH;AAAA;AAAA;AAAA;AAAA,mBADF,eAcE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,mBAdF,eAeE,QAAC,GAAD;AACE,YAAA,EAAE,EAAE;AACF0E,cAAAA,UAAU,EAAE,QADV;AAEFC,cAAAA,OAAO,EAAE,MAFP;AAGFC,cAAAA,QAAQ,EAAE,MAHR;AAIFN,cAAAA,CAAC,EAAE,CAAC,GAJF;AAKFO,cAAAA,CAAC,EAAE;AALD,aADN;AAAA,oCASE,QAAC,GAAD;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,QAAQ,EAAEvB,iBAFZ;AAGE,cAAA,EAAE,EAAE;AACFa,gBAAAA,QAAQ,EAAE,CADR;AAEFG,gBAAAA,CAAC,EAAE;AAFD,eAHN;AAAA,qCAQE,QAAC,SAAD;AACE,gBAAA,YAAY,EAAC,EADf;AAEE,gBAAA,SAAS,MAFX;AAGE,gBAAA,UAAU,EAAE;AAAEQ,kBAAAA,GAAG,EAAExC;AAAP,iBAHd;AAIE,gBAAA,UAAU,EAAE;AACVyC,kBAAAA,cAAc,eACZ,QAAC,cAAD;AAAgB,oBAAA,QAAQ,EAAC,OAAzB;AAAA,2CACE,QAAC,UAAD;AAAY,sBAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFQ,iBAJd;AAWE,gBAAA,WAAW,EAAC;AAXd;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,qBATF,eA+BE,QAAC,SAAD;AACE,cAAA,KAAK,EAAC,SADR;AAEE,cAAA,IAAI,EAAC,MAFP;AAGE,cAAA,QAAQ,EAAErB,gBAHZ;AAIE,cAAA,MAAM,MAJR;AAKE,cAAA,WAAW,EAAE;AAAE,0BAAQ;AAAV,eALf;AAME,cAAA,EAAE,EAAE;AAAEY,gBAAAA,CAAC,EAAE;AAAL,eANN;AAOE,cAAA,KAAK,EAAE9C,IAPT;AAAA,wBASGvB,WAAW,CAAC2B,GAAZ,CAAgB,UAACoD,MAAD;AAAA,oCACf;AAA2B,kBAAA,KAAK,EAAEA,MAAM,CAAChF,KAAzC;AAAA,4BACGgF,MAAM,CAACjF;AADV,mBAAaiF,MAAM,CAAChF,KAApB;AAAA;AAAA;AAAA;AAAA,yBADe;AAAA,eAAhB;AATH;AAAA;AAAA;AAAA;AAAA,qBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAfF,eA8DE,QAAC,iBAAD;AACE,YAAA,SAAS,EAAEkE,kBADb;AAEE,YAAA,cAAc,EAAEF,iBAAiB,CAACiB,MAFpC;AAGE,YAAA,YAAY,EAAErB,gBAHhB;AAIE,YAAA,mBAAmB,EAAEE,uBAJvB;AAKE,YAAA,WAAW,EAAE5B,WALf;AAME,YAAA,IAAI,EAAED;AANR;AAAA;AAAA;AAAA;AAAA,mBA9DF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBADF;AAuHD,CA3MD;;GAAMG,Y;UACchD,U;;;KADdgD,Y;;AA6MNA,YAAY,CAAC8C,SAAb,GAAyB,UAACjD,IAAD;AAAA,sBACvB,QAAC,SAAD;AAAA,2BACE,QAAC,eAAD;AAAA,gBAAkBA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADuB;AAAA,CAAzB;;AAMA,eAAeG,YAAf","sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react';\nimport Head from 'next/head';\nimport {\n  Box,\n  Button,\n  Card,\n  Container,\n  Divider,\n  Grid,\n  InputAdornment,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { customerApi } from '../../../__fake-api__/customer-api';\nimport { AuthGuard } from '../../../components/authentication/auth-guard';\nimport { DashboardLayout } from '../../../components/dashboard/dashboard-layout';\nimport { CustomerListTable } from '../../../components/dashboard/customer/customer-list-table';\nimport { useMounted } from '../../../hooks/use-mounted';\nimport { Download as DownloadIcon } from '../../../icons/download';\nimport { Plus as PlusIcon } from '../../../icons/plus';\nimport { Search as SearchIcon } from '../../../icons/search';\nimport { Upload as UploadIcon } from '../../../icons/upload';\nimport { gtm } from '../../../lib/gtm';\n\nconst tabs = [\n  {\n    label: 'All',\n    value: 'all',\n  },\n  {\n    label: 'Accepts Marketing',\n    value: 'hasAcceptedMarketing',\n  },\n  {\n    label: 'Prospect',\n    value: 'isProspect',\n  },\n  {\n    label: 'Returning',\n    value: 'isReturning',\n  },\n];\n\nconst sortOptions = [\n  {\n    label: 'Last update (newest)',\n    value: 'updatedAt|desc',\n  },\n  {\n    label: 'Last update (oldest)',\n    value: 'updatedAt|asc',\n  },\n  {\n    label: 'Total orders (highest)',\n    value: 'orders|desc',\n  },\n  {\n    label: 'Total orders (lowest)',\n    value: 'orders|asc',\n  },\n];\n\nconst applyFilters = (customers, filters) =>\n  customers.filter((customer) => {\n    if (filters.query) {\n      let queryMatched = false;\n      const properties = ['email', 'name'];\n\n      properties.forEach((property) => {\n        if (\n          customer[property].toLowerCase().includes(filters.query.toLowerCase())\n        ) {\n          queryMatched = true;\n        }\n      });\n\n      if (!queryMatched) {\n        return false;\n      }\n    }\n\n    if (filters.hasAcceptedMarketing && !customer.hasAcceptedMarketing) {\n      return false;\n    }\n\n    if (filters.isProspect && !customer.isProspect) {\n      return false;\n    }\n\n    if (filters.isReturning && !customer.isReturning) {\n      return false;\n    }\n\n    return true;\n  });\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) =>\n  order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst applyPagination = (customers, page, rowsPerPage) =>\n  customers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\nconst CustomerList = () => {\n  const isMounted = useMounted();\n  const queryRef = useRef(null);\n  const [customers, setCustomers] = useState([]);\n  const [currentTab, setCurrentTab] = useState('all');\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    query: '',\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null,\n  });\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getCustomers = useCallback(async () => {\n    try {\n      const data = await customerApi.getCustomers();\n\n      if (isMounted()) {\n        setCustomers(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMounted]);\n\n  useEffect(\n    () => {\n      getCustomers();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null,\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.preventDefault();\n    setFilters((prevState) => ({\n      ...prevState,\n      query: queryRef.current?.value,\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredCustomers = applyFilters(customers, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(\n    sortedCustomers,\n    page,\n    rowsPerPage\n  );\n\n  return (\n    <>\n      <Head>\n        <title>Dashboard: Customer List | Material Kit Pro</title>\n      </Head>\n      <Box\n        component='main'\n        sx={{\n          flexGrow: 1,\n          py: 8,\n        }}\n      >\n        <Container maxWidth='xl'>\n          <Box sx={{ mb: 4 }}>\n            <Grid container justifyContent='space-between' spacing={3}>\n              <Grid item>\n                <Typography variant='h4'>Customers</Typography>\n              </Grid>\n              <Grid item>\n                <Button\n                  startIcon={<PlusIcon fontSize='small' />}\n                  variant='contained'\n                >\n                  Add\n                </Button>\n              </Grid>\n            </Grid>\n            <Box\n              sx={{\n                m: -1,\n                mt: 3,\n              }}\n            >\n              <Button startIcon={<UploadIcon fontSize='small' />} sx={{ m: 1 }}>\n                Import\n              </Button>\n              <Button\n                startIcon={<DownloadIcon fontSize='small' />}\n                sx={{ m: 1 }}\n              >\n                Export\n              </Button>\n            </Box>\n          </Box>\n          <Card>\n            <Tabs\n              indicatorColor='primary'\n              onChange={handleTabsChange}\n              scrollButtons='auto'\n              sx={{ px: 3 }}\n              textColor='primary'\n              value={currentTab}\n              variant='scrollable'\n            >\n              {tabs.map((tab) => (\n                <Tab key={tab.value} label={tab.label} value={tab.value} />\n              ))}\n            </Tabs>\n            <Divider />\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexWrap: 'wrap',\n                m: -1.5,\n                p: 3,\n              }}\n            >\n              <Box\n                component='form'\n                onSubmit={handleQueryChange}\n                sx={{\n                  flexGrow: 1,\n                  m: 1.5,\n                }}\n              >\n                <TextField\n                  defaultValue=''\n                  fullWidth\n                  inputProps={{ ref: queryRef }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position='start'>\n                        <SearchIcon fontSize='small' />\n                      </InputAdornment>\n                    ),\n                  }}\n                  placeholder='Search customers'\n                />\n              </Box>\n              <TextField\n                label='Sort By'\n                name='sort'\n                onChange={handleSortChange}\n                select\n                SelectProps={{ native: true }}\n                sx={{ m: 1.5 }}\n                value={sort}\n              >\n                {sortOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Box>\n            <CustomerListTable\n              customers={paginatedCustomers}\n              customersCount={filteredCustomers.length}\n              onPageChange={handlePageChange}\n              onRowsPerPageChange={handleRowsPerPageChange}\n              rowsPerPage={rowsPerPage}\n              page={page}\n            />\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nCustomerList.getLayout = (page) => (\n  <AuthGuard>\n    <DashboardLayout>{page}</DashboardLayout>\n  </AuthGuard>\n);\n\nexport default CustomerList;\n"]},"metadata":{},"sourceType":"module"}