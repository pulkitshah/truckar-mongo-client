{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { organisationApi } from \"../api/organisation-api\";\nimport axios from \"../utils/axios\";\nvar initialState = {\n  organisations: [],\n  organisationIds: [],\n  isNextPageLoading: true\n};\nexport var slice = createSlice({\n  name: \"organisation\",\n  initialState: initialState,\n  reducers: {\n    getOrganisations: function getOrganisations(state, action) {\n      var organisations = action.payload;\n      state.organisations = organisations;\n      state.isNextPageLoading = false;\n    },\n    createOrganisation: function createOrganisation(state, action) {\n      var organisation = action.payload.organisation;\n      state.organisations = [].concat(_toConsumableArray(state.organisations), [organisation]);\n    },\n    selectOrganisation: function selectOrganisation(state, action) {\n      var _action$payload$organ = action.payload.organisationId,\n          organisationId = _action$payload$organ === void 0 ? null : _action$payload$organ;\n      state.isModalOpen = true;\n      state.selectedOrganisationId = organisationId;\n    },\n    updateOrganisation: function updateOrganisation(state, action) {\n      var organisation = action.payload.organisation;\n      state.organisations = _.map(state.organisations, function (_organisation) {\n        console.log(_organisation);\n\n        if (_organisation.id === organisation.id) {\n          return organisation;\n        }\n\n        return _organisation;\n      });\n    },\n    deleteOrganisation: function deleteOrganisation(state, action) {\n      var organisationId = action.payload.organisationId;\n      state.organisations = _.reject(state.organisations, {\n        id: organisationId\n      });\n    },\n    selectRange: function selectRange(state, action) {\n      var _action$payload = action.payload,\n          start = _action$payload.start,\n          end = _action$payload.end;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start: start,\n        end: end\n      };\n    },\n    openModal: function openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal: function closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrganisationId = null;\n      state.selectedRange = null;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getOrganisations = function getOrganisations(limit) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return organisationApi.getOrganisationsByUser();\n\n            case 2:\n              response = _context.sent;\n              console.log(\"getOrganisations = ()\");\n              dispatch(slice.actions.getOrganisations(response.data));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var createOrganisation = function createOrganisation(data) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"/api/calendar/organisations/new\", data);\n\n            case 2:\n              response = _context2.sent;\n              dispatch(slice.actions.createOrganisation(response.data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var selectOrganisation = function selectOrganisation(organisationId) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch(slice.actions.selectOrganisation({\n                organisationId: organisationId\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updateOrganisation = function updateOrganisation(organisationId, update) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.post(\"/api/calendar/organisations/update\", {\n                organisationId: organisationId,\n                update: update\n              });\n\n            case 2:\n              response = _context4.sent;\n              dispatch(slice.actions.updateOrganisation(response.data));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteOrganisation = function deleteOrganisation(organisationId) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return axios.post(\"/api/calendar/organisations/remove\", {\n                organisationId: organisationId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteOrganisation({\n                organisationId: organisationId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var selectRange = function selectRange(start, end) {\n  return function (dispatch) {\n    dispatch(slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime()\n    }));\n  };\n};\nexport var openModal = function openModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.openModal());\n  };\n};\nexport var closeModal = function closeModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.closeModal());\n  };\n};\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/organisations.js"],"names":["createSlice","_","organisationApi","axios","initialState","organisations","organisationIds","isNextPageLoading","slice","name","reducers","getOrganisations","state","action","payload","createOrganisation","organisation","selectOrganisation","organisationId","isModalOpen","selectedOrganisationId","updateOrganisation","map","_organisation","console","log","id","deleteOrganisation","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer","limit","dispatch","getOrganisationsByUser","response","actions","data","post","update","getTime"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { organisationApi } from \"../api/organisation-api\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  organisations: [],\n  organisationIds: [],\n  isNextPageLoading: true,\n};\n\nexport const slice = createSlice({\n  name: \"organisation\",\n  initialState,\n  reducers: {\n    getOrganisations(state, action) {\n      const organisations = action.payload;\n      state.organisations = organisations;\n      state.isNextPageLoading = false;\n    },\n    createOrganisation(state, action) {\n      const { organisation } = action.payload;\n\n      state.organisations = [...state.organisations, organisation];\n    },\n    selectOrganisation(state, action) {\n      const { organisationId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedOrganisationId = organisationId;\n    },\n    updateOrganisation(state, action) {\n      const { organisation } = action.payload;\n\n      state.organisations = _.map(state.organisations, (_organisation) => {\n        console.log(_organisation);\n        if (_organisation.id === organisation.id) {\n          return organisation;\n        }\n\n        return _organisation;\n      });\n    },\n    deleteOrganisation(state, action) {\n      const { organisationId } = action.payload;\n\n      state.organisations = _.reject(state.organisations, {\n        id: organisationId,\n      });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrganisationId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport const getOrganisations = (limit) => async (dispatch) => {\n  const response = await organisationApi.getOrganisationsByUser();\n  console.log(\"getOrganisations = ()\");\n  dispatch(slice.actions.getOrganisations(response.data));\n};\n\nexport const createOrganisation = (data) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/organisations/new\", data);\n\n  dispatch(slice.actions.createOrganisation(response.data));\n};\n\nexport const selectOrganisation = (organisationId) => async (dispatch) => {\n  dispatch(slice.actions.selectOrganisation({ organisationId }));\n};\n\nexport const updateOrganisation =\n  (organisationId, update) => async (dispatch) => {\n    const response = await axios.post(\"/api/calendar/organisations/update\", {\n      organisationId,\n      update,\n    });\n\n    dispatch(slice.actions.updateOrganisation(response.data));\n  };\n\nexport const deleteOrganisation = (organisationId) => async (dispatch) => {\n  await axios.post(\"/api/calendar/organisations/remove\", {\n    organisationId,\n  });\n\n  dispatch(slice.actions.deleteOrganisation({ organisationId }));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(\n    slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime(),\n    })\n  );\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}