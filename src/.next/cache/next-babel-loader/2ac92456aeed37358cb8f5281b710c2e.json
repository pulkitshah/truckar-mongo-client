{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport axios from \"../utils/axios\";\nconst initialState = {\n  orders: [],\n  orderIds: [],\n  isNextPageLoading: true\n};\nconst slice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    getOrders(state, action) {\n      const orders = action.payload;\n      state.orders = orders;\n      state.isNextPageLoading = false;\n    },\n\n    getOrderIds(state, action) {\n      const orderIds = action.payload;\n      state.orderIds = orderIds;\n      state.isNextPageLoading = false;\n    },\n\n    addOrders(state, action) {\n      const newOrders = action.payload;\n      state.orders = [...state.orders, ...newOrders];\n    },\n\n    addOrderId(state, action) {\n      const orderIds = action.payload;\n      state.orderIds = [...orderIds, ...state.orderIds];\n    },\n\n    updateDelivery(state, action) {\n      const delivery = action.payload;\n      state.orders = _.map(state.orders, _order => {\n        if (_order._id.toString() === delivery.order.toString()) {\n          console.log(_order);\n          let newOrder = _order;\n          newOrder.trips[0].deliveries = newOrder.trips[0].deliveries.map(_delivery => {\n            if (_delivery._id === delivery._id) {\n              return delivery;\n            }\n\n            return _delivery;\n          });\n          return newOrder;\n        }\n\n        return _order;\n      });\n    },\n\n    createOrder(state, action) {\n      const {\n        order\n      } = action.payload;\n      state.orders = [...state.orders, order];\n    },\n\n    selectOrder(state, action) {\n      const {\n        orderId = null\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedOrderId = orderId;\n    },\n\n    updateOrder(state, action) {\n      const {\n        order\n      } = action.payload;\n      state.orders = _.map(state.orders, _order => {\n        if (_order.id === order.id) {\n          return order;\n        }\n\n        return _order;\n      });\n    },\n\n    deleteOrder(state, action) {\n      const {\n        orderId\n      } = action.payload;\n      state.orders = _.reject(state.orders, {\n        id: orderId\n      });\n    },\n\n    selectRange(state, action) {\n      const {\n        start,\n        end\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrderId = null;\n      state.selectedRange = null;\n    }\n\n  }\n});\nexport const reducer = slice.reducer;\nexport const getOrders = limit => async dispatch => {\n  const response = await axios.get(`/api/orders?page=1&limit=${limit}`);\n  console.log(\"getOrders = ()\");\n  dispatch(slice.actions.getOrders(response.data));\n};\nexport const getOrderIds = () => async dispatch => {\n  const response = await axios.get(`/api/orders/orderids?page=1&limit=1500`);\n  console.log(\"getOrderIds = ()\");\n  dispatch(slice.actions.getOrderIds(response.data));\n};\nexport const addOrders = (page, limit) => async dispatch => {\n  const response = await axios.get(`/api/orders?page=${page + 1}&limit=${limit}`);\n  console.log(`addOrders = (${page}, ${limit})`);\n  dispatch(slice.actions.addOrders(response.data));\n};\nexport const addOrderId = orderIdArray => async dispatch => {\n  dispatch(slice.actions.addOrderId(orderIdArray));\n};\nexport const updateDelivery = (deliveryId, values) => async dispatch => {\n  const response = await axios.patch(`/api/orders/delivery/${deliveryId}`, values);\n  console.log(`updateWeights = (${deliveryId}, })`);\n  dispatch(slice.actions.updateDelivery(response.data));\n};\nexport const createOrder = data => async dispatch => {\n  const response = await axios.post(\"/api/calendar/orders/new\", data);\n  dispatch(slice.actions.createOrder(response.data));\n};\nexport const selectOrder = orderId => async dispatch => {\n  dispatch(slice.actions.selectOrder({\n    orderId\n  }));\n};\nexport const updateOrder = (orderId, update) => async dispatch => {\n  const response = await axios.post(\"/api/calendar/orders/update\", {\n    orderId,\n    update\n  });\n  dispatch(slice.actions.updateOrder(response.data));\n};\nexport const deleteOrder = orderId => async dispatch => {\n  await axios.post(\"/api/calendar/orders/remove\", {\n    orderId\n  });\n  dispatch(slice.actions.deleteOrder({\n    orderId\n  }));\n};\nexport const selectRange = (start, end) => dispatch => {\n  dispatch(slice.actions.selectRange({\n    start: start.getTime(),\n    end: end.getTime()\n  }));\n};\nexport const openModal = () => dispatch => {\n  dispatch(slice.actions.openModal());\n};\nexport const closeModal = () => dispatch => {\n  dispatch(slice.actions.closeModal());\n};\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/orders.js"],"names":["createSlice","_","axios","initialState","orders","orderIds","isNextPageLoading","slice","name","reducers","getOrders","state","action","payload","getOrderIds","addOrders","newOrders","addOrderId","updateDelivery","delivery","map","_order","_id","toString","order","console","log","newOrder","trips","deliveries","_delivery","createOrder","selectOrder","orderId","isModalOpen","selectedOrderId","updateOrder","id","deleteOrder","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer","limit","dispatch","response","get","actions","data","page","orderIdArray","deliveryId","values","patch","post","update","getTime"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  orders: [],\n  orderIds: [],\n  isNextPageLoading: true,\n};\n\nconst slice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    getOrders(state, action) {\n      const orders = action.payload;\n      state.orders = orders;\n      state.isNextPageLoading = false;\n    },\n    getOrderIds(state, action) {\n      const orderIds = action.payload;\n      state.orderIds = orderIds;\n      state.isNextPageLoading = false;\n    },\n    addOrders(state, action) {\n      const newOrders = action.payload;\n      state.orders = [...state.orders, ...newOrders];\n    },\n    addOrderId(state, action) {\n      const orderIds = action.payload;\n      state.orderIds = [...orderIds, ...state.orderIds];\n    },\n    updateDelivery(state, action) {\n      const delivery = action.payload;\n\n      state.orders = _.map(state.orders, (_order) => {\n        if (_order._id.toString() === delivery.order.toString()) {\n          console.log(_order);\n          let newOrder = _order;\n          newOrder.trips[0].deliveries = newOrder.trips[0].deliveries.map(\n            (_delivery) => {\n              if (_delivery._id === delivery._id) {\n                return delivery;\n              }\n              return _delivery;\n            }\n          );\n          return newOrder;\n        }\n\n        return _order;\n      });\n    },\n    createOrder(state, action) {\n      const { order } = action.payload;\n\n      state.orders = [...state.orders, order];\n    },\n    selectOrder(state, action) {\n      const { orderId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedOrderId = orderId;\n    },\n    updateOrder(state, action) {\n      const { order } = action.payload;\n\n      state.orders = _.map(state.orders, (_order) => {\n        if (_order.id === order.id) {\n          return order;\n        }\n\n        return _order;\n      });\n    },\n    deleteOrder(state, action) {\n      const { orderId } = action.payload;\n\n      state.orders = _.reject(state.orders, { id: orderId });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedOrderId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport const getOrders = (limit) => async (dispatch) => {\n  const response = await axios.get(`/api/orders?page=1&limit=${limit}`);\n  console.log(\"getOrders = ()\");\n  dispatch(slice.actions.getOrders(response.data));\n};\n\nexport const getOrderIds = () => async (dispatch) => {\n  const response = await axios.get(`/api/orders/orderids?page=1&limit=1500`);\n  console.log(\"getOrderIds = ()\");\n  dispatch(slice.actions.getOrderIds(response.data));\n};\n\nexport const addOrders = (page, limit) => async (dispatch) => {\n  const response = await axios.get(\n    `/api/orders?page=${page + 1}&limit=${limit}`\n  );\n  console.log(`addOrders = (${page}, ${limit})`);\n\n  dispatch(slice.actions.addOrders(response.data));\n};\n\nexport const addOrderId = (orderIdArray) => async (dispatch) => {\n  dispatch(slice.actions.addOrderId(orderIdArray));\n};\n\nexport const updateDelivery = (deliveryId, values) => async (dispatch) => {\n  const response = await axios.patch(\n    `/api/orders/delivery/${deliveryId}`,\n    values\n  );\n  console.log(`updateWeights = (${deliveryId}, })`);\n\n  dispatch(slice.actions.updateDelivery(response.data));\n};\n\nexport const createOrder = (data) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/orders/new\", data);\n\n  dispatch(slice.actions.createOrder(response.data));\n};\n\nexport const selectOrder = (orderId) => async (dispatch) => {\n  dispatch(slice.actions.selectOrder({ orderId }));\n};\n\nexport const updateOrder = (orderId, update) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/orders/update\", {\n    orderId,\n    update,\n  });\n\n  dispatch(slice.actions.updateOrder(response.data));\n};\n\nexport const deleteOrder = (orderId) => async (dispatch) => {\n  await axios.post(\"/api/calendar/orders/remove\", {\n    orderId,\n  });\n\n  dispatch(slice.actions.deleteOrder({ orderId }));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(\n    slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime(),\n    })\n  );\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}