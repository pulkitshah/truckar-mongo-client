{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/organisations/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useRef, useState } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport { Box, Button, Divider, Grid, InputAdornment, Tab, Tabs, TextField, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { organisationApi } from \"../../../api/organisation-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { OnBoardingGuard } from \"../../../components/authentication/onboarding-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { OrganisationDrawer } from \"../../../components/dashboard/organisation/organisation-drawer\";\nimport OrganisationGrid from \"../../../components/dashboard/organisation/organisation-grid\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { gtm } from \"../../../lib/gtm\"; // DataStore Imports\n// import { DataStore, Predicates } from \"@aws-amplify/datastore\";\n// import { Organisation } from \"../../../models\";\n\nconst tabs = [{\n  label: \"All\",\n  value: \"all\"\n}, {\n  label: \"Canceled\",\n  value: \"canceled\"\n}, {\n  label: \"Completed\",\n  value: \"complete\"\n}, {\n  label: \"Pending\",\n  value: \"pending\"\n}, {\n  label: \"Rejected\",\n  value: \"rejected\"\n}];\nconst sortOptions = [{\n  label: \"Newest\",\n  value: \"desc\"\n}, {\n  label: \"Oldest\",\n  value: \"asc\"\n}];\n\nconst applyFilters = (organisations, filters) => organisations.filter(organisation => {\n  if (filters.query) {\n    // Checks only the organisation number, but can be extended to support other fields, such as customer\n    // name, email, etc.\n    const containsQuery = organisation.number.toLowerCase().includes(filters.query.toLowerCase());\n\n    if (!containsQuery) {\n      return false;\n    }\n  }\n\n  if (typeof filters.status !== \"undefined\") {\n    const statusMatched = organisation.status === filters.status;\n\n    if (!statusMatched) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nconst applySort = (organisations, organisation) => organisations.sort((a, b) => {\n  const comparator = a.createdAt > b.createdAt ? -1 : 1;\n  return organisation === \"desc\" ? comparator : -comparator;\n});\n\nconst OrganisationListInner = styled(\"div\", {\n  shouldForwardProp: prop => prop !== \"open\"\n})(({\n  theme,\n  open\n}) => _objectSpread({\n  flexGrow: 1,\n  overflow: \"hidden\",\n  paddingBottom: theme.spacing(8),\n  paddingTop: theme.spacing(8),\n  zIndex: 1,\n  [theme.breakpoints.up(\"lg\")]: {\n    marginRight: -500\n  },\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}, open && {\n  [theme.breakpoints.up(\"lg\")]: {\n    marginRight: 0\n  },\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}));\n\nconst OrganisationList = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    user\n  } = useAuth();\n  const rootRef = useRef(null);\n  const {\n    0: organisations,\n    1: setOrganisations\n  } = useState([]);\n  const {\n    0: drawer,\n    1: setDrawer\n  } = useState({\n    isOpen: false,\n    organisationId: null\n  });\n  useEffect(async () => {\n    try {\n      const organisationsDB = await organisationApi.getOrganisationsByUser(user);\n      setOrganisations(organisationsDB.data.organisationsByUser.items);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const handleCloseDrawer = () => {\n    setDrawer({\n      isOpen: false,\n      organisationId: null\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard: Organisation List | Truckar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      ref: rootRef,\n      sx: {\n        backgroundColor: \"background.paper\",\n        display: \"flex\",\n        flexGrow: 1,\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(OrganisationListInner, {\n        open: drawer.isOpen,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            px: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: t(\"Organisations\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(NextLink, {\n                href: \"/dashboard/organisations/new\",\n                passHref: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: \"a\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 32\n                  }, this),\n                  variant: \"contained\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 400,\n            width: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(OrganisationGrid, {\n            organisations: organisations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrganisationDrawer, {\n        containerRef: rootRef,\n        onClose: handleCloseDrawer,\n        open: drawer.isOpen,\n        organisation: organisations.find(organisation => organisation.id === drawer.organisationId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nOrganisationList.getLayout = page => /*#__PURE__*/_jsxDEV(AuthGuard, {\n  children: /*#__PURE__*/_jsxDEV(OnBoardingGuard, {\n    children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 208,\n  columnNumber: 3\n}, this);\n\nexport default OrganisationList;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/organisations/index.js"],"names":["useEffect","useRef","useState","NextLink","Head","useTranslation","moment","Box","Button","Divider","Grid","InputAdornment","Tab","Tabs","TextField","Typography","styled","organisationApi","AuthGuard","OnBoardingGuard","DashboardLayout","OrganisationDrawer","OrganisationGrid","useMounted","useAuth","Plus","PlusIcon","Search","SearchIcon","gtm","tabs","label","value","sortOptions","applyFilters","organisations","filters","filter","organisation","query","containsQuery","number","toLowerCase","includes","status","statusMatched","applySort","sort","a","b","comparator","createdAt","OrganisationListInner","shouldForwardProp","prop","theme","open","flexGrow","overflow","paddingBottom","spacing","paddingTop","zIndex","breakpoints","up","marginRight","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","OrganisationList","t","user","rootRef","setOrganisations","drawer","setDrawer","isOpen","organisationId","organisationsDB","getOrganisationsByUser","data","organisationsByUser","items","error","console","log","handleCloseDrawer","backgroundColor","display","px","height","width","find","id","getLayout","page"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Grid,\n  InputAdornment,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { organisationApi } from \"../../../api/organisation-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { OnBoardingGuard } from \"../../../components/authentication/onboarding-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { OrganisationDrawer } from \"../../../components/dashboard/organisation/organisation-drawer\";\nimport OrganisationGrid from \"../../../components/dashboard/organisation/organisation-grid\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { gtm } from \"../../../lib/gtm\";\n\n// DataStore Imports\n// import { DataStore, Predicates } from \"@aws-amplify/datastore\";\n// import { Organisation } from \"../../../models\";\n\nconst tabs = [\n  {\n    label: \"All\",\n    value: \"all\",\n  },\n  {\n    label: \"Canceled\",\n    value: \"canceled\",\n  },\n  {\n    label: \"Completed\",\n    value: \"complete\",\n  },\n  {\n    label: \"Pending\",\n    value: \"pending\",\n  },\n  {\n    label: \"Rejected\",\n    value: \"rejected\",\n  },\n];\n\nconst sortOptions = [\n  {\n    label: \"Newest\",\n    value: \"desc\",\n  },\n  {\n    label: \"Oldest\",\n    value: \"asc\",\n  },\n];\n\nconst applyFilters = (organisations, filters) =>\n  organisations.filter((organisation) => {\n    if (filters.query) {\n      // Checks only the organisation number, but can be extended to support other fields, such as customer\n      // name, email, etc.\n      const containsQuery = organisation.number\n        .toLowerCase()\n        .includes(filters.query.toLowerCase());\n\n      if (!containsQuery) {\n        return false;\n      }\n    }\n\n    if (typeof filters.status !== \"undefined\") {\n      const statusMatched = organisation.status === filters.status;\n\n      if (!statusMatched) {\n        return false;\n      }\n    }\n\n    return true;\n  });\n\nconst applySort = (organisations, organisation) =>\n  organisations.sort((a, b) => {\n    const comparator = a.createdAt > b.createdAt ? -1 : 1;\n\n    return organisation === \"desc\" ? comparator : -comparator;\n  });\n\nconst OrganisationListInner = styled(\"div\", {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  flexGrow: 1,\n  overflow: \"hidden\",\n  paddingBottom: theme.spacing(8),\n  paddingTop: theme.spacing(8),\n  zIndex: 1,\n  [theme.breakpoints.up(\"lg\")]: {\n    marginRight: -500,\n  },\n  transition: theme.transitions.create(\"margin\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    [theme.breakpoints.up(\"lg\")]: {\n      marginRight: 0,\n    },\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\nconst OrganisationList = () => {\n  const { t } = useTranslation();\n  const { user } = useAuth();\n  const rootRef = useRef(null);\n  const [organisations, setOrganisations] = useState([]);\n\n  const [drawer, setDrawer] = useState({\n    isOpen: false,\n    organisationId: null,\n  });\n\n  useEffect(async () => {\n    try {\n      const organisationsDB = await organisationApi.getOrganisationsByUser(\n        user\n      );\n      setOrganisations(organisationsDB.data.organisationsByUser.items);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const handleCloseDrawer = () => {\n    setDrawer({\n      isOpen: false,\n      organisationId: null,\n    });\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Dashboard: Organisation List | Truckar</title>\n      </Head>\n      <Box\n        component=\"main\"\n        ref={rootRef}\n        sx={{\n          backgroundColor: \"background.paper\",\n          display: \"flex\",\n          flexGrow: 1,\n          overflow: \"hidden\",\n        }}\n      >\n        <OrganisationListInner open={drawer.isOpen}>\n          <Box sx={{ px: 3 }}>\n            <Grid container justifyContent=\"space-between\" spacing={3}>\n              <Grid item>\n                <Typography variant=\"h4\">{t(\"Organisations\")}</Typography>\n              </Grid>\n              <Grid item>\n                <NextLink href=\"/dashboard/organisations/new\" passHref>\n                  <Button\n                    component=\"a\"\n                    startIcon={<PlusIcon fontSize=\"small\" />}\n                    variant=\"contained\"\n                  >\n                    Add\n                  </Button>\n                </NextLink>\n              </Grid>\n            </Grid>\n          </Box>\n\n          <div style={{ height: 400, width: \"100%\" }}>\n            <OrganisationGrid organisations={organisations} />\n          </div>\n        </OrganisationListInner>\n        <OrganisationDrawer\n          containerRef={rootRef}\n          onClose={handleCloseDrawer}\n          open={drawer.isOpen}\n          organisation={organisations.find(\n            (organisation) => organisation.id === drawer.organisationId\n          )}\n        />\n      </Box>\n    </>\n  );\n};\n\nOrganisationList.getLayout = (page) => (\n  <AuthGuard>\n    <OnBoardingGuard>\n      <DashboardLayout>{page}</DashboardLayout>\n    </OnBoardingGuard>\n  </AuthGuard>\n);\n\nexport default OrganisationList;\n"]},"metadata":{},"sourceType":"module"}