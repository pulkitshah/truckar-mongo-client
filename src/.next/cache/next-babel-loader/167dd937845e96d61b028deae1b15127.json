{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/google-maps.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { GoogleMap, Marker, DirectionsService, DirectionsRenderer } from \"@react-google-maps/api\";\n\nvar GoogleMaps = function GoogleMaps(_ref) {\n  _s();\n\n  var addresses = _ref.addresses;\n  console.log(\"child component\");\n\n  var _useState = useState(null),\n      googleResponse = _useState[0],\n      setResponse = _useState[1];\n\n  var directionsCallback = function directionsCallback(response) {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        if (JSON.stringify(googleResponse) === JSON.stringify(response)) {\n          return;\n        } else {\n          setResponse(response);\n          console.log(response);\n        }\n      } else {\n        console.log(\"response: \");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    options: {\n      mapTypeId: \"hybrid\",\n      disableDefaultUI: true\n    },\n    mapContainerStyle: {\n      width: \"90%\",\n      height: \"100%\",\n      minHeight: \"12rem\"\n    },\n    center: {\n      lat: 22.309425,\n      lng: 72.13623\n    },\n    zoom: 5,\n    children: [addresses.origin && addresses.destination && /*#__PURE__*/_jsxDEV(DirectionsService // required\n    , {\n      options: {\n        origin: addresses.origin,\n        destination: addresses.destination,\n        waypoints: addresses.waypoints,\n        travelMode: \"DRIVING\",\n        optimizeWaypoints: true\n      } // required\n      ,\n      callback: directionsCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(DirectionsRenderer // required\n    , {\n      options: {\n        // eslint-disable-line react-perf/jsx-no-new-object-as-prop\n        directions: googleResponse\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GoogleMaps, \"+rgNwko33fhlmjQ2bGi7JxxoupA=\");\n\n_c = GoogleMaps;\nexport default _c2 = /*#__PURE__*/React.memo(GoogleMaps);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GoogleMaps\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/google-maps.js"],"names":["React","useState","useRef","useMemo","useCallback","GoogleMap","Marker","DirectionsService","DirectionsRenderer","GoogleMaps","addresses","console","log","googleResponse","setResponse","directionsCallback","response","status","JSON","stringify","mapTypeId","disableDefaultUI","width","height","minHeight","lat","lng","origin","destination","waypoints","travelMode","optimizeWaypoints","directions","memo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,iBAHF,EAIEC,kBAJF,QAKO,wBALP;;AAOA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AADoC,kBAGEX,QAAQ,CAAC,IAAD,CAHV;AAAA,MAG7BY,cAH6B;AAAA,MAGbC,WAHa;;AAKpC,MAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACrC,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,IAAxB,EAA8B;AAC5B,YAAIC,IAAI,CAACC,SAAL,CAAeN,cAAf,MAAmCK,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAvC,EAAiE;AAC/D;AACD,SAFD,MAEO;AACLF,UAAAA,WAAW,CAACE,QAAD,CAAX;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACD;AACF,OAPD,MAOO;AACLL,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;AACF,GAbD;;AAeA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAE;AAAEQ,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,gBAAgB,EAAE;AAAzC,KADX;AAEE,IAAA,iBAAiB,EAAE;AACjBC,MAAAA,KAAK,EAAE,KADU;AAEjBC,MAAAA,MAAM,EAAE,MAFS;AAGjBC,MAAAA,SAAS,EAAE;AAHM,KAFrB;AAOE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE,SADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KAPV;AAWE,IAAA,IAAI,EAAE,CAXR;AAAA,eAaGhB,SAAS,CAACiB,MAAV,IAAoBjB,SAAS,CAACkB,WAA9B,iBACC,QAAC,iBAAD,CACE;AADF;AAEE,MAAA,OAAO,EAAE;AACPD,QAAAA,MAAM,EAAEjB,SAAS,CAACiB,MADX;AAEPC,QAAAA,WAAW,EAAElB,SAAS,CAACkB,WAFhB;AAGPC,QAAAA,SAAS,EAAEnB,SAAS,CAACmB,SAHd;AAIPC,QAAAA,UAAU,EAAE,SAJL;AAKPC,QAAAA,iBAAiB,EAAE;AALZ,OAFX,CASE;AATF;AAUE,MAAA,QAAQ,EAAEhB;AAVZ;AAAA;AAAA;AAAA;AAAA,aAdJ,eA6BI,QAAC,kBAAD,CACE;AADF;AAEE,MAAA,OAAO,EAAE;AACP;AACAiB,QAAAA,UAAU,EAAEnB;AAFL;AAFX;AAAA;AAAA;AAAA;AAAA,aA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAwCD,CA5DD;;GAAMJ,U;;KAAAA,U;AA8DN,kCAAeT,KAAK,CAACiC,IAAN,CAAWxB,UAAX,CAAf","sourcesContent":["import React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport {\n  GoogleMap,\n  Marker,\n  DirectionsService,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\n\nconst GoogleMaps = ({ addresses }) => {\n  console.log(\"child component\");\n\n  const [googleResponse, setResponse] = useState(null);\n\n  let directionsCallback = (response) => {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        if (JSON.stringify(googleResponse) === JSON.stringify(response)) {\n          return;\n        } else {\n          setResponse(response);\n          console.log(response);\n        }\n      } else {\n        console.log(\"response: \");\n      }\n    }\n  };\n\n  return (\n    <GoogleMap\n      options={{ mapTypeId: \"hybrid\", disableDefaultUI: true }}\n      mapContainerStyle={{\n        width: \"90%\",\n        height: \"100%\",\n        minHeight: \"12rem\",\n      }}\n      center={{\n        lat: 22.309425,\n        lng: 72.13623,\n      }}\n      zoom={5}\n    >\n      {addresses.origin && addresses.destination && (\n        <DirectionsService\n          // required\n          options={{\n            origin: addresses.origin,\n            destination: addresses.destination,\n            waypoints: addresses.waypoints,\n            travelMode: \"DRIVING\",\n            optimizeWaypoints: true,\n          }}\n          // required\n          callback={directionsCallback}\n        />\n      )}\n\n      {\n        <DirectionsRenderer\n          // required\n          options={{\n            // eslint-disable-line react-perf/jsx-no-new-object-as-prop\n            directions: googleResponse,\n          }}\n        />\n      }\n    </GoogleMap>\n  );\n};\n\nexport default React.memo(GoogleMaps);\n"]},"metadata":{},"sourceType":"module"}