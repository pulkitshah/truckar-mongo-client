{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Autocomplete, Box, Button, Card, CardContent, Dialog, DialogTitle, Divider, FormControlLabel, FormHelperText, Grid, MenuItem, Switch, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/PartyAutocomplete\";\nimport moment from \"moment\";\nimport { partyApi } from \"../../../api/party-api\";\nimport { useDispatch } from \"../../../store\";\nimport { API } from \"aws-amplify\";\nimport { createOrder } from \"../../../graphql/mutations\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Order } from \"../../../models\"; // import { v4 as uuid } from \"uuid\";\n\nvar categoryOptions = [{\n  label: \"Healthcare\",\n  value: \"healthcare\"\n}, {\n  label: \"Makeup\",\n  value: \"makeup\"\n}, {\n  label: \"Dress\",\n  value: \"dress\"\n}, {\n  label: \"Skincare\",\n  value: \"skincare\"\n}, {\n  label: \"Jewelry\",\n  value: \"jewelry\"\n}, {\n  label: \"Blouse\",\n  value: \"blouse\"\n}];\nexport var OrderCreateForm = function OrderCreateForm(props) {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      toggleOpen = _React$useState2[1];\n\n  var _useState = useState([]),\n      parties = _useState[0],\n      setParties = _useState[1];\n\n  var _React$useState3 = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      dialogValue = _React$useState4[0],\n      setDialogValue = _React$useState4[1];\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      barcode: \"925487986526\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      name: \"\",\n      newPrice: 0,\n      oldPrice: 0,\n      sku: \"IYV-8745\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n      category: Yup.string().max(255),\n      description: Yup.string().max(5000),\n      images: Yup.array(),\n      //   name: Yup.string().max(255).required(),\n      //   newPrice: Yup.number().min(0).required(),\n      oldPrice: Yup.number().min(0),\n      sku: Yup.string().max(255)\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var newOrder, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                // NOTE: Make API request\n                console.log(user);\n                newOrder = {\n                  //   id: uuid(),\n                  orderNo: parseInt(values.orderNo),\n                  user: user.id,\n                  saleDate: values.saleDate.format()\n                };\n                _context.next = 5;\n                return API.graphql({\n                  query: createOrder,\n                  variables: {\n                    input: newOrder\n                  },\n                  authMode: \"AMAZON_COGNITO_USER_POOLS\"\n                });\n\n              case 5:\n                response = _context.sent;\n                toast.success(\"Order created!\");\n                router.push(\"/dashboard/orders\");\n                _context.next = 17;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n\n  var _React$useState5 = React.useState(formik.values && formik.values[\"customer\"]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      value = _React$useState6[0],\n      setValue = _React$useState6[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var partiesDB;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return partyApi.getPartiesByUser(user, dispatch);\n\n          case 3:\n            partiesDB = _context2.sent;\n            setParties(partiesDB);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  })), []);\n\n  var handleClose = function handleClose() {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false\n    });\n    toggleOpen(false);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              setValue({\n                name: dialogValue.name,\n                transporter: dialogValue.transporter\n              });\n              _context3.prev = 2;\n              // NOTE: Make API request\n              console.log(value);\n              _context3.next = 6;\n              return axios.post(\"/api/parties/\", {\n                name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }),\n                transporter: dialogValue.transporter\n              });\n\n            case 6:\n              response = _context3.sent;\n              console.log(response.data);\n              setFieldValue(type, response.data);\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error(_context3.t0);\n\n            case 14:\n              handleClose();\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 11]]);\n    }));\n\n    return function handleSubmit(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: function onClick() {\n                    return setFieldTouched(\"end\");\n                  },\n                  onChange: function onChange(date) {\n                    return formik.setFieldValue(\"saleDate\", moment(date));\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                      fullWidth: true\n                    }, params), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n                  id: \"type\",\n                  options: parties,\n                  onChange: function onChange(event, newValue) {\n                    if (typeof newValue === \"string\") {\n                      // timeout to avoid instant validation of the dialog's form.\n                      setTimeout(function () {\n                        toggleOpen(true);\n                        setDialogValue({\n                          name: newValue.replace(/\\w\\S*/g, function (txt) {\n                            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                          }),\n                          transporter: type !== \"customer\" ? true : false\n                        });\n                      });\n                    } else if (newValue && newValue.inputValue) {\n                      toggleOpen(true);\n                      setDialogValue({\n                        name: newValue.inputValue,\n                        transporter: type !== \"customer\" ? true : false\n                      });\n                    } else {\n                      formik.setFieldValue(type, newValue);\n                      setValue(newValue);\n                    }\n                  },\n                  getOptionLabel: function getOptionLabel(option) {\n                    if (typeof option === \"string\") {\n                      return option.replace(/\\w\\S*/g, function (txt) {\n                        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                      });\n                    }\n\n                    if (option.inputValue) {\n                      return option.inputValue.replace(/\\w\\S*/g, function (txt) {\n                        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                      });\n                    }\n\n                    return option.name.replace(/\\w\\S*/g, function (txt) {\n                      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                    });\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n                      onKeyPress: function onKeyPress(e) {\n                        e.which === 13 && e.preventDefault();\n                      }\n                    }, params), {}, {\n                      label: \"Customer\",\n                      variant: \"outlined\"\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n                  open: open,\n                  onClose: handleClose,\n                  \"aria-labelledby\": \"form-dialog-name\",\n                  children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                    id: \"form-dialog-name\",\n                    children: \"Add a new party\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: handleSubmit,\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      children: /*#__PURE__*/_jsxDEV(CardContent, {\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          spacing: 3,\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            children: /*#__PURE__*/_jsxDEV(TextField, {\n                              error: Boolean(formik.touched.name && formik.errors.name),\n                              fullWidth: true,\n                              helperText: formik.touched.name && formik.errors.name,\n                              label: \"Main Contact Name\",\n                              name: \"name\",\n                              onBlur: formik.handleBlur,\n                              onChange: function onChange(event) {\n                                setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                                }));\n                              },\n                              required: true,\n                              value: formik.values.name,\n                              variant: \"outlined\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 296,\n                              columnNumber: 31\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 295,\n                            columnNumber: 29\n                          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            children: /*#__PURE__*/_jsxDEV(TextField, {\n                              error: Boolean(formik.touched.mobile && formik.errors.mobile),\n                              fullWidth: true,\n                              helperText: formik.touched.mobile && formik.errors.mobile,\n                              label: \"Mobile\",\n                              name: \"mobile\",\n                              onBlur: formik.handleBlur,\n                              onChange: function onChange(event) {\n                                setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                              },\n                              value: formik.values.mobile,\n                              variant: \"outlined\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 327,\n                              columnNumber: 31\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 326,\n                            columnNumber: 29\n                          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                              name: \"location\",\n                              field: \"location\",\n                              formik: formik,\n                              error: Boolean(formik.touched.city && formik.errors.city),\n                              label: \"Your city in India\",\n                              setFieldValue: formik.setFieldValue,\n                              handleBlur: formik.handleBlur,\n                              values: formik.values\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 349,\n                              columnNumber: 31\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 348,\n                            columnNumber: 29\n                          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 12,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"h5\",\n                              color: \"textPrimary\",\n                              children: \"Party Type\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 363,\n                              columnNumber: 31\n                            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"body2\",\n                              color: \"textSecondary\",\n                              children: \"Is this party a transporter?\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 366,\n                              columnNumber: 31\n                            }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n                              checked: formik.values.transporter,\n                              color: \"secondary\",\n                              edge: \"start\",\n                              name: \"transporter\",\n                              onChange: formik.handleChange,\n                              value: formik.values.transporter\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 369,\n                              columnNumber: 31\n                            }, _this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 362,\n                            columnNumber: 29\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 294,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                          mt: 2,\n                          children: /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            spacing: 3,\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"contained\",\n                                color: \"secondary\",\n                                type: \"submit\",\n                                disabled: formik.isSubmitting,\n                                children: \"Create Party\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 382,\n                                columnNumber: 33\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 381,\n                              columnNumber: 31\n                            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              children: /*#__PURE__*/_jsxDEV(Button, {\n                                variant: \"contained\",\n                                color: \"secondary\",\n                                onClick: handleClose,\n                                children: \"Cancel\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 392,\n                                columnNumber: 33\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 391,\n                              columnNumber: 31\n                            }, _this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 380,\n                            columnNumber: 29\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 379,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrderCreateForm, \"e+8TcsFC+n0q3YgRsuGP2muv34Q=\", false, function () {\n  return [useRouter, useDispatch, useAuth, useFormik];\n});\n\n_c = OrderCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["React","useState","useEffect","useRouter","toast","Yup","useFormik","Autocomplete","Box","Button","Card","CardContent","Dialog","DialogTitle","Divider","FormControlLabel","FormHelperText","Grid","MenuItem","Switch","TextField","Typography","DatePicker","FileDropzone","QuillEditor","useAuth","PartyAutocomplete","moment","partyApi","useDispatch","API","createOrder","GoogleMaps","DataStore","Predicates","Order","categoryOptions","label","value","OrderCreateForm","props","router","dispatch","open","toggleOpen","parties","setParties","name","transporter","type","dialogValue","setDialogValue","user","formik","initialValues","saleDate","barcode","category","description","images","newPrice","oldPrice","sku","submit","validationSchema","object","string","max","array","number","min","onSubmit","values","helpers","console","log","newOrder","orderNo","parseInt","id","format","graphql","query","variables","input","authMode","response","success","push","error","setStatus","setErrors","message","setSubmitting","setValue","getPartiesByUser","partiesDB","handleClose","handleSubmit","event","preventDefault","axios","post","replace","txt","charAt","toUpperCase","substr","toLowerCase","data","setFieldValue","Boolean","touched","errors","handleBlur","handleChange","setFieldTouched","date","params","newValue","setTimeout","inputValue","option","e","which","target","mobile","city","isSubmitting","display","flexWrap","justifyContent","mx","mb","mt","m","mr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/PartyAutocomplete\";\nimport moment from \"moment\";\nimport { partyApi } from \"../../../api/party-api\";\nimport { useDispatch } from \"../../../store\";\nimport { API } from \"aws-amplify\";\nimport { createOrder } from \"../../../graphql/mutations\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Order } from \"../../../models\";\n// import { v4 as uuid } from \"uuid\";\n\nconst categoryOptions = [\n  {\n    label: \"Healthcare\",\n    value: \"healthcare\",\n  },\n  {\n    label: \"Makeup\",\n    value: \"makeup\",\n  },\n  {\n    label: \"Dress\",\n    value: \"dress\",\n  },\n  {\n    label: \"Skincare\",\n    value: \"skincare\",\n  },\n  {\n    label: \"Jewelry\",\n    value: \"jewelry\",\n  },\n  {\n    label: \"Blouse\",\n    value: \"blouse\",\n  },\n];\n\nexport const OrderCreateForm = (props) => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [open, toggleOpen] = React.useState(false);\n  const [parties, setParties] = useState([]);\n  const [dialogValue, setDialogValue] = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false,\n  });\n  const { user } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      barcode: \"925487986526\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      name: \"\",\n      newPrice: 0,\n      oldPrice: 0,\n      sku: \"IYV-8745\",\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n      category: Yup.string().max(255),\n      description: Yup.string().max(5000),\n      images: Yup.array(),\n      //   name: Yup.string().max(255).required(),\n      //   newPrice: Yup.number().min(0).required(),\n      oldPrice: Yup.number().min(0),\n      sku: Yup.string().max(255),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        console.log(user);\n\n        const newOrder = {\n          //   id: uuid(),\n          orderNo: parseInt(values.orderNo),\n          user: user.id,\n          saleDate: values.saleDate.format(),\n        };\n\n        const response = await API.graphql({\n          query: createOrder,\n          variables: { input: newOrder },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\",\n        });\n\n        toast.success(\"Order created!\");\n        router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n  const [value, setValue] = React.useState(\n    formik.values && formik.values[\"customer\"]\n  );\n\n  useEffect(async () => {\n    try {\n      const partiesDB = await partyApi.getPartiesByUser(user, dispatch);\n      setParties(partiesDB);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false,\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      transporter: dialogValue.transporter,\n    });\n\n    try {\n      // NOTE: Make API request\n      console.log(value);\n      const response = await axios.post(`/api/parties/`, {\n        name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        }),\n        transporter: dialogValue.transporter,\n      });\n      console.log(response.data);\n      setFieldValue(type, response.data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    handleClose();\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Autocomplete\n                    id={\"type\"}\n                    options={parties}\n                    onChange={(event, newValue) => {\n                      if (typeof newValue === \"string\") {\n                        // timeout to avoid instant validation of the dialog's form.\n                        setTimeout(() => {\n                          toggleOpen(true);\n                          setDialogValue({\n                            name: newValue.replace(/\\w\\S*/g, function (txt) {\n                              return (\n                                txt.charAt(0).toUpperCase() +\n                                txt.substr(1).toLowerCase()\n                              );\n                            }),\n                            transporter: type !== \"customer\" ? true : false,\n                          });\n                        });\n                      } else if (newValue && newValue.inputValue) {\n                        toggleOpen(true);\n                        setDialogValue({\n                          name: newValue.inputValue,\n                          transporter: type !== \"customer\" ? true : false,\n                        });\n                      } else {\n                        formik.setFieldValue(type, newValue);\n                        setValue(newValue);\n                      }\n                    }}\n                    getOptionLabel={(option) => {\n                      if (typeof option === \"string\") {\n                        return option.replace(/\\w\\S*/g, function (txt) {\n                          return (\n                            txt.charAt(0).toUpperCase() +\n                            txt.substr(1).toLowerCase()\n                          );\n                        });\n                      }\n                      if (option.inputValue) {\n                        return option.inputValue.replace(\n                          /\\w\\S*/g,\n                          function (txt) {\n                            return (\n                              txt.charAt(0).toUpperCase() +\n                              txt.substr(1).toLowerCase()\n                            );\n                          }\n                        );\n                      }\n                      return option.name.replace(/\\w\\S*/g, function (txt) {\n                        return (\n                          txt.charAt(0).toUpperCase() +\n                          txt.substr(1).toLowerCase()\n                        );\n                      });\n                    }}\n                    renderInput={(params) => (\n                      <TextField\n                        onKeyPress={(e) => {\n                          e.which === 13 && e.preventDefault();\n                        }}\n                        {...params}\n                        label={\"Customer\"}\n                        variant=\"outlined\"\n                      />\n                    )}\n                  />\n                  <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"form-dialog-name\"\n                  >\n                    <DialogTitle id=\"form-dialog-name\">\n                      Add a new party\n                    </DialogTitle>\n                    <form onSubmit={handleSubmit}>\n                      <Card>\n                        <CardContent>\n                          <Grid container spacing={3}>\n                            <Grid item xs={12}>\n                              <TextField\n                                error={Boolean(\n                                  formik.touched.name && formik.errors.name\n                                )}\n                                fullWidth\n                                helperText={\n                                  formik.touched.name && formik.errors.name\n                                }\n                                label=\"Main Contact Name\"\n                                name=\"name\"\n                                onBlur={formik.handleBlur}\n                                onChange={(event) => {\n                                  setFieldValue(\n                                    \"name\",\n                                    event.target.value.replace(\n                                      /\\w\\S*/g,\n                                      function (txt) {\n                                        return (\n                                          txt.charAt(0).toUpperCase() +\n                                          txt.substr(1).toLowerCase()\n                                        );\n                                      }\n                                    )\n                                  );\n                                }}\n                                required\n                                value={formik.values.name}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <TextField\n                                error={Boolean(\n                                  formik.touched.mobile && formik.errors.mobile\n                                )}\n                                fullWidth\n                                helperText={\n                                  formik.touched.mobile && formik.errors.mobile\n                                }\n                                label=\"Mobile\"\n                                name=\"mobile\"\n                                onBlur={formik.handleBlur}\n                                onChange={(event) => {\n                                  setFieldValue(\n                                    \"mobile\",\n                                    event.target.value.replace(/ /g, \"\")\n                                  );\n                                }}\n                                value={formik.values.mobile}\n                                variant=\"outlined\"\n                              />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <GoogleMaps\n                                name={\"location\"}\n                                field={\"location\"}\n                                formik={formik}\n                                error={Boolean(\n                                  formik.touched.city && formik.errors.city\n                                )}\n                                label={\"Your city in India\"}\n                                setFieldValue={formik.setFieldValue}\n                                handleBlur={formik.handleBlur}\n                                values={formik.values}\n                              />\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Typography variant=\"h5\" color=\"textPrimary\">\n                                Party Type\n                              </Typography>\n                              <Typography variant=\"body2\" color=\"textSecondary\">\n                                Is this party a transporter?\n                              </Typography>\n                              <Switch\n                                checked={formik.values.transporter}\n                                color=\"secondary\"\n                                edge=\"start\"\n                                name=\"transporter\"\n                                onChange={formik.handleChange}\n                                value={formik.values.transporter}\n                              />\n                            </Grid>\n                          </Grid>\n                          <Box mt={2}>\n                            <Grid container spacing={3}>\n                              <Grid item>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"secondary\"\n                                  type=\"submit\"\n                                  disabled={formik.isSubmitting}\n                                >\n                                  Create Party\n                                </Button>\n                              </Grid>\n                              <Grid item>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"secondary\"\n                                  onClick={handleClose}\n                                >\n                                  Cancel\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </Box>\n                        </CardContent>\n                      </Card>\n                    </form>\n                  </Dialog>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}