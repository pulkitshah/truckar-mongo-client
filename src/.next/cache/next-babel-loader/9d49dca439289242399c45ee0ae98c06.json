{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/branch-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Divider, Grid, TextField, Typography } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nvar categoryOptions = [{\n  label: \"Healthcare\",\n  value: \"healthcare\"\n}, {\n  label: \"Makeup\",\n  value: \"makeup\"\n}, {\n  label: \"Dress\",\n  value: \"dress\"\n}, {\n  label: \"Skincare\",\n  value: \"skincare\"\n}, {\n  label: \"Jewelry\",\n  value: \"jewelry\"\n}, {\n  label: \"Blouse\",\n  value: \"blouse\"\n}];\nexport var BranchCreateForm = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var handleNext = _ref.handleNext,\n      setActiveStep = _ref.setActiveStep,\n      props = _objectWithoutProperties(_ref, [\"handleNext\", \"setActiveStep\"]);\n\n  var router = useRouter();\n\n  var _useState = useState([]),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  useImperativeHandle(ref, function () {\n    return {\n      handleFormSubmit: function handleFormSubmit() {\n        console.log(\"ad\");\n        formik.handleSubmit();\n      }\n    };\n  });\n  var formik = useFormik({\n    initialValues: {\n      name: \"\",\n      branchName: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      branchName: Yup.string().max(255).required(\"Please enter a branch name.\"),\n      // addressLine1: Yup.string()\n      //   .max(255)\n      //   .required(\"Address Line 1 is required\"),\n      city: Yup.object().required(\"Please select a city.\")\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  console.log(values); // NOTE: Make API request\n\n                  toast.success(\"Branch created!\");\n                  setActiveStep(1); // props.handlenext();\n                  // router.push(\"/dashboard/branches\");\n                } catch (err) {\n                  console.error(err);\n                  toast.error(\"Something went wrong!\");\n                  helpers.setStatus({\n                    success: false\n                  });\n                  helpers.setErrors({\n                    submit: err.message\n                  });\n                  helpers.setSubmitting(false);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n\n  var handleDrop = function handleDrop(newFiles) {\n    setFiles(function (prevFiles) {\n      return [].concat(_toConsumableArray(prevFiles), _toConsumableArray(newFiles));\n    });\n  };\n\n  var handleRemove = function handleRemove(file) {\n    setFiles(function (prevFiles) {\n      return prevFiles.filter(function (_file) {\n        return _file.path !== file.path;\n      });\n    });\n  };\n\n  var handleRemoveAll = function handleRemoveAll() {\n    setFiles([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      alignItems: \"center\",\n      sx: {\n        mb: 4,\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Tell us your city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n          formik: formik,\n          error: Boolean(formik.touched.city && formik.errors.city),\n          label: \"Your city in India\",\n          field: \"city\",\n          setFieldValue: formik.setFieldValue,\n          handleBlur: formik.handleBlur,\n          values: formik.values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Please pick a name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(formik.touched.branchName && formik.errors.branchName),\n          fullWidth: true,\n          helperText: formik.touched.branchName && formik.errors.branchName,\n          label: \"Your branch name\",\n          name: \"branchName\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          value: formik.values.branchName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, _this);\n}, \"Y2yR05khFq4ttsu/5G09q486+jM=\", false, function () {\n  return [useRouter, useImperativeHandle, useFormik];\n}));\n_c2 = BranchCreateForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BranchCreateForm$forwardRef\");\n$RefreshReg$(_c2, \"BranchCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/branch-create-form.js"],"names":["forwardRef","useImperativeHandle","useRef","useState","useRouter","toast","Yup","useFormik","Divider","Grid","TextField","Typography","GoogleMaps","categoryOptions","label","value","BranchCreateForm","ref","handleNext","setActiveStep","props","router","files","setFiles","handleFormSubmit","console","log","formik","handleSubmit","initialValues","name","branchName","addressLine2","city","submit","validationSchema","object","string","max","required","onSubmit","values","helpers","success","err","error","setStatus","setErrors","message","setSubmitting","handleDrop","newFiles","prevFiles","handleRemove","file","filter","_file","path","handleRemoveAll","mb","mt","Boolean","touched","errors","setFieldValue","handleBlur","handleChange"],"mappings":"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","sourcesContent":["import { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Divider, Grid, TextField, Typography } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nconst categoryOptions = [\n  {\n    label: \"Healthcare\",\n    value: \"healthcare\",\n  },\n  {\n    label: \"Makeup\",\n    value: \"makeup\",\n  },\n  {\n    label: \"Dress\",\n    value: \"dress\",\n  },\n  {\n    label: \"Skincare\",\n    value: \"skincare\",\n  },\n  {\n    label: \"Jewelry\",\n    value: \"jewelry\",\n  },\n  {\n    label: \"Blouse\",\n    value: \"blouse\",\n  },\n];\n\nexport const BranchCreateForm = forwardRef(\n  ({ handleNext, setActiveStep, ...props }, ref) => {\n    const router = useRouter();\n    const [files, setFiles] = useState([]);\n\n    useImperativeHandle(ref, () => ({\n      handleFormSubmit() {\n        console.log(\"ad\");\n        formik.handleSubmit();\n      },\n    }));\n\n    const formik = useFormik({\n      initialValues: {\n        name: \"\",\n        branchName: \"\",\n        addressLine2: \"\",\n        city: \"\",\n        submit: null,\n      },\n      validationSchema: Yup.object({\n        branchName: Yup.string()\n          .max(255)\n          .required(\"Please enter a branch name.\"),\n        // addressLine1: Yup.string()\n        //   .max(255)\n        //   .required(\"Address Line 1 is required\"),\n        city: Yup.object().required(\"Please select a city.\"),\n      }),\n      onSubmit: async (values, helpers) => {\n        try {\n          console.log(values);\n          // NOTE: Make API request\n          toast.success(\"Branch created!\");\n          setActiveStep(1);\n          // props.handlenext();\n          // router.push(\"/dashboard/branches\");\n        } catch (err) {\n          console.error(err);\n          toast.error(\"Something went wrong!\");\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      },\n    });\n\n    const handleDrop = (newFiles) => {\n      setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n    };\n\n    const handleRemove = (file) => {\n      setFiles((prevFiles) =>\n        prevFiles.filter((_file) => _file.path !== file.path)\n      );\n    };\n\n    const handleRemoveAll = () => {\n      setFiles([]);\n    };\n\n    return (\n      <form onSubmit={formik.handleSubmit} {...props}>\n        <Grid container spacing={5} alignItems=\"center\" sx={{ mb: 4, mt: 2 }}>\n          <Grid item md={4} xs={12}>\n            <Typography variant=\"h6\">Tell us your city</Typography>\n          </Grid>\n          <Grid item md={8} xs={12}>\n            <GoogleMaps\n              formik={formik}\n              error={Boolean(formik.touched.city && formik.errors.city)}\n              label={\"Your city in India\"}\n              field={\"city\"}\n              setFieldValue={formik.setFieldValue}\n              handleBlur={formik.handleBlur}\n              values={formik.values}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n          <Grid item md={4} xs={12}>\n            <Typography variant=\"h6\">Please pick a name</Typography>\n          </Grid>\n          <Grid item md={8} xs={12}>\n            <TextField\n              error={Boolean(\n                formik.touched.branchName && formik.errors.branchName\n              )}\n              fullWidth\n              helperText={formik.touched.branchName && formik.errors.branchName}\n              label=\"Your branch name\"\n              name=\"branchName\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.branchName}\n            />\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}