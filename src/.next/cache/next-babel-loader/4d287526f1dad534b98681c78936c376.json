{"ast":null,"code":"/* eslint-disable */\n// this is an auto generated file. This will be overwritten\nexport const getOrder =\n/* GraphQL */\n`\n  query GetOrder($id: ID!) {\n    getOrder(id: $id) {\n      id\n      orderNo\n      customer\n      saleDate\n      createdAt\n      user\n      updatedAt\n    }\n  }\n`;\nexport const listOrders =\n/* GraphQL */\n`\n  query ListOrders(\n    $id: ID\n    $filter: ModelOrderFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listOrders(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        orderNo\n        customer\n        saleDate\n        createdAt\n        user\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ordersByUser =\n/* GraphQL */\n`\n  query OrdersByUser(\n    $user: String!\n    $sortDirection: ModelSortDirection\n    $filter: ModelOrderFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ordersByUser(\n      user: $user\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        orderNo\n        customer\n        saleDate\n        createdAt\n        user\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getUser =\n/* GraphQL */\n`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      name\n      email\n      phone_number\n      onBoardingRequired\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listUsers =\n/* GraphQL */\n`\n  query ListUsers(\n    $id: ID\n    $filter: ModelUserFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listUsers(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        name\n        email\n        phone_number\n        onBoardingRequired\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getBranch =\n/* GraphQL */\n`\n  query GetBranch($id: ID!) {\n    getBranch(id: $id) {\n      id\n      branchName\n      city\n      branchType\n      user\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listBranches =\n/* GraphQL */\n`\n  query ListBranches(\n    $id: ID\n    $filter: ModelBranchFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listBranches(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        branchName\n        city\n        branchType\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const branchesByUser =\n/* GraphQL */\n`\n  query BranchesByUser(\n    $user: String!\n    $sortDirection: ModelSortDirection\n    $filter: ModelBranchFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    branchesByUser(\n      user: $user\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        branchName\n        city\n        branchType\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getOrganisation =\n/* GraphQL */\n`\n  query GetOrganisation($id: ID!) {\n    getOrganisation(id: $id) {\n      id\n      organisationName\n      gstin\n      jurisdiction\n      pan\n      initials\n      addressLine1\n      addressLine2\n      bankAccountNumber\n      bankName\n      bankBranchName\n      bankIFSC\n      invoiceTermsAndConditions\n      contact\n      email\n      logo\n      user\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listOrganisations =\n/* GraphQL */\n`\n  query ListOrganisations(\n    $id: ID\n    $filter: ModelOrganisationFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listOrganisations(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        organisationName\n        gstin\n        jurisdiction\n        pan\n        initials\n        addressLine1\n        addressLine2\n        bankAccountNumber\n        bankName\n        bankBranchName\n        bankIFSC\n        invoiceTermsAndConditions\n        contact\n        email\n        logo\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const organisationsByUser =\n/* GraphQL */\n`\n  query OrganisationsByUser(\n    $user: String!\n    $sortDirection: ModelSortDirection\n    $filter: ModelOrganisationFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    organisationsByUser(\n      user: $user\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        organisationName\n        gstin\n        jurisdiction\n        pan\n        initials\n        addressLine1\n        addressLine2\n        bankAccountNumber\n        bankName\n        bankBranchName\n        bankIFSC\n        invoiceTermsAndConditions\n        contact\n        email\n        logo\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/graphql/queries.js"],"names":["getOrder","listOrders","ordersByUser","getUser","listUsers","getBranch","listBranches","branchesByUser","getOrganisation","listOrganisations","organisationsByUser"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,QAAQ;AAAG;AAAe;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAaP,OAAO,MAAMC,UAAU;AAAG;AAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO;AA4BP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO;AA4BP,OAAO,MAAMC,OAAO;AAAG;AAAe;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAaP,OAAO,MAAMC,SAAS;AAAG;AAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO;AA4BP,OAAO,MAAMC,SAAS;AAAG;AAAe;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZO;AAaP,OAAO,MAAMC,YAAY;AAAG;AAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO;AA4BP,OAAO,MAAMC,cAAc;AAAG;AAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BO;AA4BP,OAAO,MAAMC,eAAe;AAAG;AAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBO;AAyBP,OAAO,MAAMC,iBAAiB;AAAG;AAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvCO;AAwCP,OAAO,MAAMC,mBAAmB;AAAG;AAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvCO","sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const getOrder = /* GraphQL */ `\n  query GetOrder($id: ID!) {\n    getOrder(id: $id) {\n      id\n      orderNo\n      customer\n      saleDate\n      createdAt\n      user\n      updatedAt\n    }\n  }\n`;\nexport const listOrders = /* GraphQL */ `\n  query ListOrders(\n    $id: ID\n    $filter: ModelOrderFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listOrders(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        orderNo\n        customer\n        saleDate\n        createdAt\n        user\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const ordersByUser = /* GraphQL */ `\n  query OrdersByUser(\n    $user: String!\n    $sortDirection: ModelSortDirection\n    $filter: ModelOrderFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    ordersByUser(\n      user: $user\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        orderNo\n        customer\n        saleDate\n        createdAt\n        user\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getUser = /* GraphQL */ `\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      name\n      email\n      phone_number\n      onBoardingRequired\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listUsers = /* GraphQL */ `\n  query ListUsers(\n    $id: ID\n    $filter: ModelUserFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listUsers(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        name\n        email\n        phone_number\n        onBoardingRequired\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getBranch = /* GraphQL */ `\n  query GetBranch($id: ID!) {\n    getBranch(id: $id) {\n      id\n      branchName\n      city\n      branchType\n      user\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listBranches = /* GraphQL */ `\n  query ListBranches(\n    $id: ID\n    $filter: ModelBranchFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listBranches(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        branchName\n        city\n        branchType\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const branchesByUser = /* GraphQL */ `\n  query BranchesByUser(\n    $user: String!\n    $sortDirection: ModelSortDirection\n    $filter: ModelBranchFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    branchesByUser(\n      user: $user\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        branchName\n        city\n        branchType\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const getOrganisation = /* GraphQL */ `\n  query GetOrganisation($id: ID!) {\n    getOrganisation(id: $id) {\n      id\n      organisationName\n      gstin\n      jurisdiction\n      pan\n      initials\n      addressLine1\n      addressLine2\n      bankAccountNumber\n      bankName\n      bankBranchName\n      bankIFSC\n      invoiceTermsAndConditions\n      contact\n      email\n      logo\n      user\n      createdAt\n      updatedAt\n    }\n  }\n`;\nexport const listOrganisations = /* GraphQL */ `\n  query ListOrganisations(\n    $id: ID\n    $filter: ModelOrganisationFilterInput\n    $limit: Int\n    $nextToken: String\n    $sortDirection: ModelSortDirection\n  ) {\n    listOrganisations(\n      id: $id\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n      sortDirection: $sortDirection\n    ) {\n      items {\n        id\n        organisationName\n        gstin\n        jurisdiction\n        pan\n        initials\n        addressLine1\n        addressLine2\n        bankAccountNumber\n        bankName\n        bankBranchName\n        bankIFSC\n        invoiceTermsAndConditions\n        contact\n        email\n        logo\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\nexport const organisationsByUser = /* GraphQL */ `\n  query OrganisationsByUser(\n    $user: String!\n    $sortDirection: ModelSortDirection\n    $filter: ModelOrganisationFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    organisationsByUser(\n      user: $user\n      sortDirection: $sortDirection\n      filter: $filter\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        organisationName\n        gstin\n        jurisdiction\n        pan\n        initials\n        addressLine1\n        addressLine2\n        bankAccountNumber\n        bankName\n        bankBranchName\n        bankIFSC\n        invoiceTermsAndConditions\n        contact\n        email\n        logo\n        user\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}