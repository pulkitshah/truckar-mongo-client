{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/driver/driver-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { forwardRef, useImperativeHandle } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport { Box, Button, Card, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\";\nimport GoogleMaps from \"../driver/google-places-autocomplete\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { useDispatch } from \"../../../store\";\nimport { driverApi } from \"../../../api/driver-api\";\nimport { userApi } from \"../../../api/user-api\";\nexport var DriverCreateForm = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var handleNext = _ref.handleNext,\n      props = _objectWithoutProperties(_ref, [\"handleNext\"]);\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      initialize = _useAuth.initialize;\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  useImperativeHandle(ref, function () {\n    return {\n      handleFormSubmit: function handleFormSubmit() {\n        formik.handleSubmit();\n      }\n    };\n  });\n  var formik = useFormik({\n    initialValues: {\n      driverName: \"\",\n      city: \"\",\n      driverType: \"main\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(255).required(\"Name is required\").test(\"Unique Name\", \"A party already exists with this name\",\n      /*#__PURE__*/\n      // <- key, message\n      function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n          var response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return partyApi.validateDuplicateName(value, user);\n\n                case 3:\n                  response = _context.sent;\n                  return _context.abrupt(\"return\", response);\n\n                case 7:\n                  _context.prev = 7;\n                  _context.t0 = _context[\"catch\"](0);\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[0, 7]]);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }()),\n      mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Mobile is not valid\").required(\"Mobile is required\").test(\"Unique Mobile\", \"Mobile already in use\",\n      /*#__PURE__*/\n      // <- key, message\n      function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n          var response;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return partyApi.validateDuplicateMobile(value, user);\n\n                case 3:\n                  response = _context2.sent;\n                  return _context2.abrupt(\"return\", response);\n\n                case 7:\n                  _context2.prev = 7;\n                  _context2.t0 = _context2[\"catch\"](0);\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 7]]);\n        }));\n\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }())\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, helpers) {\n        var id, newDriver;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                id = uuid();\n                newDriver = {\n                  id: id,\n                  name: values.name,\n                  mobile: values.mobile,\n                  user: user.id\n                };\n                _context3.next = 5;\n                return driverApi.createDriver(newDriver, dispatch);\n\n              case 5:\n                toast.success(\"Driver created!\");\n                router.push(\"/dashboard/drivers\");\n                _context3.next = 16;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context3.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 9]]);\n      }));\n\n      function onSubmit(_x3, _x4) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.name && formik.errors.name),\n                  helperText: formik.touched.name && formik.errors.name,\n                  fullWidth: true,\n                  label: \"Main contact name\",\n                  name: \"name\",\n                  onBlur: formik.handleBlur,\n                  onChange: function onChange(event) {\n                    formik.setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                    }));\n                  },\n                  required: true,\n                  value: formik.values.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.mobile && formik.errors.mobile),\n                  fullWidth: true,\n                  helperText: formik.touched.mobile && formik.errors.mobile,\n                  label: \"Mobile\",\n                  name: \"mobile\",\n                  onBlur: formik.handleBlur,\n                  onChange: /*#__PURE__*/function () {\n                    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n                      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                        while (1) {\n                          switch (_context4.prev = _context4.next) {\n                            case 0:\n                              formik.setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n\n                            case 1:\n                            case \"end\":\n                              return _context4.stop();\n                          }\n                        }\n                      }, _callee4);\n                    }));\n\n                    return function (_x5) {\n                      return _ref4.apply(this, arguments);\n                    };\n                  }(),\n                  value: formik.values.mobile,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"right\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, _this);\n}, \"jHGjwWLirC7KQPZudUEYQEMDTms=\", false, function () {\n  return [useAuth, useRouter, useDispatch, useImperativeHandle, useFormik];\n}));\n_c2 = DriverCreateForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DriverCreateForm$forwardRef\");\n$RefreshReg$(_c2, \"DriverCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/driver/driver-create-form.js"],"names":["forwardRef","useImperativeHandle","useRouter","toast","Yup","useFormik","v4","uuid","Box","Button","Card","CardContent","Divider","Grid","TextField","Typography","GoogleMaps","useAuth","useDispatch","driverApi","userApi","DriverCreateForm","ref","handleNext","props","user","initialize","router","dispatch","handleFormSubmit","formik","handleSubmit","initialValues","driverName","city","driverType","submit","validationSchema","object","name","string","max","required","test","value","partyApi","validateDuplicateName","response","mobile","matches","validateDuplicateMobile","onSubmit","values","helpers","id","newDriver","createDriver","success","push","console","error","setStatus","setErrors","message","setSubmitting","Boolean","touched","errors","handleBlur","event","setFieldValue","target","replace","txt","charAt","toUpperCase","substr","toLowerCase","display","flexWrap","justifyContent","mx","mb","mt","m"],"mappings":"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","sourcesContent":["import { forwardRef, useImperativeHandle } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport GoogleMaps from \"../driver/google-places-autocomplete\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { useDispatch } from \"../../../store\";\nimport { driverApi } from \"../../../api/driver-api\";\nimport { userApi } from \"../../../api/user-api\";\n\nexport const DriverCreateForm = forwardRef(({ handleNext, ...props }, ref) => {\n  const { user, initialize } = useAuth();\n  const router = useRouter();\n  const dispatch = useDispatch();\n\n  useImperativeHandle(ref, () => ({\n    handleFormSubmit() {\n      formik.handleSubmit();\n    },\n  }));\n\n  const formik = useFormik({\n    initialValues: {\n      driverName: \"\",\n      city: \"\",\n      driverType: \"main\",\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      name: Yup.string()\n        .max(255)\n        .required(\"Name is required\")\n        .test(\n          \"Unique Name\",\n          \"A party already exists with this name\", // <- key, message\n          async function (value) {\n            try {\n              const response = await partyApi.validateDuplicateName(\n                value,\n                user\n              );\n              return response;\n            } catch (error) {}\n          }\n        ),\n      mobile: Yup.string()\n        .matches(/^[6-9]\\d{9}$/, \"Mobile is not valid\")\n        .required(\"Mobile is required\")\n        .test(\n          \"Unique Mobile\",\n          \"Mobile already in use\", // <- key, message\n          async function (value) {\n            try {\n              const response = await partyApi.validateDuplicateMobile(\n                value,\n                user\n              );\n              return response;\n            } catch (error) {}\n          }\n        ),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        const id = uuid();\n        const newDriver = {\n          id: id,\n          name: values.name,\n          mobile: values.mobile,\n          user: user.id,\n        };\n        await driverApi.createDriver(newDriver, dispatch);\n\n        toast.success(\"Driver created!\");\n        router.push(\"/dashboard/drivers\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.name && formik.errors.name)}\n                    helperText={formik.touched.name && formik.errors.name}\n                    fullWidth\n                    label=\"Main contact name\"\n                    name=\"name\"\n                    onBlur={formik.handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(\n                        \"name\",\n                        event.target.value.replace(/\\w\\S*/g, function (txt) {\n                          return (\n                            txt.charAt(0).toUpperCase() +\n                            txt.substr(1).toLowerCase()\n                          );\n                        })\n                      );\n                    }}\n                    required\n                    value={formik.values.name}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.mobile && formik.errors.mobile\n                    )}\n                    fullWidth\n                    helperText={formik.touched.mobile && formik.errors.mobile}\n                    label=\"Mobile\"\n                    name=\"mobile\"\n                    onBlur={formik.handleBlur}\n                    onChange={async (event) => {\n                      formik.setFieldValue(\n                        \"mobile\",\n                        event.target.value.replace(/ /g, \"\")\n                      );\n                    }}\n                    value={formik.values.mobile}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"right\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}