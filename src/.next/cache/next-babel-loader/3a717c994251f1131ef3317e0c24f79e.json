{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Box, Button, Checkbox, FormHelperText, Link, TextField, Typography } from '@mui/material';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\nexport const AmplifyRegister = props => {\n  const isMounted = useMounted();\n  const router = useRouter();\n  const {\n    register\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      policy: true,\n      submit: null\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().min(7).max(255).required('Password is required'),\n      policy: Yup.boolean().oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await register(values.email, values.password);\n\n        if (isMounted()) {\n          router.push('/authentication/verify-code');\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (isMounted()) {\n          helpers.setStatus({\n            success: false\n          });\n          helpers.setErrors({\n            submit: err.message\n          });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    noValidate: true,\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      error: Boolean(formik.touched.email && formik.errors.email),\n      fullWidth: true,\n      helperText: formik.touched.email && formik.errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      type: \"email\",\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      error: Boolean(formik.touched.password && formik.errors.password),\n      fullWidth: true,\n      helperText: formik.touched.password && formik.errors.password,\n      label: \"Password\",\n      margin: \"normal\",\n      name: \"password\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      type: \"password\",\n      value: formik.values.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        display: 'flex',\n        ml: -1,\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: formik.values.policy,\n        name: \"policy\",\n        onChange: formik.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        variant: \"body2\",\n        children: [\"I have read the\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          component: \"a\",\n          href: \"#\",\n          children: \"Terms and Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), Boolean(formik.touched.policy && formik.errors.policy) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      children: formik.errors.policy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: formik.errors.submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formik.isSubmitting,\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-register.js"],"names":["useRouter","Yup","useFormik","Box","Button","Checkbox","FormHelperText","Link","TextField","Typography","useAuth","useMounted","AmplifyRegister","props","isMounted","router","register","formik","initialValues","email","password","policy","submit","validationSchema","object","string","max","required","min","boolean","oneOf","onSubmit","values","helpers","push","err","console","error","setStatus","success","setErrors","message","setSubmitting","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","alignItems","display","ml","mt","isSubmitting"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Box, Button, Checkbox, FormHelperText, Link, TextField, Typography } from '@mui/material';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\n\nexport const AmplifyRegister = (props) => {\n  const isMounted = useMounted();\n  const router = useRouter();\n  const { register } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      policy: true,\n      submit: null\n    },\n    validationSchema: Yup.object({\n      email: Yup\n        .string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required'),\n      password: Yup\n        .string()\n        .min(7)\n        .max(255)\n        .required('Password is required'),\n      policy: Yup\n        .boolean()\n        .oneOf([true], 'This field must be checked')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await register(values.email, values.password);\n\n        if (isMounted()) {\n          router.push('/authentication/verify-code');\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (isMounted()) {\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  return (\n    <form\n      noValidate\n      onSubmit={formik.handleSubmit}\n      {...props}>\n      <TextField\n        error={Boolean(formik.touched.email && formik.errors.email)}\n        fullWidth\n        helperText={formik.touched.email && formik.errors.email}\n        label=\"Email Address\"\n        margin=\"normal\"\n        name=\"email\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        type=\"email\"\n        value={formik.values.email}\n      />\n      <TextField\n        error={Boolean(formik.touched.password && formik.errors.password)}\n        fullWidth\n        helperText={formik.touched.password && formik.errors.password}\n        label=\"Password\"\n        margin=\"normal\"\n        name=\"password\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        type=\"password\"\n        value={formik.values.password}\n      />\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          ml: -1,\n          mt: 2\n        }}\n      >\n        <Checkbox\n          checked={formik.values.policy}\n          name=\"policy\"\n          onChange={formik.handleChange}\n        />\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          I have read the\n          {' '}\n          <Link\n            component=\"a\"\n            href=\"#\"\n          >\n            Terms and Conditions\n          </Link>\n        </Typography>\n      </Box>\n      {Boolean(formik.touched.policy && formik.errors.policy) && (\n        <FormHelperText error>\n          {formik.errors.policy}\n        </FormHelperText>\n      )}\n      {formik.errors.submit && (\n        <Box sx={{ mt: 3 }}>\n          <FormHelperText error>\n            {formik.errors.submit}\n          </FormHelperText>\n        </Box>\n      )}\n      <Box sx={{ mt: 2 }}>\n        <Button\n          disabled={formik.isSubmitting}\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Register\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}