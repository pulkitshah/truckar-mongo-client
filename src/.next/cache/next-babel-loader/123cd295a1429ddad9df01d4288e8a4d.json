{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/language-popover.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-hot-toast\";\nimport { useTranslation } from \"react-i18next\";\nimport { ListItemIcon, ListItemText, MenuItem, Popover, Typography } from \"@mui/material\";\nvar languageOptions = {\n  english: {\n    icon: \"/static/icons/uk_flag.svg\",\n    label: \"English\"\n  },\n  hindi: {\n    icon: \"/static/icons/es_flag.svg\",\n    label: \"हिन्दी\"\n  }\n};\nexport var LanguagePopover = function LanguagePopover(props) {\n  _s();\n\n  var anchorEl = props.anchorEl,\n      onClose = props.onClose,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"onClose\", \"open\"]);\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n,\n      t = _useTranslation.t;\n\n  var handleChange = function handleChange(language) {\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    i18n.changeLanguage(language);\n    toast.success(t(\"Language changed\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Popover, _objectSpread(_objectSpread({\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      horizontal: \"center\",\n      vertical: \"bottom\"\n    },\n    keepMounted: true,\n    onClose: onClose,\n    open: open,\n    PaperProps: {\n      sx: {\n        width: 240\n      }\n    },\n    transitionDuration: 0\n  }, other), {}, {\n    children: Object.keys(languageOptions).map(function (language) {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: function onClick() {\n          return handleChange(language);\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: languageOptions[language].label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this)]\n      }, language, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this);\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LanguagePopover, \"tesxYUfym1EdybWre/Q68xlYjtY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguagePopover;\nLanguagePopover.propTypes = {\n  anchorEl: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/language-popover.js"],"names":["PropTypes","toast","useTranslation","ListItemIcon","ListItemText","MenuItem","Popover","Typography","languageOptions","english","icon","label","hindi","LanguagePopover","props","anchorEl","onClose","open","other","i18n","t","handleChange","language","changeLanguage","success","horizontal","vertical","sx","width","Object","keys","map","propTypes","any","func","bool"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,UALF,QAMO,eANP;AAQA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,2BADC;AAEPC,IAAAA,KAAK,EAAE;AAFA,GADa;AAKtBC,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAE,2BADD;AAELC,IAAAA,KAAK,EAAE;AAFF;AALe,CAAxB;AAWA,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAAA;;AAAA,MAChCC,QADgC,GACMD,KADN,CAChCC,QADgC;AAAA,MACtBC,OADsB,GACMF,KADN,CACtBE,OADsB;AAAA,MACbC,IADa,GACMH,KADN,CACbG,IADa;AAAA,MACJC,KADI,4BACMJ,KADN;;AAAA,wBAEpBZ,cAAc,EAFM;AAAA,MAEhCiB,IAFgC,mBAEhCA,IAFgC;AAAA,MAE1BC,CAF0B,mBAE1BA,CAF0B;;AAIxC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AACjCN,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;AACPG,IAAAA,IAAI,CAACI,cAAL,CAAoBD,QAApB;AACArB,IAAAA,KAAK,CAACuB,OAAN,CAAcJ,CAAC,CAAC,kBAAD,CAAf;AACD,GAJD;;AAMA,sBACE,QAAC,OAAD;AACE,IAAA,QAAQ,EAAEL,QADZ;AAEE,IAAA,YAAY,EAAE;AACZU,MAAAA,UAAU,EAAE,QADA;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAFhB;AAME,IAAA,WAAW,MANb;AAOE,IAAA,OAAO,EAAEV,OAPX;AAQE,IAAA,IAAI,EAAEC,IARR;AASE,IAAA,UAAU,EAAE;AAAEU,MAAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAN,KATd;AAUE,IAAA,kBAAkB,EAAE;AAVtB,KAWMV,KAXN;AAAA,cAaGW,MAAM,CAACC,IAAP,CAAYtB,eAAZ,EAA6BuB,GAA7B,CAAiC,UAACT,QAAD;AAAA,0BAChC,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE;AAAA,iBAAMD,YAAY,CAACC,QAAD,CAAlB;AAAA,SAAnB;AAAA,gCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,iBADF,eAUE,QAAC,YAAD;AACE,UAAA,OAAO,eACL,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,WAApB;AAAA,sBACGd,eAAe,CAACc,QAAD,CAAf,CAA0BX;AAD7B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,iBAVF;AAAA,SAAsDW,QAAtD;AAAA;AAAA;AAAA;AAAA,eADgC;AAAA,KAAjC;AAbH;AAAA;AAAA;AAAA;AAAA,WADF;AAoCD,CA9CM;;GAAMT,e;UAESX,c;;;KAFTW,e;AAgDbA,eAAe,CAACmB,SAAhB,GAA4B;AAC1BjB,EAAAA,QAAQ,EAAEf,SAAS,CAACiC,GADM;AAE1BjB,EAAAA,OAAO,EAAEhB,SAAS,CAACkC,IAFO;AAG1BjB,EAAAA,IAAI,EAAEjB,SAAS,CAACmC;AAHU,CAA5B","sourcesContent":["import PropTypes from \"prop-types\";\nimport { toast } from \"react-hot-toast\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  ListItemIcon,\n  ListItemText,\n  MenuItem,\n  Popover,\n  Typography,\n} from \"@mui/material\";\n\nconst languageOptions = {\n  english: {\n    icon: \"/static/icons/uk_flag.svg\",\n    label: \"English\",\n  },\n  hindi: {\n    icon: \"/static/icons/es_flag.svg\",\n    label: \"हिन्दी\",\n  },\n};\n\nexport const LanguagePopover = (props) => {\n  const { anchorEl, onClose, open, ...other } = props;\n  const { i18n, t } = useTranslation();\n\n  const handleChange = (language) => {\n    onClose?.();\n    i18n.changeLanguage(language);\n    toast.success(t(\"Language changed\"));\n  };\n\n  return (\n    <Popover\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        horizontal: \"center\",\n        vertical: \"bottom\",\n      }}\n      keepMounted\n      onClose={onClose}\n      open={open}\n      PaperProps={{ sx: { width: 240 } }}\n      transitionDuration={0}\n      {...other}\n    >\n      {Object.keys(languageOptions).map((language) => (\n        <MenuItem onClick={() => handleChange(language)} key={language}>\n          <ListItemIcon>\n            \n\n              {/* <img\n                alt={languageOptions[language].label}\n                src={languageOptions[language].icon}\n              /> */}\n\n          </ListItemIcon>\n          <ListItemText\n            primary={\n              <Typography variant=\"subtitle2\">\n                {languageOptions[language].label}\n              </Typography>\n            }\n          />\n        </MenuItem>\n      ))}\n    </Popover>\n  );\n};\n\nLanguagePopover.propTypes = {\n  anchorEl: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}