{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/overview/overview-total-transactions.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { format } from 'date-fns';\nimport { Box, Card, CardHeader, Divider } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Chart } from '../../chart';\nimport { Scrollbar } from '../../scrollbar';\nconst data = {\n  series: [{\n    data: [12, 24, 36, 48, 60, 72, 84]\n  }, {\n    data: [12, 24, 36, 48, 60, 72, 84]\n  }, {\n    data: [12, 24, 36, 48, 60, 72, 84]\n  }],\n  categories: ['Capital One', 'Ally Bank', 'ING', 'Ridgewood', 'BT Transilvania', 'CEC', 'CBC']\n};\nexport const OverviewTotalTransactions = props => {\n  const theme = useTheme();\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#6E7AD8', '#4655CE', '#2F3EB1'],\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      opacity: 1\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    states: {\n      active: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      categories: data.categories,\n      labels: {\n        style: {\n          colors: '#A3A3A3'\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        offsetX: -12,\n        style: {\n          colors: '#A3A3A3'\n        }\n      }\n    }\n  };\n  const chartSeries = data.series;\n  return /*#__PURE__*/_jsxDEV(Card, _objectSpread(_objectSpread({}, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      subheader: format(new Date(), 'MMM yyyy'),\n      title: \"Total Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: 336,\n          minWidth: 500,\n          px: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          height: 300,\n          options: chartOptions,\n          series: chartSeries,\n          type: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/overview/overview-total-transactions.js"],"names":["format","Box","Card","CardHeader","Divider","useTheme","Chart","Scrollbar","data","series","categories","OverviewTotalTransactions","props","theme","chartOptions","chart","background","stacked","toolbar","show","colors","dataLabels","enabled","fill","opacity","grid","borderColor","palette","divider","xaxis","lines","yaxis","states","active","filter","type","hover","legend","stroke","width","mode","axisBorder","axisTicks","labels","style","offsetX","chartSeries","Date","height","minWidth","px"],"mappings":";;;;;;;;;AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,OAAhC,QAA+C,eAA/C;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CACN;AAAED,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAAR,GADM,EAEN;AAAEA,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAAR,GAFM,EAGN;AAAEA,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAAR,GAHM,CADG;AAMXE,EAAAA,UAAU,EAAE,CACV,aADU,EAEV,WAFU,EAGV,KAHU,EAIV,WAJU,EAKV,iBALU,EAMV,KANU,EAOV,KAPU;AAND,CAAb;AAiBA,OAAO,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AAClD,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AAEA,QAAMS,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,aADP;AAELC,MAAAA,OAAO,EAAE,IAFJ;AAGLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE;AADC;AAHJ,KADY;AAQnBC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CARW;AASnBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE;AADC,KATO;AAYnBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KAZa;AAenBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAEb,KAAK,CAACc,OAAN,CAAcC,OADvB;AAEJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AACLX,UAAAA,IAAI,EAAE;AADD;AADF,OAFH;AAOJY,MAAAA,KAAK,EAAE;AACLD,QAAAA,KAAK,EAAE;AACLX,UAAAA,IAAI,EAAE;AADD;AADF;AAPH,KAfa;AA4BnBa,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AADA;AADF,OADF;AAMNC,MAAAA,KAAK,EAAE;AACLF,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AADA;AADH;AAND,KA5BW;AAwCnBE,IAAAA,MAAM,EAAE;AACNlB,MAAAA,IAAI,EAAE;AADA,KAxCW;AA2CnBmB,IAAAA,MAAM,EAAE;AACNlB,MAAAA,MAAM,EAAE,CAAC,aAAD,CADF;AAEND,MAAAA,IAAI,EAAE,IAFA;AAGNoB,MAAAA,KAAK,EAAE;AAHD,KA3CW;AAgDnB1B,IAAAA,KAAK,EAAE;AACL2B,MAAAA,IAAI,EAAE3B,KAAK,CAACc,OAAN,CAAca;AADf,KAhDY;AAmDnBX,IAAAA,KAAK,EAAE;AACLY,MAAAA,UAAU,EAAE;AACVtB,QAAAA,IAAI,EAAE;AADI,OADP;AAILuB,MAAAA,SAAS,EAAE;AACTvB,QAAAA,IAAI,EAAE;AADG,OAJN;AAOLT,MAAAA,UAAU,EAAEF,IAAI,CAACE,UAPZ;AAQLiC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLxB,UAAAA,MAAM,EAAE;AADH;AADD;AARH,KAnDY;AAiEnBW,IAAAA,KAAK,EAAE;AACLY,MAAAA,MAAM,EAAE;AACNE,QAAAA,OAAO,EAAE,CAAC,EADJ;AAEND,QAAAA,KAAK,EAAE;AACLxB,UAAAA,MAAM,EAAE;AADH;AAFD;AADH;AAjEY,GAArB;AA2EA,QAAM0B,WAAW,GAAGtC,IAAI,CAACC,MAAzB;AAEA,sBACE,QAAC,IAAD,kCAAUG,KAAV;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,SAAS,EAAEZ,MAAM,CAAC,IAAI+C,IAAJ,EAAD,EAAa,UAAb,CADnB;AAEE,MAAA,KAAK,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,MAAM,EAAE,GADN;AAEFC,UAAAA,QAAQ,EAAE,GAFR;AAGFC,UAAAA,EAAE,EAAE;AAHF,SADN;AAAA,+BAOE,QAAC,KAAD;AACE,UAAA,MAAM,EAAE,GADV;AAEE,UAAA,OAAO,EAAEpC,YAFX;AAGE,UAAA,MAAM,EAAEgC,WAHV;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAzGM","sourcesContent":["import { format } from 'date-fns';\nimport { Box, Card, CardHeader, Divider } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport { Chart } from '../../chart';\nimport { Scrollbar } from '../../scrollbar';\n\nconst data = {\n  series: [\n    { data: [12, 24, 36, 48, 60, 72, 84] },\n    { data: [12, 24, 36, 48, 60, 72, 84] },\n    { data: [12, 24, 36, 48, 60, 72, 84] }\n  ],\n  categories: [\n    'Capital One',\n    'Ally Bank',\n    'ING',\n    'Ridgewood',\n    'BT Transilvania',\n    'CEC',\n    'CBC'\n  ]\n};\n\nexport const OverviewTotalTransactions = (props) => {\n  const theme = useTheme();\n\n  const chartOptions = {\n    chart: {\n      background: 'transparent',\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    colors: ['#6E7AD8', '#4655CE', '#2F3EB1'],\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      opacity: 1\n    },\n    grid: {\n      borderColor: theme.palette.divider,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    states: {\n      active: {\n        filter: {\n          type: 'none'\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none'\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    stroke: {\n      colors: ['transparent'],\n      show: true,\n      width: 2\n    },\n    theme: {\n      mode: theme.palette.mode\n    },\n    xaxis: {\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      categories: data.categories,\n      labels: {\n        style: {\n          colors: '#A3A3A3'\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        offsetX: -12,\n        style: {\n          colors: '#A3A3A3'\n        }\n      }\n    }\n  };\n\n  const chartSeries = data.series;\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        subheader={format(new Date(), 'MMM yyyy')}\n        title=\"Total Transactions\"\n      />\n      <Divider />\n      <Scrollbar>\n        <Box\n          sx={{\n            height: 336,\n            minWidth: 500,\n            px: 2\n          }}\n        >\n          <Chart\n            height={300}\n            options={chartOptions}\n            series={chartSeries}\n            type=\"bar\"\n          />\n        </Box>\n      </Scrollbar>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}