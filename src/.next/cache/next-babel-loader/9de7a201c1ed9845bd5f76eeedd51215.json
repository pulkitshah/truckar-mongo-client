{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Grid, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport moment from \"moment\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nexport var OrderCreateForm = function OrderCreateForm(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState(null),\n      selectedVehicle = _useState[0],\n      setSelectedVehicle = _useState[1];\n\n  var _useState2 = useState(),\n      driver = _useState2[0],\n      setDriver = _useState2[1];\n\n  var formik = useFormik({\n    initialValues: {\n      saleDate: moment()\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255)\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var newOrder;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  console.log(values);\n                  newOrder = {\n                    orderNo: parseInt(values.orderNo),\n                    saleDate: values.saleDate.format(),\n                    customer: values.customer,\n                    vehicle: values.vehicle,\n                    user: user.id\n                  };\n                  toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n                } catch (err) {\n                  console.error(err);\n                  toast.error(\"Something went wrong!\");\n                  helpers.setStatus({\n                    success: false\n                  });\n                  helpers.setErrors({\n                    submit: err.message\n                  });\n                  helpers.setSubmitting(false);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: function onClick() {\n                    return setFieldTouched(\"end\");\n                  },\n                  onChange: function onChange(date) {\n                    return formik.setFieldValue(\"saleDate\", moment(date));\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                      fullWidth: true\n                    }, params), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"customer\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Vehicle details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(VehicleAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DriverAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrderCreateForm, \"3IbTCHMuxlM64EzxNumogASndZs=\", false, function () {\n  return [useRouter, useAuth, useFormik];\n});\n\n_c = OrderCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["React","useState","useRouter","toast","Yup","useFormik","Box","Button","Card","CardContent","Grid","TextField","Typography","DatePicker","useAuth","PartyAutocomplete","VehicleAutocomplete","moment","DriverAutocomplete","OrderCreateForm","props","router","user","selectedVehicle","setSelectedVehicle","driver","setDriver","formik","initialValues","saleDate","validationSchema","object","barcode","string","max","onSubmit","values","helpers","console","log","newOrder","orderNo","parseInt","format","customer","vehicle","id","success","err","error","setStatus","setErrors","submit","message","setSubmitting","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","setFieldTouched","date","setFieldValue","params","mt","display","flexWrap","justifyContent","mx","mb","m","mr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport moment from \"moment\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\n\nexport const OrderCreateForm = (props) => {\n  const router = useRouter();\n  const { user } = useAuth();\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n  const [driver, setDriver] = useState();\n\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        console.log(values);\n\n        const newOrder = {\n          orderNo: parseInt(values.orderNo),\n          saleDate: values.saleDate.format(),\n          customer: values.customer,\n          vehicle: values.vehicle,\n          user: user.id,\n        };\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <PartyAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    type=\"customer\"\n                    user={user}\n                    formik={formik}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Vehicle details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <VehicleAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    setSelectedVehicle={setSelectedVehicle}\n                    setDriver={setDriver}\n                    user={user}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DriverAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    setSelectedVehicle={setSelectedVehicle}\n                    setDriver={setDriver}\n                    user={user}\n                    values={formik.values}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}