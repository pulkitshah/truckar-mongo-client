{"ast":null,"code":"import _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/stepper.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Box, Button, Card, CardContent, Divider, Grid, Typography, Stepper, Step, StepButton } from \"@mui/material\";\nimport { Briefcase as BriefcaseIcon } from \"../../../icons/briefcase\";\nimport { useTranslation } from \"react-i18next\";\nimport { BranchCreateForm } from \"../../../components/dashboard/welcome/branch-create-form\";\nimport { OrganisationCreateForm } from \"../../../components/dashboard/welcome/organisation-create-form\";\nvar steps = [\"Create a main branch\", \"Add team members\", \"Create vehicles\"];\nexport default function HorizontalNonLinearStepper() {\n  _s();\n\n  var _this = this;\n\n  var branchCreateFormRef = useRef(null);\n  var router = useRouter();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      completed = _React$useState4[0],\n      setCompleted = _React$useState4[1];\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var handleNext = function handleNext() {\n    var newActiveStep = activeStep + 1;\n\n    if (activeStep === 0) {\n      branchCreateFormRef.current.handleFormSubmit();\n      handleComplete();\n    } else {\n      handleComplete();\n      setActiveStep(newActiveStep);\n    }\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleStep = function handleStep(step) {\n    return function () {\n      setActiveStep(step);\n    };\n  };\n\n  var handleComplete = function handleComplete() {\n    var newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n  };\n\n  var handleFinish = function handleFinish() {\n    router.push({\n      pathname: \"/dashboard/\"\n    });\n  };\n\n  var createAMainBranch = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sx: {\n        py: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: \"center\",\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(BriefcaseIcon, {\n              color: \"primary\",\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"primary.main\",\n              sx: {\n                pl: 1\n              },\n              variant: \"subtitle2\",\n              children: t(\"Create an organisation\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              mt: 2\n            },\n            children: t(\"Let us open your company.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: \"center\",\n              display: \"flex\"\n            },\n            children: /*#__PURE__*/_jsxDEV(OrganisationCreateForm, {\n              handleNext: handleNext,\n              ref: branchCreateFormRef,\n              setActiveStep: setActiveStep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sx: {\n        py: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: \"center\",\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(BriefcaseIcon, {\n              color: \"primary\",\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"primary.main\",\n              sx: {\n                pl: 1\n              },\n              variant: \"subtitle2\",\n              children: t(\"Add your main branch details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              mt: 2\n            },\n            children: t(\"Let us open your branch.\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: \"center\",\n              display: \"flex\"\n            },\n            children: /*#__PURE__*/_jsxDEV(BranchCreateForm, {\n              handleNext: handleNext,\n              ref: branchCreateFormRef,\n              setActiveStep: setActiveStep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minWidth: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      nonLinear: true,\n      activeStep: activeStep,\n      children: steps.map(function (label, index) {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          completed: completed[index],\n          children: /*#__PURE__*/_jsxDEV(StepButton, {\n            color: \"inherit\",\n            onClick: handleStep(index),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, _this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), activeStep === 0 && createAMainBranch, /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        pt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\" // disabled={activeStep !== 2}\n        ,\n        onClick: handleBack,\n        sx: {\n          mr: 1\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: \"1 1 auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNext,\n        sx: {\n          mr: 1\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleFinish,\n        children: activeStep !== 0 && \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HorizontalNonLinearStepper, \"G4Zq3hiB8xhZkpnRqssNp5zy6jY=\", false, function () {\n  return [useRouter, useTranslation];\n});\n\n_c = HorizontalNonLinearStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalNonLinearStepper\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/stepper.js"],"names":["React","useRef","useRouter","Box","Button","Card","CardContent","Divider","Grid","Typography","Stepper","Step","StepButton","Briefcase","BriefcaseIcon","useTranslation","BranchCreateForm","OrganisationCreateForm","steps","HorizontalNonLinearStepper","branchCreateFormRef","router","useState","activeStep","setActiveStep","completed","setCompleted","t","handleNext","newActiveStep","current","handleFormSubmit","handleComplete","handleBack","prevActiveStep","handleStep","step","newCompleted","handleFinish","push","pathname","createAMainBranch","py","alignItems","display","pl","mt","minWidth","map","label","index","flexDirection","pt","mr","flex"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useRef } from \"react\";\nimport { useRouter } from \"next/router\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  Stepper,\n  Step,\n  StepButton,\n} from \"@mui/material\";\nimport { Briefcase as BriefcaseIcon } from \"../../../icons/briefcase\";\nimport { useTranslation } from \"react-i18next\";\nimport { BranchCreateForm } from \"../../../components/dashboard/welcome/branch-create-form\";\nimport { OrganisationCreateForm } from \"../../../components/dashboard/welcome/organisation-create-form\";\n\nconst steps = [\"Create a main branch\", \"Add team members\", \"Create vehicles\"];\n\nexport default function HorizontalNonLinearStepper() {\n  const branchCreateFormRef = useRef(null);\n  const router = useRouter();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const { t } = useTranslation();\n\n  const handleNext = () => {\n    const newActiveStep = activeStep + 1;\n    if (activeStep === 0) {\n      branchCreateFormRef.current.handleFormSubmit();\n      handleComplete();\n    } else {\n      handleComplete();\n      setActiveStep(newActiveStep);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n  };\n\n  const handleFinish = () => {\n    router.push({\n      pathname: \"/dashboard/\",\n    });\n  };\n\n  const createAMainBranch = (\n    <React.Fragment>\n      <Grid item xs={12} sx={{ py: 3 }}>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <BriefcaseIcon color=\"primary\" fontSize=\"small\" />\n              <Typography\n                color=\"primary.main\"\n                sx={{ pl: 1 }}\n                variant=\"subtitle2\"\n              >\n                {t(\"Create an organisation\")}\n              </Typography>\n            </Box>\n            <Typography variant=\"h5\" sx={{ mt: 2 }}>\n              {t(\"Let us open your company.\")}\n            </Typography>\n            <Box\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <OrganisationCreateForm\n                handleNext={handleNext}\n                ref={branchCreateFormRef}\n                setActiveStep={setActiveStep}\n              />\n            </Box>\n          </CardContent>\n          <Divider />\n        </Card>\n      </Grid>\n      <Grid item xs={12} sx={{ py: 3 }}>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <BriefcaseIcon color=\"primary\" fontSize=\"small\" />\n              <Typography\n                color=\"primary.main\"\n                sx={{ pl: 1 }}\n                variant=\"subtitle2\"\n              >\n                {t(\"Add your main branch details\")}\n              </Typography>\n            </Box>\n            <Typography variant=\"h5\" sx={{ mt: 2 }}>\n              {t(\"Let us open your branch.\")}\n            </Typography>\n            <Box\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <BranchCreateForm\n                handleNext={handleNext}\n                ref={branchCreateFormRef}\n                setActiveStep={setActiveStep}\n              />\n            </Box>\n          </CardContent>\n          <Divider />\n        </Card>\n      </Grid>\n    </React.Fragment>\n  );\n\n  return (\n    <Box sx={{ minWidth: \"100%\" }}>\n      <Stepper nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => (\n          <Step key={label} completed={completed[index]}>\n            <StepButton color=\"inherit\" onClick={handleStep(index)}>\n              {label}\n            </StepButton>\n          </Step>\n        ))}\n      </Stepper>\n\n      {activeStep === 0 && createAMainBranch}\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          // disabled={activeStep !== 2}\n          onClick={handleBack}\n          sx={{ mr: 1 }}\n        >\n          Back\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        <Button onClick={handleNext} sx={{ mr: 1 }}>\n          Next\n        </Button>\n        {<Button onClick={handleFinish}>{activeStep !== 0 && \"Finish\"}</Button>}\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}