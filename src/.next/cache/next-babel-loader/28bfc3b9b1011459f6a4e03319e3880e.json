{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\nimport { Box, Button, Card, CardContent, Grid, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport DeliveryDetails from \"./delivery-details\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nimport GoogleMaps from \"./google-maps\";\nexport const OrderCreateForm = props => {\n  const router = useRouter();\n  const {\n    user\n  } = useAuth();\n  const {\n    0: selectedVehicle,\n    1: setSelectedVehicle\n  } = useState(null);\n  const {\n    0: driver,\n    1: setDriver\n  } = useState();\n  const {\n    0: addresses,\n    1: setAddresses\n  } = useState({\n    waypoints: []\n  });\n  const [saleType, setSaleType] = React.useState(\"quantity\");\n  const [purchaseType, setPurchaseType] = React.useState(\"quantity\");\n  const saleTypes = [{\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  const purchaseTypes = [{\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  let validationShape = {\n    customer: Yup.object().nullable().required(\"Customer is required\"),\n    vehicle: Yup.lazy(value => {\n      switch (typeof value) {\n        case \"object\":\n          return Yup.object().nullable().required(\"Vehicle is required\");\n\n        case \"string\":\n          return Yup.string().required(\"Vehicle is required\");\n\n        default:\n          return Yup.string().required(\"Vehicle is required\");\n      }\n    })\n  };\n  validationShape.deliveryDetails = Yup.array().of(Yup.object().shape({\n    loading: Yup.object().required(\"Loading Point is Required\"),\n    // these constraints take precedence\n    unloading: Yup.object().required(\"Unloading Point is Required\") // these constraints take precedence\n\n  }));\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      deliveryDetails: [{\n        loading: \"\",\n        unloading: \"\"\n      }]\n    },\n    // validationSchema: Yup.object().shape(validationShape),\n    onSubmit: async (values, helpers) => {\n      try {\n        console.log(values);\n        const newOrder = {\n          orderNo: parseInt(values.orderNo),\n          saleDate: values.saleDate.format(),\n          customer: values.customer,\n          vehicle: values.vehicle,\n          user: user.id\n        };\n        toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  React.useEffect(() => {\n    console.log(formik.values.deliveryDetails);\n    console.log(addresses);\n    setAddresses({\n      waypoints: [...addresses.waypoints]\n    });\n\n    if (formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description) {\n      setAddresses(addresses => _objectSpread(_objectSpread({}, addresses), {\n        destination: formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description\n      }));\n    }\n\n    setAddresses(addresses => _objectSpread(_objectSpread({}, addresses), {\n      origin: formik.values.deliveryDetails[0].loading.description\n    }));\n    formik.values.deliveryDetails.map(delivery => {\n      if (delivery.loading.description && !(addresses.waypoints.filter(e => e.location === delivery.loading.description).length > 0 || addresses.origin === delivery.loading.description)) {\n        setAddresses(addresses => _objectSpread(_objectSpread({}, addresses), {\n          waypoints: [...addresses.waypoints, {\n            location: delivery.loading.description\n          }]\n        }));\n      }\n\n      if (delivery.unloading.description && !(addresses.waypoints.filter(e => e.location === delivery.unloading.description).length > 0 || addresses.destination === delivery.unloading.description)) {\n        setAddresses(addresses => _objectSpread(_objectSpread({}, addresses), {\n          waypoints: [...addresses.waypoints, {\n            location: delivery.unloading.description\n          }]\n        }));\n      }\n    });\n  }, [formik.values.deliveryDetails]);\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: () => setFieldTouched(\"end\"),\n                  onChange: date => formik.setFieldValue(\"saleDate\", moment(date)),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                    fullWidth: true\n                  }, params), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"customer\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Delivery details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(GoogleMaps, {\n              addresses: addresses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(DeliveryDetails, {\n              formik: formik\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Vehicle details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(VehicleAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: typeof selectedVehicle === \"object\" && selectedVehicle !== null ? /*#__PURE__*/_jsxDEV(DriverAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this) : selectedVehicle !== null && /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"transporter\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Sale details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleType && formik.errors.saleType),\n                  onBlur: formik.handleBlur,\n                  name: \"saleType\",\n                  label: \"Sale Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"saleType\",\n                  select: true,\n                  value: saleType,\n                  onChange: event => {\n                    setSaleType(event.target.value);\n                    formik.setFieldValue(\"saleType\", event.target.value);\n                  },\n                  SelectProps: {\n                    native: true\n                  },\n                  helperText: \"Please select sale type\",\n                  variant: \"outlined\",\n                  children: saleTypes.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.label\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleRate && formik.errors.saleRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.saleRate && formik.errors.saleRate,\n                  id: \"saleRate\",\n                  name: \"saleRate\",\n                  label: \"Sale Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), saleType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleMinimumGuarantee && formik.errors.saleMinimumGuarantee),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.saleMinimumGuarantee && formik.errors.saleMinimumGuarantee,\n                  id: \"saleMinimumGuarantee\",\n                  name: \"saleMinimumGuarantee\",\n                  label: \"Min. Load Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), !(typeof selectedVehicle === \"object\") && selectedVehicle !== null && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Purchase details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseType && formik.errors.purchaseType),\n                  onBlur: formik.handleBlur,\n                  name: \"purchaseType\",\n                  label: \"Purchase Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"purchaseType\",\n                  select: true,\n                  value: purchaseType,\n                  onChange: event => {\n                    setPurchaseType(event.target.value);\n                    event.target.value;\n                    formik.setFieldValue(\"purchaseType\", event.target.value);\n                  },\n                  SelectProps: {\n                    native: true\n                  },\n                  helperText: \"Please select purchase type\",\n                  variant: \"outlined\",\n                  children: purchaseTypes.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option.value,\n                    children: option.label\n                  }, option.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseRate && formik.errors.purchaseRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.purchaseRate && formik.errors.purchaseRate,\n                  id: \"purchaseRate\",\n                  name: \"purchaseRate\",\n                  label: \"Purchase Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), purchaseType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseMinimumGuarantee && formik.errors.purchaseMinimumGuarantee),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.purchaseMinimumGuarantee && formik.errors.purchaseMinimumGuarantee,\n                  id: \"purchaseMinimumGuarantee\",\n                  name: \"purchaseMinimumGuarantee\",\n                  label: \"Min. Load Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["React","useState","useRef","useMemo","useCallback","useRouter","toast","Yup","useFormik","moment","Box","Button","Card","CardContent","Grid","TextField","Typography","DatePicker","useAuth","DeliveryDetails","PartyAutocomplete","VehicleAutocomplete","DriverAutocomplete","GoogleMaps","OrderCreateForm","props","router","user","selectedVehicle","setSelectedVehicle","driver","setDriver","addresses","setAddresses","waypoints","saleType","setSaleType","purchaseType","setPurchaseType","saleTypes","value","label","purchaseTypes","validationShape","customer","object","nullable","required","vehicle","lazy","string","deliveryDetails","array","of","shape","loading","unloading","formik","initialValues","saleDate","onSubmit","values","helpers","console","log","newOrder","orderNo","parseInt","format","id","success","err","error","setStatus","setErrors","submit","message","setSubmitting","useEffect","length","description","destination","origin","map","delivery","filter","e","location","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","setFieldTouched","date","setFieldValue","params","mt","shrink","event","target","native","option","saleRate","saleMinimumGuarantee","purchaseRate","purchaseMinimumGuarantee","display","flexWrap","justifyContent","mx","mb","m","mr"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,UAPF,QAQO,eARP;AASA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,iBAAP,MAA8B,wDAA9B;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,kBAAP,MAA+B,0DAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACxC,QAAMC,MAAM,GAAGrB,SAAS,EAAxB;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAWT,OAAO,EAAxB;AACA,QAAM;AAAA,OAACU,eAAD;AAAA,OAAkBC;AAAlB,MAAwC5B,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM;AAAA,OAAC6B,MAAD;AAAA,OAASC;AAAT,MAAsB9B,QAAQ,EAApC;AACA,QAAM;AAAA,OAAC+B,SAAD;AAAA,OAAYC;AAAZ,MAA4BhC,QAAQ,CAAC;AAAEiC,IAAAA,SAAS,EAAE;AAAb,GAAD,CAA1C;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpC,KAAK,CAACC,QAAN,CAAe,UAAf,CAAhC;AACA,QAAM,CAACoC,YAAD,EAAeC,eAAf,IAAkCtC,KAAK,CAACC,QAAN,CAAe,UAAf,CAAxC;AAEA,QAAMsC,SAAS,GAAG,CAChB;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADgB,EAKhB;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALgB,CAAlB;AAWA,QAAMC,aAAa,GAAG,CACpB;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADoB,EAKpB;AACED,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,KAAK,EAAE;AAFT,GALoB,CAAtB;AAWA,MAAIE,eAAe,GAAG;AACpBC,IAAAA,QAAQ,EAAErC,GAAG,CAACsC,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiC,sBAAjC,CADU;AAEpBC,IAAAA,OAAO,EAAEzC,GAAG,CAAC0C,IAAJ,CAAUT,KAAD,IAAW;AAC3B,cAAQ,OAAOA,KAAf;AACE,aAAK,QAAL;AACE,iBAAOjC,GAAG,CAACsC,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiC,qBAAjC,CAAP;;AACF,aAAK,QAAL;AACE,iBAAOxC,GAAG,CAAC2C,MAAJ,GAAaH,QAAb,CAAsB,qBAAtB,CAAP;;AACF;AACE,iBAAOxC,GAAG,CAAC2C,MAAJ,GAAaH,QAAb,CAAsB,qBAAtB,CAAP;AANJ;AAQD,KATQ;AAFW,GAAtB;AAcAJ,EAAAA,eAAe,CAACQ,eAAhB,GAAkC5C,GAAG,CAAC6C,KAAJ,GAAYC,EAAZ,CAChC9C,GAAG,CAACsC,MAAJ,GAAaS,KAAb,CAAmB;AACjBC,IAAAA,OAAO,EAAEhD,GAAG,CAACsC,MAAJ,GAAaE,QAAb,CAAsB,2BAAtB,CADQ;AAC4C;AAC7DS,IAAAA,SAAS,EAAEjD,GAAG,CAACsC,MAAJ,GAAaE,QAAb,CAAsB,6BAAtB,CAFM,CAEgD;;AAFhD,GAAnB,CADgC,CAAlC;AAOA,QAAMU,MAAM,GAAGjD,SAAS,CAAC;AACvBkD,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAElD,MAAM,EADH;AAEb0C,MAAAA,eAAe,EAAE,CACf;AACEI,QAAAA,OAAO,EAAE,EADX;AAEEC,QAAAA,SAAS,EAAE;AAFb,OADe;AAFJ,KADQ;AAUvB;AACAI,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AACnC,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,cAAMI,QAAQ,GAAG;AACfC,UAAAA,OAAO,EAAEC,QAAQ,CAACN,MAAM,CAACK,OAAR,CADF;AAEfP,UAAAA,QAAQ,EAAEE,MAAM,CAACF,QAAP,CAAgBS,MAAhB,EAFK;AAGfxB,UAAAA,QAAQ,EAAEiB,MAAM,CAACjB,QAHF;AAIfI,UAAAA,OAAO,EAAEa,MAAM,CAACb,OAJD;AAKfrB,UAAAA,IAAI,EAAEA,IAAI,CAAC0C;AALI,SAAjB;AAQA/D,QAAAA,KAAK,CAACgE,OAAN,CAAc,gBAAd,EAXE,CAYF;AACD,OAbD,CAaE,OAAOC,GAAP,EAAY;AACZR,QAAAA,OAAO,CAACS,KAAR,CAAcD,GAAd;AACAjE,QAAAA,KAAK,CAACkE,KAAN,CAAY,uBAAZ;AACAV,QAAAA,OAAO,CAACW,SAAR,CAAkB;AAAEH,UAAAA,OAAO,EAAE;AAAX,SAAlB;AACAR,QAAAA,OAAO,CAACY,SAAR,CAAkB;AAAEC,UAAAA,MAAM,EAAEJ,GAAG,CAACK;AAAd,SAAlB;AACAd,QAAAA,OAAO,CAACe,aAAR,CAAsB,KAAtB;AACD;AACF;AAhCsB,GAAD,CAAxB;AAmCA7E,EAAAA,KAAK,CAAC8E,SAAN,CAAgB,MAAM;AACpBf,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACI,MAAP,CAAcV,eAA1B;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYhC,SAAZ;AAEAC,IAAAA,YAAY,CAAC;AAAEC,MAAAA,SAAS,EAAE,CAAC,GAAGF,SAAS,CAACE,SAAd;AAAb,KAAD,CAAZ;;AACA,QACEuB,MAAM,CAACI,MAAP,CAAcV,eAAd,CAA8BM,MAAM,CAACI,MAAP,CAAcV,eAAd,CAA8B4B,MAA9B,GAAuC,CAArE,EACGvB,SADH,CACawB,WAFf,EAGE;AACA/C,MAAAA,YAAY,CAAED,SAAD,oCACRA,SADQ,GAER;AACDiD,QAAAA,WAAW,EACTxB,MAAM,CAACI,MAAP,CAAcV,eAAd,CACEM,MAAM,CAACI,MAAP,CAAcV,eAAd,CAA8B4B,MAA9B,GAAuC,CADzC,EAEEvB,SAFF,CAEYwB;AAJb,OAFQ,CAAD,CAAZ;AASD;;AAED/C,IAAAA,YAAY,CAAED,SAAD,oCACRA,SADQ,GAER;AACDkD,MAAAA,MAAM,EAAEzB,MAAM,CAACI,MAAP,CAAcV,eAAd,CAA8B,CAA9B,EAAiCI,OAAjC,CAAyCyB;AADhD,KAFQ,CAAD,CAAZ;AAOAvB,IAAAA,MAAM,CAACI,MAAP,CAAcV,eAAd,CAA8BgC,GAA9B,CAAmCC,QAAD,IAAc;AAC9C,UACEA,QAAQ,CAAC7B,OAAT,CAAiByB,WAAjB,IACA,EACEhD,SAAS,CAACE,SAAV,CAAoBmD,MAApB,CACGC,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAeH,QAAQ,CAAC7B,OAAT,CAAiByB,WADzC,EAEED,MAFF,GAEW,CAFX,IAEgB/C,SAAS,CAACkD,MAAV,KAAqBE,QAAQ,CAAC7B,OAAT,CAAiByB,WAHxD,CAFF,EAOE;AACA/C,QAAAA,YAAY,CAAED,SAAD,oCACRA,SADQ,GAER;AACDE,UAAAA,SAAS,EAAE,CACT,GAAGF,SAAS,CAACE,SADJ,EAET;AAAEqD,YAAAA,QAAQ,EAAEH,QAAQ,CAAC7B,OAAT,CAAiByB;AAA7B,WAFS;AADV,SAFQ,CAAD,CAAZ;AASD;;AAED,UACEI,QAAQ,CAAC5B,SAAT,CAAmBwB,WAAnB,IACA,EACEhD,SAAS,CAACE,SAAV,CAAoBmD,MAApB,CACGC,CAAD,IAAOA,CAAC,CAACC,QAAF,KAAeH,QAAQ,CAAC5B,SAAT,CAAmBwB,WAD3C,EAEED,MAFF,GAEW,CAFX,IAGA/C,SAAS,CAACiD,WAAV,KAA0BG,QAAQ,CAAC5B,SAAT,CAAmBwB,WAJ/C,CAFF,EAQE;AACA/C,QAAAA,YAAY,CAAED,SAAD,oCACRA,SADQ,GAER;AACDE,UAAAA,SAAS,EAAE,CACT,GAAGF,SAAS,CAACE,SADJ,EAET;AAAEqD,YAAAA,QAAQ,EAAEH,QAAQ,CAAC5B,SAAT,CAAmBwB;AAA/B,WAFS;AADV,SAFQ,CAAD,CAAZ;AASD;AACF,KAvCD;AAwCD,GAnED,EAmEG,CAACvB,MAAM,CAACI,MAAP,CAAcV,eAAf,CAnEH;AAqEA,sBACE;AAAM,IAAA,QAAQ,EAAEM,MAAM,CAAC+B;AAAvB,KAAyC/D,KAAzC;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAEgE,OAAO,CACZhC,MAAM,CAACiC,OAAP,CAAexB,OAAf,IAA0BT,MAAM,CAACkC,MAAP,CAAczB,OAD5B,CADhB;AAIE,kBAAA,SAAS,MAJX;AAKE,kBAAA,UAAU,EAAET,MAAM,CAACiC,OAAP,CAAexB,OAAf,IAA0BT,MAAM,CAACkC,MAAP,CAAczB,OALtD;AAME,kBAAA,KAAK,EAAC,UANR;AAOE,kBAAA,IAAI,EAAC,SAPP;AAQE,kBAAA,MAAM,EAAET,MAAM,CAACmC,UARjB;AASE,kBAAA,QAAQ,EAAEnC,MAAM,CAACoC,YATnB;AAUE,kBAAA,KAAK,EAAEpC,MAAM,CAACI,MAAP,CAAcK;AAVvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAeE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,EAAE,EAAC,UADL;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,KAAK,EAAC,WAHR;AAIE,kBAAA,eAAe,EAAE,IAJnB;AAKE,kBAAA,WAAW,EAAC,YALd;AAME,kBAAA,KAAK,EAAET,MAAM,CAACI,MAAP,CAAcF,QANvB;AAOE,kBAAA,OAAO,EAAE,MAAMmC,eAAe,CAAC,KAAD,CAPhC;AAQE,kBAAA,QAAQ,EAAGC,IAAD,IACRtC,MAAM,CAACuC,aAAP,CAAqB,UAArB,EAAiCvF,MAAM,CAACsF,IAAD,CAAvC,CATJ;AAWE,kBAAA,WAAW,EAAGE,MAAD,iBACX,QAAC,SAAD;AAAW,oBAAA,SAAS;AAApB,qBAAyBA,MAAzB;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAfF,eAgCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,iBAAD;AACE,kBAAA,MAAM,EAAExC,MAAM,CAACkC,MADjB;AAEE,kBAAA,OAAO,EAAElC,MAAM,CAACiC,OAFlB;AAGE,kBAAA,aAAa,EAAEjC,MAAM,CAACuC,aAHxB;AAIE,kBAAA,UAAU,EAAEvC,MAAM,CAACmC,UAJrB;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,IAAI,EAAEjE,IANR;AAOE,kBAAA,MAAM,EAAE8B;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAwDE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEyC,QAAAA,EAAE,EAAE;AAAN,OAAV;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAElE;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,eAAD;AAAiB,cAAA,MAAM,EAAEyB;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxDF,eAqEE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEyC,QAAAA,EAAE,EAAE;AAAN,OAAV;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,mBAAD;AACE,kBAAA,MAAM,EAAEzC,MAAM,CAACkC,MADjB;AAEE,kBAAA,OAAO,EAAElC,MAAM,CAACiC,OAFlB;AAGE,kBAAA,aAAa,EAAEjC,MAAM,CAACuC,aAHxB;AAIE,kBAAA,UAAU,EAAEvC,MAAM,CAACmC,UAJrB;AAKE,kBAAA,kBAAkB,EAAE/D,kBALtB;AAME,kBAAA,SAAS,EAAEE,SANb;AAOE,kBAAA,IAAI,EAAEJ;AAPR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,0BACG,OAAOC,eAAP,KAA2B,QAA3B,IACDA,eAAe,KAAK,IADnB,gBAEC,QAAC,kBAAD;AACE,kBAAA,MAAM,EAAE6B,MAAM,CAACkC,MADjB;AAEE,kBAAA,OAAO,EAAElC,MAAM,CAACiC,OAFlB;AAGE,kBAAA,aAAa,EAAEjC,MAAM,CAACuC,aAHxB;AAIE,kBAAA,UAAU,EAAEvC,MAAM,CAACmC,UAJrB;AAKE,kBAAA,kBAAkB,EAAE/D,kBALtB;AAME,kBAAA,SAAS,EAAEE,SANb;AAOE,kBAAA,IAAI,EAAEJ,IAPR;AAQE,kBAAA,MAAM,EAAE8B,MAAM,CAACI;AARjB;AAAA;AAAA;AAAA;AAAA,wBAFD,GAaCjC,eAAe,KAAK,IAApB,iBACE,QAAC,iBAAD;AACE,kBAAA,MAAM,EAAE6B,MAAM,CAACkC,MADjB;AAEE,kBAAA,OAAO,EAAElC,MAAM,CAACiC,OAFlB;AAGE,kBAAA,aAAa,EAAEjC,MAAM,CAACuC,aAHxB;AAIE,kBAAA,UAAU,EAAEvC,MAAM,CAACmC,UAJrB;AAKE,kBAAA,IAAI,EAAC,aALP;AAME,kBAAA,IAAI,EAAEjE,IANR;AAOE,kBAAA,MAAM,EAAE8B;AAPV;AAAA;AAAA;AAAA;AAAA;AAfN;AAAA;AAAA;AAAA;AAAA,sBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArEF,eAwHE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEyC,QAAAA,EAAE,EAAE;AAAN,OAAV;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAET,OAAO,CACZhC,MAAM,CAACiC,OAAP,CAAevD,QAAf,IAA2BsB,MAAM,CAACkC,MAAP,CAAcxD,QAD7B,CADhB;AAIE,kBAAA,MAAM,EAAEsB,MAAM,CAACmC,UAJjB;AAKE,kBAAA,IAAI,EAAC,UALP;AAME,kBAAA,KAAK,EAAC,WANR;AAOE,kBAAA,eAAe,EAAE;AACfO,oBAAAA,MAAM,EAAE;AADO,mBAPnB;AAUE,kBAAA,SAAS,MAVX;AAWE,kBAAA,EAAE,EAAC,UAXL;AAYE,kBAAA,MAAM,MAZR;AAaE,kBAAA,KAAK,EAAEhE,QAbT;AAcE,kBAAA,QAAQ,EAAGiE,KAAD,IAAW;AACnBhE,oBAAAA,WAAW,CAACgE,KAAK,CAACC,MAAN,CAAa7D,KAAd,CAAX;AACAiB,oBAAAA,MAAM,CAACuC,aAAP,CAAqB,UAArB,EAAiCI,KAAK,CAACC,MAAN,CAAa7D,KAA9C;AACD,mBAjBH;AAkBE,kBAAA,WAAW,EAAE;AACX8D,oBAAAA,MAAM,EAAE;AADG,mBAlBf;AAqBE,kBAAA,UAAU,EAAC,yBArBb;AAsBE,kBAAA,OAAO,EAAC,UAtBV;AAAA,4BAwBG/D,SAAS,CAAC4C,GAAV,CAAeoB,MAAD,iBACb;AAA2B,oBAAA,KAAK,EAAEA,MAAM,CAAC/D,KAAzC;AAAA,8BACG+D,MAAM,CAAC9D;AADV,qBAAa8D,MAAM,CAAC/D,KAApB;AAAA;AAAA;AAAA;AAAA,0BADD;AAxBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAiCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAEiD,OAAO,CACZhC,MAAM,CAACiC,OAAP,CAAec,QAAf,IAA2B/C,MAAM,CAACkC,MAAP,CAAca,QAD7B,CADhB;AAIE,kBAAA,OAAO,EAAC,UAJV;AAKE,kBAAA,QAAQ,EAAE/C,MAAM,CAACoC,YALnB;AAME,kBAAA,MAAM,EAAEpC,MAAM,CAACmC,UANjB;AAOE,kBAAA,UAAU,EACRnC,MAAM,CAACiC,OAAP,CAAec,QAAf,IAA2B/C,MAAM,CAACkC,MAAP,CAAca,QAR7C;AAUE,kBAAA,EAAE,EAAC,UAVL;AAWE,kBAAA,IAAI,EAAC,UAXP;AAYE,kBAAA,KAAK,EAAC,WAZR;AAaE,kBAAA,SAAS;AAbX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjCF,EAkDGrE,QAAQ,KAAK,UAAb,iBACC,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAEsD,OAAO,CACZhC,MAAM,CAACiC,OAAP,CAAee,oBAAf,IACEhD,MAAM,CAACkC,MAAP,CAAcc,oBAFJ,CADhB;AAKE,kBAAA,OAAO,EAAC,UALV;AAME,kBAAA,QAAQ,EAAEhD,MAAM,CAACoC,YANnB;AAOE,kBAAA,MAAM,EAAEpC,MAAM,CAACmC,UAPjB;AAQE,kBAAA,UAAU,EACRnC,MAAM,CAACiC,OAAP,CAAee,oBAAf,IACAhD,MAAM,CAACkC,MAAP,CAAcc,oBAVlB;AAYE,kBAAA,EAAE,EAAC,sBAZL;AAaE,kBAAA,IAAI,EAAC,sBAbP;AAcE,kBAAA,KAAK,EAAC,qBAdR;AAeE,kBAAA,SAAS;AAfX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxHF,EA2MG,EAAE,OAAO7E,eAAP,KAA2B,QAA7B,KAA0CA,eAAe,KAAK,IAA9D,iBACC,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAEsE,QAAAA,EAAE,EAAE;AAAN,OAAV;AAAA,6BACE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,EAAE,EAAE,EAAtB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAET,OAAO,CACZhC,MAAM,CAACiC,OAAP,CAAerD,YAAf,IACEoB,MAAM,CAACkC,MAAP,CAActD,YAFJ,CADhB;AAKE,kBAAA,MAAM,EAAEoB,MAAM,CAACmC,UALjB;AAME,kBAAA,IAAI,EAAC,cANP;AAOE,kBAAA,KAAK,EAAC,eAPR;AAQE,kBAAA,eAAe,EAAE;AACfO,oBAAAA,MAAM,EAAE;AADO,mBARnB;AAWE,kBAAA,SAAS,MAXX;AAYE,kBAAA,EAAE,EAAC,cAZL;AAaE,kBAAA,MAAM,MAbR;AAcE,kBAAA,KAAK,EAAE9D,YAdT;AAeE,kBAAA,QAAQ,EAAG+D,KAAD,IAAW;AACnB9D,oBAAAA,eAAe,CAAC8D,KAAK,CAACC,MAAN,CAAa7D,KAAd,CAAf;AACA4D,oBAAAA,KAAK,CAACC,MAAN,CAAa7D,KAAb;AACAiB,oBAAAA,MAAM,CAACuC,aAAP,CACE,cADF,EAEEI,KAAK,CAACC,MAAN,CAAa7D,KAFf;AAID,mBAtBH;AAuBE,kBAAA,WAAW,EAAE;AACX8D,oBAAAA,MAAM,EAAE;AADG,mBAvBf;AA0BE,kBAAA,UAAU,EAAC,6BA1Bb;AA2BE,kBAAA,OAAO,EAAC,UA3BV;AAAA,4BA6BG5D,aAAa,CAACyC,GAAd,CAAmBoB,MAAD,iBACjB;AAA2B,oBAAA,KAAK,EAAEA,MAAM,CAAC/D,KAAzC;AAAA,8BACG+D,MAAM,CAAC9D;AADV,qBAAa8D,MAAM,CAAC/D,KAApB;AAAA;AAAA;AAAA;AAAA,0BADD;AA7BH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAsCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,EAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAEiD,OAAO,CACZhC,MAAM,CAACiC,OAAP,CAAegB,YAAf,IACEjD,MAAM,CAACkC,MAAP,CAAce,YAFJ,CADhB;AAKE,kBAAA,OAAO,EAAC,UALV;AAME,kBAAA,QAAQ,EAAEjD,MAAM,CAACoC,YANnB;AAOE,kBAAA,MAAM,EAAEpC,MAAM,CAACmC,UAPjB;AAQE,kBAAA,UAAU,EACRnC,MAAM,CAACiC,OAAP,CAAegB,YAAf,IACAjD,MAAM,CAACkC,MAAP,CAAce,YAVlB;AAYE,kBAAA,EAAE,EAAC,cAZL;AAaE,kBAAA,IAAI,EAAC,cAbP;AAcE,kBAAA,KAAK,EAAC,eAdR;AAeE,kBAAA,SAAS;AAfX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAtCF,EAyDGrE,YAAY,KAAK,UAAjB,iBACC,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,KAAK,EAAEoD,OAAO,CACZhC,MAAM,CAACiC,OAAP,CAAeiB,wBAAf,IACElD,MAAM,CAACkC,MAAP,CAAcgB,wBAFJ,CADhB;AAKE,kBAAA,OAAO,EAAC,UALV;AAME,kBAAA,QAAQ,EAAElD,MAAM,CAACoC,YANnB;AAOE,kBAAA,MAAM,EAAEpC,MAAM,CAACmC,UAPjB;AAQE,kBAAA,UAAU,EACRnC,MAAM,CAACiC,OAAP,CAAeiB,wBAAf,IACAlD,MAAM,CAACkC,MAAP,CAAcgB,wBAVlB;AAYE,kBAAA,EAAE,EAAC,0BAZL;AAaE,kBAAA,IAAI,EAAC,0BAbP;AAcE,kBAAA,KAAK,EAAC,qBAdR;AAeE,kBAAA,SAAS;AAfX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA1DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5MJ,eAuSE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,OAAO,EAAE,MADP;AAEFC,QAAAA,QAAQ,EAAE,MAFR;AAGFC,QAAAA,cAAc,EAAE,eAHd;AAIFC,QAAAA,EAAE,EAAE,CAAC,CAJH;AAKFC,QAAAA,EAAE,EAAE,CAAC,CALH;AAMFd,QAAAA,EAAE,EAAE;AANF,OADN;AAAA,8BAUE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,EAAE,EAAE;AACFe,UAAAA,CAAC,EAAE,CADD;AAEFC,UAAAA,EAAE,EAAE;AAFF,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAED,UAAAA,CAAC,EAAE;AAAL,SAAZ;AAAsB,QAAA,OAAO,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eAsBE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE;AAAEA,UAAAA,CAAC,EAAE;AAAL,SAAZ;AAAsB,QAAA,IAAI,EAAC,QAA3B;AAAoC,QAAA,OAAO,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvSF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoUD,CAjeM","sourcesContent":["import React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport DeliveryDetails from \"./delivery-details\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nimport GoogleMaps from \"./google-maps\";\n\nexport const OrderCreateForm = (props) => {\n  const router = useRouter();\n  const { user } = useAuth();\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n  const [driver, setDriver] = useState();\n  const [addresses, setAddresses] = useState({ waypoints: [] });\n\n  const [saleType, setSaleType] = React.useState(\"quantity\");\n  const [purchaseType, setPurchaseType] = React.useState(\"quantity\");\n\n  const saleTypes = [\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  const purchaseTypes = [\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  let validationShape = {\n    customer: Yup.object().nullable().required(\"Customer is required\"),\n    vehicle: Yup.lazy((value) => {\n      switch (typeof value) {\n        case \"object\":\n          return Yup.object().nullable().required(\"Vehicle is required\");\n        case \"string\":\n          return Yup.string().required(\"Vehicle is required\");\n        default:\n          return Yup.string().required(\"Vehicle is required\");\n      }\n    }),\n  };\n\n  validationShape.deliveryDetails = Yup.array().of(\n    Yup.object().shape({\n      loading: Yup.object().required(\"Loading Point is Required\"), // these constraints take precedence\n      unloading: Yup.object().required(\"Unloading Point is Required\"), // these constraints take precedence\n    })\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      deliveryDetails: [\n        {\n          loading: \"\",\n          unloading: \"\",\n        },\n      ],\n    },\n    // validationSchema: Yup.object().shape(validationShape),\n    onSubmit: async (values, helpers) => {\n      try {\n        console.log(values);\n\n        const newOrder = {\n          orderNo: parseInt(values.orderNo),\n          saleDate: values.saleDate.format(),\n          customer: values.customer,\n          vehicle: values.vehicle,\n          user: user.id,\n        };\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    console.log(formik.values.deliveryDetails);\n    console.log(addresses);\n\n    setAddresses({ waypoints: [...addresses.waypoints] });\n    if (\n      formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1]\n        .unloading.description\n    ) {\n      setAddresses((addresses) => ({\n        ...addresses,\n        ...{\n          destination:\n            formik.values.deliveryDetails[\n              formik.values.deliveryDetails.length - 1\n            ].unloading.description,\n        },\n      }));\n    }\n\n    setAddresses((addresses) => ({\n      ...addresses,\n      ...{\n        origin: formik.values.deliveryDetails[0].loading.description,\n      },\n    }));\n\n    formik.values.deliveryDetails.map((delivery) => {\n      if (\n        delivery.loading.description &&\n        !(\n          addresses.waypoints.filter(\n            (e) => e.location === delivery.loading.description\n          ).length > 0 || addresses.origin === delivery.loading.description\n        )\n      ) {\n        setAddresses((addresses) => ({\n          ...addresses,\n          ...{\n            waypoints: [\n              ...addresses.waypoints,\n              { location: delivery.loading.description },\n            ],\n          },\n        }));\n      }\n\n      if (\n        delivery.unloading.description &&\n        !(\n          addresses.waypoints.filter(\n            (e) => e.location === delivery.unloading.description\n          ).length > 0 ||\n          addresses.destination === delivery.unloading.description\n        )\n      ) {\n        setAddresses((addresses) => ({\n          ...addresses,\n          ...{\n            waypoints: [\n              ...addresses.waypoints,\n              { location: delivery.unloading.description },\n            ],\n          },\n        }));\n      }\n    });\n  }, [formik.values.deliveryDetails]);\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <PartyAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    type=\"customer\"\n                    user={user}\n                    formik={formik}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Delivery details</Typography>\n              <GoogleMaps addresses={addresses} />\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <DeliveryDetails formik={formik} />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Vehicle details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <VehicleAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    setSelectedVehicle={setSelectedVehicle}\n                    setDriver={setDriver}\n                    user={user}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  {typeof selectedVehicle === \"object\" &&\n                  selectedVehicle !== null ? (\n                    <DriverAutocomplete\n                      errors={formik.errors}\n                      touched={formik.touched}\n                      setFieldValue={formik.setFieldValue}\n                      handleBlur={formik.handleBlur}\n                      setSelectedVehicle={setSelectedVehicle}\n                      setDriver={setDriver}\n                      user={user}\n                      values={formik.values}\n                    />\n                  ) : (\n                    selectedVehicle !== null && (\n                      <PartyAutocomplete\n                        errors={formik.errors}\n                        touched={formik.touched}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        type=\"transporter\"\n                        user={user}\n                        formik={formik}\n                      />\n                    )\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Sale details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleType && formik.errors.saleType\n                    )}\n                    onBlur={formik.handleBlur}\n                    name=\"saleType\"\n                    label=\"Sale Type\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    id=\"saleType\"\n                    select\n                    value={saleType}\n                    onChange={(event) => {\n                      setSaleType(event.target.value);\n                      formik.setFieldValue(\"saleType\", event.target.value);\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                    helperText=\"Please select sale type\"\n                    variant=\"outlined\"\n                  >\n                    {saleTypes.map((option) => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleRate && formik.errors.saleRate\n                    )}\n                    variant=\"outlined\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    helperText={\n                      formik.touched.saleRate && formik.errors.saleRate\n                    }\n                    id=\"saleRate\"\n                    name=\"saleRate\"\n                    label=\"Sale Rate\"\n                    fullWidth\n                  />\n                </Grid>\n                {saleType === \"quantity\" && (\n                  <Grid item md={4} xs={6}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.saleMinimumGuarantee &&\n                          formik.errors.saleMinimumGuarantee\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.saleMinimumGuarantee &&\n                        formik.errors.saleMinimumGuarantee\n                      }\n                      id=\"saleMinimumGuarantee\"\n                      name=\"saleMinimumGuarantee\"\n                      label=\"Min. Load Guarantee\"\n                      fullWidth\n                    />\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      {!(typeof selectedVehicle === \"object\") && selectedVehicle !== null && (\n        <Card sx={{ mt: 3 }}>\n          <CardContent>\n            <Grid container spacing={3}>\n              <Grid item md={4} xs={12}>\n                <Typography variant=\"h6\">Purchase details</Typography>\n              </Grid>\n              <Grid item md={8} xs={12}>\n                <Grid container spacing={3}>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseType &&\n                          formik.errors.purchaseType\n                      )}\n                      onBlur={formik.handleBlur}\n                      name=\"purchaseType\"\n                      label=\"Purchase Type\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      id=\"purchaseType\"\n                      select\n                      value={purchaseType}\n                      onChange={(event) => {\n                        setPurchaseType(event.target.value);\n                        event.target.value;\n                        formik.setFieldValue(\n                          \"purchaseType\",\n                          event.target.value\n                        );\n                      }}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      helperText=\"Please select purchase type\"\n                      variant=\"outlined\"\n                    >\n                      {purchaseTypes.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseRate &&\n                          formik.errors.purchaseRate\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.purchaseRate &&\n                        formik.errors.purchaseRate\n                      }\n                      id=\"purchaseRate\"\n                      name=\"purchaseRate\"\n                      label=\"Purchase Rate\"\n                      fullWidth\n                    />\n                  </Grid>\n                  {purchaseType === \"quantity\" && (\n                    <Grid item md={4} xs={6}>\n                      <TextField\n                        error={Boolean(\n                          formik.touched.purchaseMinimumGuarantee &&\n                            formik.errors.purchaseMinimumGuarantee\n                        )}\n                        variant=\"outlined\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        helperText={\n                          formik.touched.purchaseMinimumGuarantee &&\n                          formik.errors.purchaseMinimumGuarantee\n                        }\n                        id=\"purchaseMinimumGuarantee\"\n                        name=\"purchaseMinimumGuarantee\"\n                        label=\"Min. Load Guarantee\"\n                        fullWidth\n                      />\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}