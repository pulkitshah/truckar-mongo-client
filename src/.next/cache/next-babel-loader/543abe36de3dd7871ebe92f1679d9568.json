{"ast":null,"code":"const warn = (...args) => {\n  if (false) {\n    return;\n  }\n\n  console.warn(...args);\n};\n\nclass GTM {\n  constructor() {\n    this.CONTAINER_ID = null;\n    this.initialized = false;\n  }\n\n  configure(config) {\n    this.CONTAINER_ID = config.containerId;\n  }\n\n  initialize(config) {\n    if (this.initialized) {\n      warn('GTM can only be initialized once.');\n      return;\n    } // Maybe you want to load events from server side (in NextJS apps for example),\n    // those can be queued.\n    // SSR queued events can be loaded in the initialize script.\n    // For the moment we do not implement it, but in future we might add it.\n\n\n    if (!document) {\n      warn('GTM can be initialized only on client side.');\n      return;\n    }\n\n    if (!config.containerId) {\n      warn('GTM requires a GTM ID to be loaded.');\n      return;\n    }\n\n    this.configure(config);\n    const script = document.createElement('script');\n    const noscript = document.createElement('noscript');\n    script.innerHTML = `\n      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n      })(window,document,'script','dataLayer','${this.CONTAINER_ID}');\n    `;\n    noscript.innerHTML = `\n      <iframe src=\"https://www.googletagmanager.com/ns.html?id=${this.CONTAINER_ID}\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n    `;\n    document.head.insertBefore(script, document.head.childNodes[0]);\n    document.body.insertBefore(noscript, document.body.childNodes[0]);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  push(...args) {\n    if (!window) {\n      warn('GTM push works only on client side.');\n      return;\n    }\n\n    if (!window.dataLayer) {\n      window.dataLayer = [];\n    }\n\n    window.dataLayer.push(...args);\n  }\n\n} // Singleton\n\n\nexport const gtm = new GTM();","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/lib/gtm.js"],"names":["warn","args","console","GTM","constructor","CONTAINER_ID","initialized","configure","config","containerId","initialize","document","script","createElement","noscript","innerHTML","head","insertBefore","childNodes","body","push","window","dataLayer","gtm"],"mappings":"AAAA,MAAMA,IAAI,GAAG,CAAC,GAAGC,IAAJ,KAAa;AACxB,aAA4C;AAC1C;AACD;;AAEDC,EAAAA,OAAO,CAACF,IAAR,CAAa,GAAGC,IAAhB;AACD,CAND;;AAQA,MAAME,GAAN,CAAU;AACRC,EAAAA,WAAW,GAAG;AACZ,SAAKC,YAAL,GAAoB,IAApB;AAEA,SAAKC,WAAL,GAAmB,KAAnB;AACD;;AAEDC,EAAAA,SAAS,CAACC,MAAD,EAAS;AAChB,SAAKH,YAAL,GAAoBG,MAAM,CAACC,WAA3B;AACD;;AAEDC,EAAAA,UAAU,CAACF,MAAD,EAAS;AACjB,QAAI,KAAKF,WAAT,EAAsB;AACpBN,MAAAA,IAAI,CAAC,mCAAD,CAAJ;AACA;AACD,KAJgB,CAMjB;AACA;AACA;AACA;;;AAEA,QAAI,CAACW,QAAL,EAAe;AACbX,MAAAA,IAAI,CAAC,6CAAD,CAAJ;AACA;AACD;;AAED,QAAI,CAACQ,MAAM,CAACC,WAAZ,EAAyB;AACvBT,MAAAA,IAAI,CAAC,qCAAD,CAAJ;AACA;AACD;;AAED,SAAKO,SAAL,CAAeC,MAAf;AAEA,UAAMI,MAAM,GAAGD,QAAQ,CAACE,aAAT,CAAuB,QAAvB,CAAf;AACA,UAAMC,QAAQ,GAAGH,QAAQ,CAACE,aAAT,CAAuB,UAAvB,CAAjB;AAEAD,IAAAA,MAAM,CAACG,SAAP,GAAoB;AACxB;AACA;AACA;AACA;AACA,iDAAiD,KAAKV,YAAa;AACnE,KANI;AAOAS,IAAAA,QAAQ,CAACC,SAAT,GAAsB;AAC1B,iEAAiE,KAAKV,YAAa;AACnF,KAFI;AAIAM,IAAAA,QAAQ,CAACK,IAAT,CAAcC,YAAd,CAA2BL,MAA3B,EAAmCD,QAAQ,CAACK,IAAT,CAAcE,UAAd,CAAyB,CAAzB,CAAnC;AACAP,IAAAA,QAAQ,CAACQ,IAAT,CAAcF,YAAd,CAA2BH,QAA3B,EAAqCH,QAAQ,CAACQ,IAAT,CAAcD,UAAd,CAAyB,CAAzB,CAArC;AACD,GAlDO,CAoDR;;;AACAE,EAAAA,IAAI,CAAC,GAAGnB,IAAJ,EAAU;AACZ,QAAI,CAACoB,MAAL,EAAa;AACXrB,MAAAA,IAAI,CAAC,qCAAD,CAAJ;AACA;AACD;;AAED,QAAI,CAACqB,MAAM,CAACC,SAAZ,EAAuB;AACrBD,MAAAA,MAAM,CAACC,SAAP,GAAmB,EAAnB;AACD;;AAEDD,IAAAA,MAAM,CAACC,SAAP,CAAiBF,IAAjB,CAAsB,GAAGnB,IAAzB;AACD;;AAhEO,C,CAmEV;;;AACA,OAAO,MAAMsB,GAAG,GAAG,IAAIpB,GAAJ,EAAZ","sourcesContent":["const warn = (...args) => {\n  if (process.env.NODE_ENV !== 'development') {\n    return;\n  }\n\n  console.warn(...args);\n};\n\nclass GTM {\n  constructor() {\n    this.CONTAINER_ID = null;\n\n    this.initialized = false;\n  }\n\n  configure(config) {\n    this.CONTAINER_ID = config.containerId;\n  }\n\n  initialize(config) {\n    if (this.initialized) {\n      warn('GTM can only be initialized once.');\n      return;\n    }\n\n    // Maybe you want to load events from server side (in NextJS apps for example),\n    // those can be queued.\n    // SSR queued events can be loaded in the initialize script.\n    // For the moment we do not implement it, but in future we might add it.\n\n    if (!document) {\n      warn('GTM can be initialized only on client side.');\n      return;\n    }\n\n    if (!config.containerId) {\n      warn('GTM requires a GTM ID to be loaded.');\n      return;\n    }\n\n    this.configure(config);\n\n    const script = document.createElement('script');\n    const noscript = document.createElement('noscript');\n\n    script.innerHTML = `\n      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n        new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n        j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n        'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n      })(window,document,'script','dataLayer','${this.CONTAINER_ID}');\n    `;\n    noscript.innerHTML = `\n      <iframe src=\"https://www.googletagmanager.com/ns.html?id=${this.CONTAINER_ID}\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe>\n    `;\n\n    document.head.insertBefore(script, document.head.childNodes[0]);\n    document.body.insertBefore(noscript, document.body.childNodes[0]);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  push(...args) {\n    if (!window) {\n      warn('GTM push works only on client side.');\n      return;\n    }\n\n    if (!window.dataLayer) {\n      window.dataLayer = [];\n    }\n\n    window.dataLayer.push(...args);\n  }\n}\n\n// Singleton\nexport const gtm = new GTM();\n"]},"metadata":{},"sourceType":"module"}