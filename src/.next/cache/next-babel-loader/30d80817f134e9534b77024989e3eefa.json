{"ast":null,"code":"import _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nvar initialState = {\n  branches: [],\n  branchIds: [],\n  isNextPageLoading: true\n};\nexport var slice = createSlice({\n  name: \"branch\",\n  initialState: initialState,\n  reducers: {\n    getBranches: function getBranches(state, action) {\n      var branches = action.payload;\n      state.branches = branches;\n      state.isNextPageLoading = false;\n    },\n    createBranch: function createBranch(state, action) {\n      var branch = action.payload.branch;\n      state.branches = [].concat(_toConsumableArray(state.branches), [branch]);\n    },\n    selectBranch: function selectBranch(state, action) {\n      var _action$payload$branc = action.payload.branchId,\n          branchId = _action$payload$branc === void 0 ? null : _action$payload$branc;\n      state.isModalOpen = true;\n      state.selectedBranchId = branchId;\n    },\n    updateBranch: function updateBranch(state, action) {\n      var branch = action.payload.branch;\n      state.branches = _.map(state.branches, function (_branch) {\n        if (_branch.id === branch.id) {\n          return branch;\n        }\n\n        return _branch;\n      });\n    },\n    deleteBranch: function deleteBranch(state, action) {\n      var branchId = action.payload.branchId;\n      state.branches = _.reject(state.branches, {\n        id: branchId\n      });\n    },\n    selectRange: function selectRange(state, action) {\n      var _action$payload = action.payload,\n          start = _action$payload.start,\n          end = _action$payload.end;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start: start,\n        end: end\n      };\n    },\n    openModal: function openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal: function closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedBranchId = null;\n      state.selectedRange = null;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/drivers.js"],"names":["createSlice","_","initialState","branches","branchIds","isNextPageLoading","slice","name","reducers","getBranches","state","action","payload","createBranch","branch","selectBranch","branchId","isModalOpen","selectedBranchId","updateBranch","map","_branch","id","deleteBranch","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  branches: [],\n  branchIds: [],\n  isNextPageLoading: true,\n};\n\nexport const slice = createSlice({\n  name: \"branch\",\n  initialState,\n  reducers: {\n    getBranches(state, action) {\n      const branches = action.payload;\n      state.branches = branches;\n      state.isNextPageLoading = false;\n    },\n    createBranch(state, action) {\n      const { branch } = action.payload;\n\n      state.branches = [...state.branches, branch];\n    },\n    selectBranch(state, action) {\n      const { branchId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedBranchId = branchId;\n    },\n    updateBranch(state, action) {\n      const { branch } = action.payload;\n\n      state.branches = _.map(state.branches, (_branch) => {\n        if (_branch.id === branch.id) {\n          return branch;\n        }\n\n        return _branch;\n      });\n    },\n    deleteBranch(state, action) {\n      const { branchId } = action.payload;\n\n      state.branches = _.reject(state.branches, {\n        id: branchId,\n      });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedBranchId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}