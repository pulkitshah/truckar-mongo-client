{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-drawer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport { Storage } from \"aws-amplify\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Divider, Drawer, IconButton, Table, TableBody, TableCell, TableHead, TableRow, TextField, Typography, useMediaQuery } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { X as XIcon } from \"../../../icons/x\";\nimport { PropertyList } from \"../../property-list\";\nimport { PropertyListItem } from \"../../property-list-item\";\nimport { Scrollbar } from \"../../scrollbar\";\n\nconst OrganisationPreview = props => {\n  const {\n    lgUp,\n    onApprove,\n    onEdit,\n    onReject,\n    organisation\n  } = props;\n  const align = lgUp ? \"horizontal\" : \"vertical\";\n  const {\n    0: organisationLogo,\n    1: setOrganisationLogo\n  } = useState();\n  console.log(organisation);\n  useEffect(async () => {\n    try {\n      const logo = await Storage.get(organisation.logo);\n      setOrganisationLogo(logo);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [organisationLogo && /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      src: organisationLogo,\n      alt: \"Business Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: \"center\",\n        borderRadius: 1,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 3\n        },\n        variant: \"h6\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: \"center\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          mt: 3,\n          m: -1,\n          \"& > button\": {\n            m: 1\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onEdit,\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }, this),\n          sx: {\n            pt: 3\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PropertyList, {\n      children: [/*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Business Name\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"primary\",\n          variant: \"body2\",\n          children: `${organisation.name} (${organisation.initials})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.addressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.addressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.pincode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Bank Details\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.bankName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.bankAccountNumber && `A/c: ${organisation.bankAccountNumber}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.bankIFSC && `IFSC: ${organisation.bankIFSC}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: organisation.bankBranchName && `Branch: ${organisation.bankBranchName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 3\n        },\n        variant: \"h6\",\n        children: \"Billing Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"PAN\",\n        value: organisation.pan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"GSTIN\",\n        value: organisation.gstin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Contact No.\",\n        value: organisation.contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"E-mail\",\n        value: organisation.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Terms & Conditions\",\n        value: organisation.invoiceTermsAndConditions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst OrganisationForm = props => {\n  const {\n    onCancel,\n    onSave,\n    organisation\n  } = props;\n  const formik = useFormik({\n    initialValues: {\n      name: organisation.name,\n      initials: organisation.initials,\n      addressLine1: organisation.addressLine1,\n      addressLine2: organisation.addressLine2,\n      city: organisation.city,\n      pincode: organisation.pincode,\n      gstin: organisation.gstin,\n      pan: organisation.pan,\n      invoiceTermsAndConditions: organisation.invoiceTermsAndConditions,\n      bankName: organisation.bankName,\n      bankAccountNumber: organisation.bankAccountNumber,\n      bankBranchName: organisation.bankBranchName,\n      bankIFSC: organisation.bankIFSC,\n      contact: organisation.contact\n    },\n    // validationSchema: Yup.object({\n    //   name: Yup.string().max(255).required(\"Name is required\"),\n    //   initials: Yup.string().max(255).required(\"Required\"),\n    //   addressLine1: Yup.string()\n    //     .max(255)\n    //     .required(\"Address Line 1 is required\"),\n    //   city: Yup.string().max(255).required(\"City is required\"),\n    //   pincode: Yup.string().max(255).required(\"Pincode is required\"),\n    //   gstin: Yup.string()\n    //     .trim()\n    //     .matches(\n    //       /^([0-9]){2}([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}([0-9]){1}([a-zA-Z]){1}([0-9]){1}?$/,\n    //       \"Invalid GST Number\"\n    //     ),\n    //   pan: Yup.string().max(255).required(\"PAN is required\"),\n    //   jurisdiction: Yup.string().max(255).required(\"Jurisdiction is required\"),\n    // }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        const id = uuid();\n        values.id = id;\n        values.user = user.id;\n        await API.graphql({\n          query: createOrganisation,\n          variables: {\n            input: values\n          },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\"\n        });\n        toast.success(\"Organisation created!\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: \"center\",\n        backgroundColor: theme => theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n        borganisationRadius: 1,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        px: 3,\n        py: 2.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"overline\",\n        sx: {\n          mr: 2\n        },\n        color: \"textSecondary\",\n        children: \"Organisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: \"center\",\n          display: \"flex\",\n          m: -1,\n          \"& > button\": {\n            m: 1\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: onSave,\n          size: \"small\",\n          variant: \"contained\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onCancel,\n          size: \"small\",\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        my: 3\n      },\n      variant: \"h6\",\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      error: Boolean(formik.touched.name && formik.errors.name),\n      fullWidth: true,\n      helperText: formik.touched.name && formik.errors.name,\n      label: \"Business Name\",\n      name: \"name\",\n      onBlur: formik.handleBlur,\n      onChange: event => {\n        formik.setFieldValue(`initials`, `${getInitials(event.target.value)}`);\n        formik.setFieldValue(`name`, event.target.value);\n      },\n      value: formik.values.name,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      error: Boolean(formik.touched.initials && formik.errors.initials),\n      fullWidth: true,\n      helperText: formik.touched.initials && formik.errors.initials,\n      label: \"Initials\",\n      name: \"initials\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      value: formik.values.initials,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      error: Boolean(formik.touched.addressLine1 && formik.errors.addressLine1),\n      fullWidth: true,\n      helperText: formik.touched.addressLine1 && formik.errors.addressLine1,\n      label: \"Address Line 1\",\n      name: \"addressLine1\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      value: formik.values.addressLine1,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      error: Boolean(formik.touched.addressLine2 && formik.errors.addressLine2),\n      fullWidth: true,\n      helperText: formik.touched.addressLine2 && formik.errors.addressLine2,\n      label: \"Address Line 2\",\n      name: \"addressLine2\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      value: formik.values.addressLine2,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      error: Boolean(formik.touched.city && formik.errors.city),\n      fullWidth: true,\n      helperText: formik.touched.city && formik.errors.city,\n      label: \"City (Jurisdication)\",\n      name: \"city\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      value: formik.values.city,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      error: Boolean(formik.touched.pincode && formik.errors.pincode),\n      fullWidth: true,\n      helperText: formik.touched.pincode && formik.errors.pincode,\n      label: \"Pincode\",\n      name: \"pincode\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      value: formik.values.pincode,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"error\",\n      sx: {\n        mt: 3\n      },\n      children: \"Delete organisation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst OrganisationDrawerDesktop = styled(Drawer)({\n  width: 500,\n  flexShrink: 0,\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    width: 500\n  }\n});\nconst OrganisationDrawerMobile = styled(Drawer)({\n  flexShrink: 0,\n  maxWidth: \"100%\",\n  height: \"calc(100% - 64px)\",\n  width: 500,\n  \"& .MuiDrawer-paper\": {\n    height: \"calc(100% - 64px)\",\n    maxWidth: \"100%\",\n    top: 64,\n    width: 500\n  }\n});\nexport const OrganisationDrawer = props => {\n  const {\n    containerRef,\n    onClose,\n    open,\n    organisation\n  } = props,\n        other = _objectWithoutProperties(props, [\"containerRef\", \"onClose\", \"open\", \"organisation\"]);\n\n  const {\n    0: isEditing,\n    1: setIsEditing\n  } = useState(false);\n  const lgUp = useMediaQuery(theme => theme.breakpoints.up(\"lg\"));\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  }; // The reason for doing this, is that the persistent drawer has to be rendered, but not it's\n  // content if an organisation is not passed.\n\n\n  const content = organisation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: \"center\",\n        backgroundColor: \"primary.main\",\n        color: \"primary.contrastText\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        px: 3,\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        variant: \"h6\",\n        children: organisation.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(XIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3,\n        py: 4\n      },\n      children: !isEditing ? /*#__PURE__*/_jsxDEV(OrganisationPreview, {\n        onApprove: onClose,\n        onEdit: handleEdit,\n        onReject: onClose,\n        organisation: organisation,\n        lgUp: lgUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OrganisationForm, {\n        onCancel: handleCancel,\n        onSave: handleCancel,\n        organisation: organisation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : null;\n\n  if (lgUp) {\n    return /*#__PURE__*/_jsxDEV(OrganisationDrawerDesktop, _objectSpread(_objectSpread({\n      anchor: \"right\",\n      open: open,\n      SlideProps: {\n        container: containerRef === null || containerRef === void 0 ? void 0 : containerRef.current\n      },\n      variant: \"persistent\"\n    }, other), {}, {\n      children: content\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(OrganisationDrawerMobile, _objectSpread(_objectSpread({\n    anchor: \"right\",\n    ModalProps: {\n      container: containerRef === null || containerRef === void 0 ? void 0 : containerRef.current\n    },\n    onClose: onClose,\n    open: open,\n    SlideProps: {\n      container: containerRef === null || containerRef === void 0 ? void 0 : containerRef.current\n    },\n    variant: \"temporary\"\n  }, other), {}, {\n    children: content\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n};\nOrganisationDrawer.propTypes = {\n  containerRef: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  organisation: PropTypes.object\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-drawer.js"],"names":["useState","useEffect","PropTypes","format","Storage","useFormik","Box","Button","Divider","Drawer","IconButton","Table","TableBody","TableCell","TableHead","TableRow","TextField","Typography","useMediaQuery","styled","EditIcon","X","XIcon","PropertyList","PropertyListItem","Scrollbar","OrganisationPreview","props","lgUp","onApprove","onEdit","onReject","organisation","align","organisationLogo","setOrganisationLogo","console","log","logo","get","error","width","height","alignItems","borderRadius","display","flexWrap","justifyContent","mt","m","pt","my","name","initials","addressLine1","addressLine2","city","pincode","bankName","bankAccountNumber","bankIFSC","bankBranchName","pan","gstin","contact","email","invoiceTermsAndConditions","OrganisationForm","onCancel","onSave","formik","initialValues","onSubmit","values","helpers","id","uuid","user","API","graphql","query","createOrganisation","variables","input","authMode","toast","success","err","setStatus","setErrors","submit","message","setSubmitting","backgroundColor","theme","palette","mode","borganisationRadius","px","py","mr","Boolean","touched","errors","handleBlur","event","setFieldValue","getInitials","target","value","handleChange","OrganisationDrawerDesktop","flexShrink","position","OrganisationDrawerMobile","maxWidth","top","OrganisationDrawer","containerRef","onClose","open","other","isEditing","setIsEditing","breakpoints","up","handleEdit","handleCancel","content","color","number","container","current","propTypes","any","func","bool","object"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport { Storage } from \"aws-amplify\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { X as XIcon } from \"../../../icons/x\";\nimport { PropertyList } from \"../../property-list\";\nimport { PropertyListItem } from \"../../property-list-item\";\nimport { Scrollbar } from \"../../scrollbar\";\n\nconst OrganisationPreview = (props) => {\n  const { lgUp, onApprove, onEdit, onReject, organisation } = props;\n  const align = lgUp ? \"horizontal\" : \"vertical\";\n  const [organisationLogo, setOrganisationLogo] = useState();\n\n  console.log(organisation);\n\n  useEffect(async () => {\n    try {\n      const logo = await Storage.get(organisation.logo);\n      setOrganisationLogo(logo);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <>\n      {organisationLogo && (\n        <img\n          style={{ width: \"100%\", height: \"auto\" }}\n          src={organisationLogo}\n          alt=\"Business Logo\"\n        />\n      )}\n      <Box\n        sx={{\n          alignItems: \"center\",\n          borderRadius: 1,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography sx={{ mt: 3 }} variant=\"h6\">\n          Details\n        </Typography>\n        <Box\n          sx={{\n            alignItems: \"center\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            mt: 3,\n            m: -1,\n            \"& > button\": {\n              m: 1,\n            },\n          }}\n        >\n          <Button\n            onClick={onEdit}\n            size=\"small\"\n            startIcon={<EditIcon fontSize=\"small\" />}\n            sx={{ pt: 3 }}\n          >\n            Edit\n          </Button>\n        </Box>\n      </Box>\n      <Divider sx={{ my: 3 }} />\n\n      <PropertyList>\n        <PropertyListItem align={align} disableGutters label=\"Business Name\">\n          <Typography color=\"primary\" variant=\"body2\">\n            {`${organisation.name} (${organisation.initials})`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.addressLine1}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.addressLine2}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.city}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.pincode}\n          </Typography>\n        </PropertyListItem>\n\n        <PropertyListItem align={align} disableGutters label=\"Bank Details\">\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.bankName}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.bankAccountNumber &&\n              `A/c: ${organisation.bankAccountNumber}`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.bankIFSC && `IFSC: ${organisation.bankIFSC}`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {organisation.bankBranchName &&\n              `Branch: ${organisation.bankBranchName}`}\n          </Typography>\n        </PropertyListItem>\n\n        <Typography sx={{ mt: 3 }} variant=\"h6\">\n          Billing Details\n        </Typography>\n        <Divider sx={{ my: 3 }} />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"PAN\"\n          value={organisation.pan}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"GSTIN\"\n          value={organisation.gstin}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"Contact No.\"\n          value={organisation.contact}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"E-mail\"\n          value={organisation.email}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"Terms & Conditions\"\n          value={organisation.invoiceTermsAndConditions}\n        />\n      </PropertyList>\n    </>\n  );\n};\n\nconst OrganisationForm = (props) => {\n  const { onCancel, onSave, organisation } = props;\n\n  const formik = useFormik({\n    initialValues: {\n      name: organisation.name,\n      initials: organisation.initials,\n      addressLine1: organisation.addressLine1,\n      addressLine2: organisation.addressLine2,\n      city: organisation.city,\n      pincode: organisation.pincode,\n      gstin: organisation.gstin,\n      pan: organisation.pan,\n      invoiceTermsAndConditions: organisation.invoiceTermsAndConditions,\n      bankName: organisation.bankName,\n      bankAccountNumber: organisation.bankAccountNumber,\n      bankBranchName: organisation.bankBranchName,\n      bankIFSC: organisation.bankIFSC,\n      contact: organisation.contact,\n    },\n    // validationSchema: Yup.object({\n    //   name: Yup.string().max(255).required(\"Name is required\"),\n    //   initials: Yup.string().max(255).required(\"Required\"),\n    //   addressLine1: Yup.string()\n    //     .max(255)\n    //     .required(\"Address Line 1 is required\"),\n    //   city: Yup.string().max(255).required(\"City is required\"),\n    //   pincode: Yup.string().max(255).required(\"Pincode is required\"),\n    //   gstin: Yup.string()\n    //     .trim()\n    //     .matches(\n    //       /^([0-9]){2}([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}([0-9]){1}([a-zA-Z]){1}([0-9]){1}?$/,\n    //       \"Invalid GST Number\"\n    //     ),\n    //   pan: Yup.string().max(255).required(\"PAN is required\"),\n    //   jurisdiction: Yup.string().max(255).required(\"Jurisdiction is required\"),\n    // }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        const id = uuid();\n        values.id = id;\n        values.user = user.id;\n\n        await API.graphql({\n          query: createOrganisation,\n          variables: { input: values },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\",\n        });\n\n        toast.success(\"Organisation created!\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          backgroundColor: (theme) =>\n            theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n          borganisationRadius: 1,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          px: 3,\n          py: 2.5,\n        }}\n      >\n        <Typography variant=\"overline\" sx={{ mr: 2 }} color=\"textSecondary\">\n          Organisation\n        </Typography>\n        <Box\n          sx={{\n            alignItems: \"center\",\n            display: \"flex\",\n            m: -1,\n            \"& > button\": {\n              m: 1,\n            },\n          }}\n        >\n          <Button\n            color=\"primary\"\n            onClick={onSave}\n            size=\"small\"\n            variant=\"contained\"\n          >\n            Save changes\n          </Button>\n          <Button onClick={onCancel} size=\"small\" variant=\"outlined\">\n            Cancel\n          </Button>\n        </Box>\n      </Box>\n      <Typography sx={{ my: 3 }} variant=\"h6\">\n        Details\n      </Typography>\n      <TextField\n        margin=\"normal\"\n        error={Boolean(formik.touched.name && formik.errors.name)}\n        fullWidth\n        helperText={formik.touched.name && formik.errors.name}\n        label=\"Business Name\"\n        name=\"name\"\n        onBlur={formik.handleBlur}\n        onChange={(event) => {\n          formik.setFieldValue(\n            `initials`,\n            `${getInitials(event.target.value)}`\n          );\n          formik.setFieldValue(`name`, event.target.value);\n        }}\n        value={formik.values.name}\n        variant=\"outlined\"\n      />\n\n      <TextField\n        margin=\"normal\"\n        error={Boolean(formik.touched.initials && formik.errors.initials)}\n        fullWidth\n        helperText={formik.touched.initials && formik.errors.initials}\n        label=\"Initials\"\n        name=\"initials\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        value={formik.values.initials}\n        variant=\"outlined\"\n      />\n      <TextField\n        margin=\"normal\"\n        error={Boolean(\n          formik.touched.addressLine1 && formik.errors.addressLine1\n        )}\n        fullWidth\n        helperText={formik.touched.addressLine1 && formik.errors.addressLine1}\n        label=\"Address Line 1\"\n        name=\"addressLine1\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        value={formik.values.addressLine1}\n        variant=\"outlined\"\n      />\n      <TextField\n        margin=\"normal\"\n        error={Boolean(\n          formik.touched.addressLine2 && formik.errors.addressLine2\n        )}\n        fullWidth\n        helperText={formik.touched.addressLine2 && formik.errors.addressLine2}\n        label=\"Address Line 2\"\n        name=\"addressLine2\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        value={formik.values.addressLine2}\n        variant=\"outlined\"\n      />\n      <TextField\n        margin=\"normal\"\n        error={Boolean(formik.touched.city && formik.errors.city)}\n        fullWidth\n        helperText={formik.touched.city && formik.errors.city}\n        label=\"City (Jurisdication)\"\n        name=\"city\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        value={formik.values.city}\n        variant=\"outlined\"\n      />\n      <TextField\n        margin=\"normal\"\n        error={Boolean(formik.touched.pincode && formik.errors.pincode)}\n        fullWidth\n        helperText={formik.touched.pincode && formik.errors.pincode}\n        label=\"Pincode\"\n        name=\"pincode\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        value={formik.values.pincode}\n        variant=\"outlined\"\n      />\n\n      <Button color=\"error\" sx={{ mt: 3 }}>\n        Delete organisation\n      </Button>\n    </>\n  );\n};\n\nconst OrganisationDrawerDesktop = styled(Drawer)({\n  width: 500,\n  flexShrink: 0,\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    width: 500,\n  },\n});\n\nconst OrganisationDrawerMobile = styled(Drawer)({\n  flexShrink: 0,\n  maxWidth: \"100%\",\n  height: \"calc(100% - 64px)\",\n  width: 500,\n  \"& .MuiDrawer-paper\": {\n    height: \"calc(100% - 64px)\",\n    maxWidth: \"100%\",\n    top: 64,\n    width: 500,\n  },\n});\n\nexport const OrganisationDrawer = (props) => {\n  const { containerRef, onClose, open, organisation, ...other } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.up(\"lg\"));\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  // The reason for doing this, is that the persistent drawer has to be rendered, but not it's\n  // content if an organisation is not passed.\n  const content = organisation ? (\n    <>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          backgroundColor: \"primary.main\",\n          color: \"primary.contrastText\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          px: 3,\n          py: 2,\n        }}\n      >\n        <Typography color=\"inherit\" variant=\"h6\">\n          {organisation.number}\n        </Typography>\n        <IconButton color=\"inherit\" onClick={onClose}>\n          <XIcon fontSize=\"small\" />\n        </IconButton>\n      </Box>\n      <Box\n        sx={{\n          px: 3,\n          py: 4,\n        }}\n      >\n        {!isEditing ? (\n          <OrganisationPreview\n            onApprove={onClose}\n            onEdit={handleEdit}\n            onReject={onClose}\n            organisation={organisation}\n            lgUp={lgUp}\n          />\n        ) : (\n          <OrganisationForm\n            onCancel={handleCancel}\n            onSave={handleCancel}\n            organisation={organisation}\n          />\n        )}\n      </Box>\n    </>\n  ) : null;\n\n  if (lgUp) {\n    return (\n      <OrganisationDrawerDesktop\n        anchor=\"right\"\n        open={open}\n        SlideProps={{ container: containerRef?.current }}\n        variant=\"persistent\"\n        {...other}\n      >\n        {content}\n      </OrganisationDrawerDesktop>\n    );\n  }\n\n  return (\n    <OrganisationDrawerMobile\n      anchor=\"right\"\n      ModalProps={{ container: containerRef?.current }}\n      onClose={onClose}\n      open={open}\n      SlideProps={{ container: containerRef?.current }}\n      variant=\"temporary\"\n      {...other}\n    >\n      {content}\n    </OrganisationDrawerMobile>\n  );\n};\n\nOrganisationDrawer.propTypes = {\n  containerRef: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  organisation: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}