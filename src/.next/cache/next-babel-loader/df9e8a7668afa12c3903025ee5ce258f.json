{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/organisation-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { forwardRef, useImperativeHandle } from \"react\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Divider, Grid, TextField, Typography } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { organisationApi } from \"../../../api/organisation-api\";\nimport { userApi } from \"../../../api/user-api\";\nexport var OrganisationCreateForm = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var handleNext = _ref.handleNext,\n      setActiveStep = _ref.setActiveStep,\n      props = _objectWithoutProperties(_ref, [\"handleNext\", \"setActiveStep\"]);\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      initialize = _useAuth.initialize; // console.log(user);\n\n\n  useImperativeHandle(ref, function () {\n    return {\n      handleFormSubmit: function handleFormSubmit() {\n        formik.handleSubmit();\n      }\n    };\n  });\n  var formik = useFormik({\n    initialValues: {\n      organisationName: \"\",\n      gstin: \"\",\n      jurisdiction: \"\",\n      pan: \"\",\n      initials: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      bankAccountNumber: \"\",\n      bankName: \"\",\n      bankBranchName: \"\",\n      bankIFSC: \"\",\n      invoiceTermsAndConditions: \"\",\n      contact: \"\",\n      email: \"\",\n      city: \"\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      organisationName: Yup.string().max(255).required(\"Please enter a organisation name.\"),\n      city: Yup.object().required(\"Please select a city.\")\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var newOrganisation;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                newOrganisation = {\n                  organisationName: values.organisationName,\n                  city: JSON.stringify(values.city),\n                  organisationType: values.organisationType,\n                  user: user.id\n                };\n                _context.next = 4;\n                return organisationApi.createOrganisation(newOrganisation);\n\n              case 4:\n                _context.next = 6;\n                return userApi.updateUser({\n                  onBoardingRequired: false,\n                  id: user.id\n                });\n\n              case 6:\n                _context.next = 8;\n                return initialize();\n\n              case 8:\n                toast.success(\"Organisation created!\");\n                setActiveStep(1); // router.push(\"/dashboard/organisationes\");\n\n                _context.next = 19;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      alignItems: \"center\",\n      sx: {\n        mb: 4,\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Tell us your city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n          formik: formik,\n          error: Boolean(formik.touched.city && formik.errors.city),\n          label: \"Your city in India\",\n          field: \"city\",\n          setFieldValue: formik.setFieldValue,\n          handleBlur: formik.handleBlur,\n          values: formik.values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 4,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Please pick a name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        md: 8,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(formik.touched.organisationName && formik.errors.organisationName),\n          fullWidth: true,\n          helperText: formik.touched.organisationName && formik.errors.organisationName,\n          label: \"Your organisation name\",\n          name: \"organisationName\",\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          value: formik.values.organisationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, _this);\n}, \"7tl8fXQZ4ksCmxv3CgshHGpf2vI=\", false, function () {\n  return [useAuth, useImperativeHandle, useFormik];\n}));\n_c2 = OrganisationCreateForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrganisationCreateForm$forwardRef\");\n$RefreshReg$(_c2, \"OrganisationCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/organisation-create-form.js"],"names":["forwardRef","useImperativeHandle","toast","Yup","useFormik","Divider","Grid","TextField","Typography","GoogleMaps","useAuth","organisationApi","userApi","OrganisationCreateForm","ref","handleNext","setActiveStep","props","user","initialize","handleFormSubmit","formik","handleSubmit","initialValues","organisationName","gstin","jurisdiction","pan","initials","addressLine1","addressLine2","bankAccountNumber","bankName","bankBranchName","bankIFSC","invoiceTermsAndConditions","contact","email","city","submit","validationSchema","object","string","max","required","onSubmit","values","helpers","newOrganisation","JSON","stringify","organisationType","id","createOrganisation","updateUser","onBoardingRequired","success","console","error","setStatus","setErrors","message","setSubmitting","mb","mt","Boolean","touched","errors","setFieldValue","handleBlur","handleChange"],"mappings":"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","sourcesContent":["import { forwardRef, useImperativeHandle } from \"react\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Divider, Grid, TextField, Typography } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { organisationApi } from \"../../../api/organisation-api\";\nimport { userApi } from \"../../../api/user-api\";\n\nexport const OrganisationCreateForm = forwardRef(\n  ({ handleNext, setActiveStep, ...props }, ref) => {\n    const { user, initialize } = useAuth();\n    // console.log(user);\n\n    useImperativeHandle(ref, () => ({\n      handleFormSubmit() {\n        formik.handleSubmit();\n      },\n    }));\n\n    const formik = useFormik({\n      initialValues: {\n        organisationName: \"\",\n        gstin: \"\",\n        jurisdiction: \"\",\n        pan: \"\",\n        initials: \"\",\n        addressLine1: \"\",\n        addressLine2: \"\",\n        bankAccountNumber: \"\",\n        bankName: \"\",\n        bankBranchName: \"\",\n        bankIFSC: \"\",\n        invoiceTermsAndConditions: \"\",\n        contact: \"\",\n        email: \"\",\n        city: \"\",\n        submit: null,\n      },\n      validationSchema: Yup.object({\n        organisationName: Yup.string()\n          .max(255)\n          .required(\"Please enter a organisation name.\"),\n        city: Yup.object().required(\"Please select a city.\"),\n      }),\n      onSubmit: async (values, helpers) => {\n        try {\n          const newOrganisation = {\n            organisationName: values.organisationName,\n            city: JSON.stringify(values.city),\n            organisationType: values.organisationType,\n            user: user.id,\n          };\n\n          await organisationApi.createOrganisation(newOrganisation);\n          await userApi.updateUser({\n            onBoardingRequired: false,\n            id: user.id,\n          });\n          await initialize();\n          toast.success(\"Organisation created!\");\n          setActiveStep(1);\n          // router.push(\"/dashboard/organisationes\");\n        } catch (err) {\n          console.error(err);\n          toast.error(\"Something went wrong!\");\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      },\n    });\n\n    return (\n      <form onSubmit={formik.handleSubmit} {...props}>\n        <Grid container spacing={5} alignItems=\"center\" sx={{ mb: 4, mt: 2 }}>\n          <Grid item md={4} xs={12}>\n            <Typography variant=\"h6\">Tell us your city</Typography>\n          </Grid>\n          <Grid item md={8} xs={12}>\n            <GoogleMaps\n              formik={formik}\n              error={Boolean(formik.touched.city && formik.errors.city)}\n              label={\"Your city in India\"}\n              field={\"city\"}\n              setFieldValue={formik.setFieldValue}\n              handleBlur={formik.handleBlur}\n              values={formik.values}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Divider />\n          </Grid>\n          <Grid item md={4} xs={12}>\n            <Typography variant=\"h6\">Please pick a name</Typography>\n          </Grid>\n          <Grid item md={8} xs={12}>\n            <TextField\n              error={Boolean(\n                formik.touched.organisationName &&\n                  formik.errors.organisationName\n              )}\n              fullWidth\n              helperText={\n                formik.touched.organisationName &&\n                formik.errors.organisationName\n              }\n              label=\"Your organisation name\"\n              name=\"organisationName\"\n              onBlur={formik.handleBlur}\n              onChange={formik.handleChange}\n              value={formik.values.organisationName}\n            />\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}