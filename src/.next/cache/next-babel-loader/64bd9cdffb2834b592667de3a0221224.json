{"ast":null,"code":"import _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nvar DeliveryForm = function DeliveryForm(_ref) {\n  _s();\n\n  var formik = _ref.formik,\n      rest = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      noOfDeliveries = _React$useState2[0],\n      setNoOfDeliveries = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      googleResponse = _React$useState4[0],\n      setResponse = _React$useState4[1];\n\n  var distanceCallback = function distanceCallback(response) {\n    if (response !== null) {\n      console.log(response);\n      var index = googleResponse.findIndex(function (obj) {\n        return obj.origin === response.originAddresses[0] && obj.destination === response.destinationAddresses[0];\n      });\n      console.log(index);\n\n      if (index < 0) {\n        setResponse([].concat(_toConsumableArray(googleResponse), [{\n          origin: response.originAddresses[0],\n          destination: response.destinationAddresses[0] // distance: response.rows[0].elements[0].distance.text,\n          // duration: response.rows[0].elements[0].duration.text,\n\n        }]));\n      }\n\n      console.log(googleResponse);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"deliveryDetails\",\n        error: formik.errors,\n        children: function children(_ref2) {\n          var remove = _ref2.remove,\n              push = _ref2.push;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"Total Deliveries: \", noOfDeliveries]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 32\n                  }, _this),\n                  onClick: function onClick() {\n                    setNoOfDeliveries(noOfDeliveries + 1);\n                    push({\n                      loading: \"\",\n                      unloading: \"\"\n                    });\n                  },\n                  children: \"Add Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, _this), formik.values.deliveryDetails.length > 0 && formik.values.deliveryDetails.map(function (delivery, index) {\n              var loading = \"deliveryDetails[\".concat(index, \"].loading\");\n              var touchedLoading = getIn(formik.touched, loading);\n              var errorLoading = getIn(formik.errors, loading);\n              var unloading = \"deliveryDetails[\".concat(index, \"].unloading\");\n              var touchedUnloading = getIn(formik.touched, unloading);\n              var errorUnloading = getIn(formik.errors, unloading);\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                className: \"row\",\n                alignItems: \"center\",\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                    label: \"Loading\",\n                    error: errorLoading,\n                    touched: touchedLoading,\n                    name: loading,\n                    setFieldValue: formik.setFieldValue,\n                    handleBlur: formik.handleBlur,\n                    values: formik.values,\n                    index: index,\n                    type: \"loading\",\n                    formik: formik\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, _this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                    label: \"Unloading\",\n                    error: errorUnloading,\n                    touched: touchedUnloading,\n                    name: loading,\n                    setFieldValue: formik.setFieldValue,\n                    handleBlur: formik.handleBlur,\n                    values: formik.values,\n                    index: index,\n                    type: \"unloading\",\n                    formik: formik\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 2,\n                  xs: 12,\n                  className: \"col\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"240 Kms\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(DistanceMatrixService, {\n                    options: {\n                      origins: [delivery.loading.description],\n                      destinations: [delivery.unloading.description],\n                      travelMode: \"TRANSIT\"\n                    } // required\n                    ,\n                    callback: distanceCallback\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: index < 1,\n                    color: \"secondary\",\n                    onClick: function onClick() {\n                      setNoOfDeliveries(noOfDeliveries - 1);\n                      remove(index);\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DeliveryForm, \"vY45o1FI64Zh9++ZPXsvGFDsvhw=\");\n\n_c = DeliveryForm;\nexport default DeliveryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FormikProvider","FieldArray","getIn","Grid","Typography","Button","DistanceMatrixService","Plus","PlusIcon","GoogleMaps","DeliveryForm","formik","rest","useState","noOfDeliveries","setNoOfDeliveries","googleResponse","setResponse","distanceCallback","response","console","log","index","findIndex","obj","origin","originAddresses","destination","destinationAddresses","errors","remove","push","mb","loading","unloading","values","deliveryDetails","length","map","delivery","touchedLoading","touched","errorLoading","touchedUnloading","errorUnloading","setFieldValue","handleBlur","origins","description","destinations","travelMode"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\n\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({ formik, ...rest }) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n  const [googleResponse, setResponse] = React.useState([]);\n\n  let distanceCallback = (response) => {\n    if (response !== null) {\n      console.log(response);\n      const index = googleResponse.findIndex(\n        (obj) =>\n          obj.origin === response.originAddresses[0] &&\n          obj.destination === response.destinationAddresses[0]\n      );\n      console.log(index);\n      if (index < 0) {\n        setResponse([\n          ...googleResponse,\n          {\n            origin: response.originAddresses[0],\n            destination: response.destinationAddresses[0],\n            // distance: response.rows[0].elements[0].distance.text,\n            // duration: response.rows[0].elements[0].duration.text,\n          },\n        ]);\n      }\n      console.log(googleResponse);\n    }\n  };\n  return (\n    <React.Fragment>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n          {({ remove, push }) => (\n            <React.Fragment>\n              <Grid\n                container\n                spacing={3}\n                justifyContent=\"space-between\"\n                alignItems={\"center\"}\n                sx={{ mb: 3 }}\n              >\n                <Grid item>\n                  <Typography variant=\"h6\">\n                    Total Deliveries: {noOfDeliveries}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<PlusIcon fontSize=\"small\" />}\n                    onClick={() => {\n                      setNoOfDeliveries(noOfDeliveries + 1);\n                      push({ loading: \"\", unloading: \"\" });\n                    }}\n                  >\n                    Add Delivery\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {formik.values.deliveryDetails.length > 0 &&\n                formik.values.deliveryDetails.map((delivery, index) => {\n                  const loading = `deliveryDetails[${index}].loading`;\n                  const touchedLoading = getIn(formik.touched, loading);\n                  const errorLoading = getIn(formik.errors, loading);\n\n                  const unloading = `deliveryDetails[${index}].unloading`;\n                  const touchedUnloading = getIn(formik.touched, unloading);\n                  const errorUnloading = getIn(formik.errors, unloading);\n                  return (\n                    <Grid\n                      container\n                      spacing={3}\n                      className=\"row\"\n                      key={index}\n                      alignItems={\"center\"}\n                      sx={{ mb: 2 }}\n                    >\n                      <Grid item md={4} xs={12} className=\"col\" key={index}>\n                        <GoogleMaps\n                          label={\"Loading\"}\n                          error={errorLoading}\n                          touched={touchedLoading}\n                          name={loading}\n                          setFieldValue={formik.setFieldValue}\n                          handleBlur={formik.handleBlur}\n                          values={formik.values}\n                          index={index}\n                          type=\"loading\"\n                          formik={formik}\n                        />\n                      </Grid>\n                      <Grid item md={4} xs={12} className=\"col\">\n                        <GoogleMaps\n                          label={\"Unloading\"}\n                          error={errorUnloading}\n                          touched={touchedUnloading}\n                          name={loading}\n                          setFieldValue={formik.setFieldValue}\n                          handleBlur={formik.handleBlur}\n                          values={formik.values}\n                          index={index}\n                          type=\"unloading\"\n                          formik={formik}\n                        />\n                      </Grid>\n                      <Grid item md={2} xs={12} className=\"col\">\n                        <Typography variant=\"h6\">240 Kms</Typography>\n                        <DistanceMatrixService\n                          options={{\n                            origins: [delivery.loading.description],\n                            destinations: [delivery.unloading.description],\n                            travelMode: \"TRANSIT\",\n                          }}\n                          // required\n                          callback={distanceCallback}\n                        />\n                      </Grid>\n                      <Grid item className=\"col\">\n                        <Button\n                          disabled={index < 1}\n                          color=\"secondary\"\n                          onClick={() => {\n                            setNoOfDeliveries(noOfDeliveries - 1);\n                            remove(index);\n                          }}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </React.Fragment>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}