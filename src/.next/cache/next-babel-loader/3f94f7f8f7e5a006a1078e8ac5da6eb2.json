{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\nimport { Autocomplete, Box, Button, Card, CardContent, Grid, InputAdornment, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport DeliveryDetails from \"./delivery-details\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nimport GoogleMaps from \"./google-maps\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { useDispatch } from \"../../../store\";\nexport var OrderCreateForm = function OrderCreateForm(props) {\n  _s();\n\n  var order = props.order || {};\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState(null),\n      selectedVehicle = _useState[0],\n      setSelectedVehicle = _useState[1];\n\n  var _useState2 = useState(),\n      driver = _useState2[0],\n      setDriver = _useState2[1];\n\n  var _useState3 = useState({\n    waypoints: []\n  }),\n      addresses = _useState3[0],\n      setAddresses = _useState3[1];\n\n  var _useState4 = useState(false),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      inputValue = _React$useState2[0],\n      setInputValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    value: \"quantity\",\n    unit: \"MT\",\n    label: \"Per MT\"\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      saleType = _React$useState4[0],\n      setSaleType = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"quantity\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      purchaseType = _React$useState6[0],\n      setPurchaseType = _React$useState6[1];\n\n  var saleTypes = [{\n    value: \"quantity\",\n    unit: \"MT\",\n    label: \"Per MT\"\n  }, {\n    value: \"quantity\",\n    unit: \"Kg\",\n    label: \"Per Kg\"\n  }, {\n    value: \"quantity\",\n    unit: \"Box\",\n    label: \"Per Box\"\n  }, {\n    value: \"quantity\",\n    unit: \"Pcs\",\n    label: \"Per Pcs\"\n  }, {\n    value: \"time\",\n    unit: \"Days\",\n    label: \"Per Days\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  var purchaseTypes = [{\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  var validationShape = {\n    orderNo: Yup.number().required(\"Order No is required\").test({\n      name: \"Checking Duplicate Order No\",\n      exclusive: false,\n      params: {},\n      message: \"Order No cannot be repeated in the fiscal year of sale date\",\n      test: function () {\n        var _test = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n          var response;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.prev = 0;\n                  _context.next = 3;\n                  return orderApi.validateDuplicateOrderNo(value, this.parent.saleDate, user);\n\n                case 3:\n                  response = _context.sent;\n                  return _context.abrupt(\"return\", response);\n\n                case 7:\n                  _context.prev = 7;\n                  _context.t0 = _context[\"catch\"](0);\n                  console.log(_context.t0);\n\n                case 10:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this, [[0, 7]]);\n        }));\n\n        function test(_x) {\n          return _test.apply(this, arguments);\n        }\n\n        return test;\n      }()\n    }),\n    saleDate: Yup.object().required(\"Sale Date is required\"),\n    customer: Yup.object().nullable().required(\"Customer is required\"),\n    vehicle: Yup.lazy(function (value) {\n      switch (typeof value) {\n        case \"object\":\n          return Yup.object().nullable().required(\"Vehicle is required\");\n\n        case \"string\":\n          return Yup.string().required(\"Vehicle is required\");\n\n        default:\n          return Yup.string().required(\"Vehicle is required\");\n      }\n    }),\n    saleType: Yup.string().required(\"Sale is required\"),\n    saleRate: Yup.string().required(\"Sale Rate is required\")\n  };\n\n  if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {} else {\n    validationShape.transporter = Yup.object().required(\"Transporter is required\");\n    validationShape.purchaseType = Yup.string().required(\"Purchase is required\");\n    validationShape.purchaseRate = Yup.string().required(\"Purchase Rate is required\");\n  }\n\n  validationShape.deliveryDetails = Yup.array().of(Yup.object().shape({\n    loading: Yup.object().required(\"Loading Point is Required\"),\n    // these constraints take precedence\n    unloading: Yup.object().required(\"Unloading Point is Required\") // these constraints take precedence\n\n  }));\n  var formik = useFormik({\n    initialValues: {\n      orderNo: order.orderNo || \"\",\n      saleDate: order.saleDate || moment(),\n      customer: order.customer || null,\n      vehicle: order.vehicle || null,\n      driver: order.driver || null,\n      transporter: order.transporter || \"\",\n      saleType: order.saleType || saleType,\n      saleRate: order.saleRate || \"\",\n      minimumSaleGuarantee: order.minimumSaleGuarantee || null,\n      purchaseType: order.purchaseType || purchaseType,\n      purchaseRate: order.purchaseRate || \"\",\n      minimumPurchaseGuarantee: order.minimumPurchaseGuarantee || null,\n      deliveryDetails: [{\n        loading: \"\",\n        unloading: \"\",\n        billQuantity: \"\",\n        unloadingQuantity: \"\"\n      }]\n    },\n    validationSchema: Yup.object().shape(validationShape),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, helpers) {\n        var newOrder;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                newOrder = {\n                  orderNo: parseInt(values.orderNo),\n                  saleDate: values.saleDate.format(),\n                  // customer: values.customer,\n                  customerId: values.customer.id,\n                  saleRate: values.saleRate,\n                  saleType: values.saleType,\n                  user: user.id,\n                  deliveries: JSON.stringify(values.deliveryDetails)\n                };\n\n                if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {\n                  // newOrder.vehicle = values.vehicle;\n                  newOrder.vehicleId = values.vehicle.id;\n                  newOrder.vehicleNumber = values.vehicle.vehicleNumber;\n\n                  if (values.driver) {\n                    // newOrder.driver = values.driver;\n                    newOrder.driverId = values.driver.id;\n                  }\n                } else {\n                  newOrder.vehicleNumber = values.vehicle; // newOrder.transporter = values.transporter;\n\n                  newOrder.transporterId = values.transporter.id;\n                  newOrder.purchaseRate = values.purchaseRate;\n                  newOrder.purchaseType = values.purchaseType;\n                  if (values.minimumPurchaseGuarantee) newOrder.minimumPurchaseGuarantee = values.minimumPurchaseGuarantee;\n                }\n\n                if (values.minimumSaleGuarantee) newOrder.minimumSaleGuarantee = values.minimumSaleGuarantee;\n                console.log(newOrder);\n                _context2.next = 7;\n                return orderApi.createOrder(newOrder, dispatch);\n\n              case 7:\n                toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n\n                _context2.next = 17;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(_context2.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context2.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 10]]);\n      }));\n\n      function onSubmit(_x2, _x3) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  React.useEffect(function () {\n    setAddresses({\n      waypoints: _toConsumableArray(addresses.waypoints)\n    }); // Setting Origin\n\n    setAddresses(function (addresses) {\n      return _objectSpread(_objectSpread({}, addresses), {\n        origin: formik.values.deliveryDetails[0].loading.description\n      });\n    }); // Setting Destination\n\n    if (formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description) {\n      setAddresses(function (addresses) {\n        return _objectSpread(_objectSpread({}, addresses), {\n          destination: formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description\n        });\n      });\n    } // Setting waypoints\n\n\n    var waypoints = [];\n    formik.values.deliveryDetails.map(function (delivery) {\n      if (delivery.loading.description) {\n        waypoints.push({\n          location: delivery.loading.description\n        });\n      }\n\n      if (delivery.unloading.description) {\n        waypoints.push({\n          location: delivery.unloading.description\n        });\n      }\n    });\n    waypoints = waypoints.filter(function (waypoint) {\n      return waypoint.location !== formik.values.deliveryDetails[0].loading.description;\n    });\n    waypoints = waypoints.filter(function (waypoint) {\n      return waypoint.location !== formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description;\n    });\n    waypoints = _toConsumableArray(new Map(waypoints.map(function (item) {\n      return [item.location, item];\n    })).values());\n    setAddresses({\n      origin: formik.values.deliveryDetails[0].loading.description,\n      destination: formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description,\n      waypoints: waypoints\n    });\n  }, [formik.values.deliveryDetails]);\n\n  var handleOnChange = function handleOnChange(event, newValue) {\n    formik.setFieldValue(\"saleType\", newValue); // setFieldValue('driver', newValue);\n  };\n\n  var handleInputChange = function handleInputChange(event, newInputValue) {\n    setInputValue(newInputValue); // setFieldValue('driver', newInputValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: function onChange(event) {\n                    formik.setFieldValue(\"orderNo\", event.target.value);\n                  },\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: function onClick() {\n                    return setFieldTouched(\"end\");\n                  },\n                  onChange: function onChange(date) {\n                    return formik.setFieldValue(\"saleDate\", moment(date));\n                  },\n                  slotProps: {\n                    textField: {\n                      helperText: formik.touched.saleDate && formik.errors.saleDate,\n                      error: Boolean(formik.touched.saleDate && formik.errors.saleDate)\n                    }\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                      fullWidth: true\n                    }, params), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"customer\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            sx: {\n              mb: 6\n            },\n            item: true,\n            md: 4,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mb: 3\n              },\n              variant: \"h6\",\n              children: \"Delivery details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(GoogleMaps, {\n              addresses: addresses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(DeliveryDetails, {\n              formik: formik\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Vehicle details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(VehicleAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: typeof selectedVehicle === \"object\" && selectedVehicle !== null ? /*#__PURE__*/_jsxDEV(DriverAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, _this) : selectedVehicle !== null && /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"transporter\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Sale details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleType && formik.errors.saleType),\n                  onBlur: formik.handleBlur,\n                  name: \"saleType\",\n                  label: \"Sale Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"saleType\",\n                  select: true,\n                  value: saleType,\n                  onChange: function onChange(event) {\n                    setSaleType(event.target.value);\n                    formik.setFieldValue(\"saleType\", event.target.value);\n                  },\n                  SelectProps: {\n                    \"native\": true\n                  },\n                  helperText: \"Please select sale type\",\n                  variant: \"outlined\",\n                  children: saleTypes.map(function (option) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 23\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                  autoSelect: true,\n                  blurOnSelect: true,\n                  id: \"saleType\",\n                  open: open,\n                  onOpen: function onOpen() {\n                    setOpen(true);\n                  },\n                  onClose: function onClose() {\n                    setOpen(false);\n                  },\n                  getOptionSelected: function getOptionSelected(option, value) {\n                    if (value) return option.label === value.label.replace(/\\w\\S*/g, function (txt) {\n                      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                    });\n                  },\n                  getOptionLabel: function getOptionLabel(option) {\n                    return option && option.label.replace(/\\w\\S*/g, function (txt) {\n                      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                    });\n                  },\n                  options: saleTypes,\n                  value: formik.values.saleType,\n                  onChange: handleOnChange,\n                  inputValue: inputValue,\n                  onInputChange: handleInputChange,\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                      name: \"saleType\",\n                      label: \"Sale Type\",\n                      variant: \"outlined\",\n                      error: Boolean(formik.touched.saleType && formik.errors.saleType),\n                      fullWidth: true,\n                      helperText: formik.touched.saleType && formik.errors.saleType,\n                      onBlur: formik.handleBlur\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleRate && formik.errors.saleRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.saleRate && formik.errors.saleRate,\n                  InputProps: {\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: saleType.unit\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 25\n                    }, _this)\n                  },\n                  id: \"saleRate\",\n                  name: \"saleRate\",\n                  label: \"Sale Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 17\n              }, _this), saleType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.minimumSaleGuarantee && formik.errors.minimumSaleGuarantee),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.minimumSaleGuarantee && formik.errors.minimumSaleGuarantee,\n                  id: \"minimumSaleGuarantee\",\n                  name: \"minimumSaleGuarantee\",\n                  label: \"Min. Load Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, _this), !(typeof selectedVehicle === \"object\") && selectedVehicle !== null && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Purchase details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseType && formik.errors.purchaseType),\n                  onBlur: formik.handleBlur,\n                  name: \"purchaseType\",\n                  label: \"Purchase Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"purchaseType\",\n                  select: true,\n                  value: purchaseType,\n                  onChange: function onChange(event) {\n                    setPurchaseType(event.target.value);\n                    event.target.value;\n                    formik.setFieldValue(\"purchaseType\", event.target.value);\n                  },\n                  SelectProps: {\n                    \"native\": true\n                  },\n                  helperText: \"Please select purchase type\",\n                  variant: \"outlined\",\n                  children: purchaseTypes.map(function (option) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 625,\n                      columnNumber: 25\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseRate && formik.errors.purchaseRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.purchaseRate && formik.errors.purchaseRate,\n                  id: \"purchaseRate\",\n                  name: \"purchaseRate\",\n                  label: \"Purchase Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, _this), purchaseType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.minimumPurchaseGuarantee && formik.errors.minimumPurchaseGuarantee),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.minimumPurchaseGuarantee && formik.errors.minimumPurchaseGuarantee,\n                  id: \"minimumPurchaseGuarantee\",\n                  name: \"minimumPurchaseGuarantee\",\n                  label: \"Min. Load Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrderCreateForm, \"IF4M3Ic1Wwu2WZMewHe8zHf0IJk=\", false, function () {\n  return [useRouter, useDispatch, useAuth, useFormik];\n});\n\n_c = OrderCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["React","useState","useRef","useMemo","useCallback","useRouter","toast","Yup","useFormik","moment","Autocomplete","Box","Button","Card","CardContent","Grid","InputAdornment","TextField","Typography","DatePicker","useAuth","DeliveryDetails","PartyAutocomplete","VehicleAutocomplete","DriverAutocomplete","GoogleMaps","orderApi","useDispatch","OrderCreateForm","props","order","router","dispatch","user","selectedVehicle","setSelectedVehicle","driver","setDriver","waypoints","addresses","setAddresses","open","setOpen","inputValue","setInputValue","value","unit","label","saleType","setSaleType","purchaseType","setPurchaseType","saleTypes","purchaseTypes","validationShape","orderNo","number","required","test","name","exclusive","params","message","validateDuplicateOrderNo","parent","saleDate","response","console","log","object","customer","nullable","vehicle","lazy","string","saleRate","transporter","purchaseRate","deliveryDetails","array","of","shape","loading","unloading","formik","initialValues","minimumSaleGuarantee","minimumPurchaseGuarantee","billQuantity","unloadingQuantity","validationSchema","onSubmit","values","helpers","newOrder","parseInt","format","customerId","id","deliveries","JSON","stringify","vehicleId","vehicleNumber","driverId","transporterId","createOrder","success","error","setStatus","setErrors","submit","setSubmitting","useEffect","origin","description","length","destination","map","delivery","push","location","filter","waypoint","Map","item","handleOnChange","event","newValue","setFieldValue","handleInputChange","newInputValue","handleSubmit","Boolean","touched","errors","handleBlur","target","setFieldTouched","date","textField","helperText","mt","mb","shrink","option","replace","txt","charAt","toUpperCase","substr","toLowerCase","handleChange","endAdornment","display","flexWrap","justifyContent","mx","m","mr"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\n\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  InputAdornment,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport DeliveryDetails from \"./delivery-details\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nimport GoogleMaps from \"./google-maps\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { useDispatch } from \"../../../store\";\n\nexport const OrderCreateForm = (props) => {\n  const order = props.order || {};\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n  const [driver, setDriver] = useState();\n  const [addresses, setAddresses] = useState({ waypoints: [] });\n\n  const [open, setOpen] = useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const [saleType, setSaleType] = React.useState({\n    value: \"quantity\",\n    unit: \"MT\",\n    label: \"Per MT\",\n  });\n  const [purchaseType, setPurchaseType] = React.useState(\"quantity\");\n\n  const saleTypes = [\n    {\n      value: \"quantity\",\n      unit: \"MT\",\n      label: \"Per MT\",\n    },\n    {\n      value: \"quantity\",\n      unit: \"Kg\",\n      label: \"Per Kg\",\n    },\n    {\n      value: \"quantity\",\n      unit: \"Box\",\n      label: \"Per Box\",\n    },\n    {\n      value: \"quantity\",\n      unit: \"Pcs\",\n      label: \"Per Pcs\",\n    },\n    {\n      value: \"time\",\n      unit: \"Days\",\n      label: \"Per Days\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  const purchaseTypes = [\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  let validationShape = {\n    orderNo: Yup.number()\n      .required(\"Order No is required\")\n      .test({\n        name: \"Checking Duplicate Order No\",\n        exclusive: false,\n        params: {},\n        message: \"Order No cannot be repeated in the fiscal year of sale date\",\n        test: async function (value) {\n          try {\n            const response = await orderApi.validateDuplicateOrderNo(\n              value,\n              this.parent.saleDate,\n              user\n            );\n            // console.log(response);\n            return response;\n          } catch (error) {\n            console.log(error);\n          }\n        },\n      }),\n    saleDate: Yup.object().required(\"Sale Date is required\"),\n    customer: Yup.object().nullable().required(\"Customer is required\"),\n    vehicle: Yup.lazy((value) => {\n      switch (typeof value) {\n        case \"object\":\n          return Yup.object().nullable().required(\"Vehicle is required\");\n        case \"string\":\n          return Yup.string().required(\"Vehicle is required\");\n        default:\n          return Yup.string().required(\"Vehicle is required\");\n      }\n    }),\n    saleType: Yup.string().required(\"Sale is required\"),\n    saleRate: Yup.string().required(\"Sale Rate is required\"),\n  };\n\n  if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {\n  } else {\n    validationShape.transporter = Yup.object().required(\n      \"Transporter is required\"\n    );\n    validationShape.purchaseType = Yup.string().required(\n      \"Purchase is required\"\n    );\n    validationShape.purchaseRate = Yup.string().required(\n      \"Purchase Rate is required\"\n    );\n  }\n\n  validationShape.deliveryDetails = Yup.array().of(\n    Yup.object().shape({\n      loading: Yup.object().required(\"Loading Point is Required\"), // these constraints take precedence\n      unloading: Yup.object().required(\"Unloading Point is Required\"), // these constraints take precedence\n    })\n  );\n  const formik = useFormik({\n    initialValues: {\n      orderNo: order.orderNo || \"\",\n      saleDate: order.saleDate || moment(),\n      customer: order.customer || null,\n      vehicle: order.vehicle || null,\n      driver: order.driver || null,\n      transporter: order.transporter || \"\",\n      saleType: order.saleType || saleType,\n      saleRate: order.saleRate || \"\",\n      minimumSaleGuarantee: order.minimumSaleGuarantee || null,\n      purchaseType: order.purchaseType || purchaseType,\n      purchaseRate: order.purchaseRate || \"\",\n      minimumPurchaseGuarantee: order.minimumPurchaseGuarantee || null,\n      deliveryDetails: [\n        {\n          loading: \"\",\n          unloading: \"\",\n          billQuantity: \"\",\n          unloadingQuantity: \"\",\n        },\n      ],\n    },\n    validationSchema: Yup.object().shape(validationShape),\n    onSubmit: async (values, helpers) => {\n      try {\n        const newOrder = {\n          orderNo: parseInt(values.orderNo),\n          saleDate: values.saleDate.format(),\n          // customer: values.customer,\n          customerId: values.customer.id,\n          saleRate: values.saleRate,\n          saleType: values.saleType,\n          user: user.id,\n          deliveries: JSON.stringify(values.deliveryDetails),\n        };\n\n        if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {\n          // newOrder.vehicle = values.vehicle;\n          newOrder.vehicleId = values.vehicle.id;\n          newOrder.vehicleNumber = values.vehicle.vehicleNumber;\n          if (values.driver) {\n            // newOrder.driver = values.driver;\n            newOrder.driverId = values.driver.id;\n          }\n        } else {\n          newOrder.vehicleNumber = values.vehicle;\n          // newOrder.transporter = values.transporter;\n          newOrder.transporterId = values.transporter.id;\n          newOrder.purchaseRate = values.purchaseRate;\n          newOrder.purchaseType = values.purchaseType;\n          if (values.minimumPurchaseGuarantee)\n            newOrder.minimumPurchaseGuarantee = values.minimumPurchaseGuarantee;\n        }\n\n        if (values.minimumSaleGuarantee)\n          newOrder.minimumSaleGuarantee = values.minimumSaleGuarantee;\n\n        console.log(newOrder);\n        await orderApi.createOrder(newOrder, dispatch);\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    setAddresses({ waypoints: [...addresses.waypoints] });\n\n    // Setting Origin\n    setAddresses((addresses) => ({\n      ...addresses,\n      ...{\n        origin: formik.values.deliveryDetails[0].loading.description,\n      },\n    }));\n\n    // Setting Destination\n    if (\n      formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1]\n        .unloading.description\n    ) {\n      setAddresses((addresses) => ({\n        ...addresses,\n        ...{\n          destination:\n            formik.values.deliveryDetails[\n              formik.values.deliveryDetails.length - 1\n            ].unloading.description,\n        },\n      }));\n    }\n\n    // Setting waypoints\n\n    let waypoints = [];\n\n    formik.values.deliveryDetails.map((delivery) => {\n      if (delivery.loading.description) {\n        waypoints.push({\n          location: delivery.loading.description,\n        });\n      }\n\n      if (delivery.unloading.description) {\n        waypoints.push({\n          location: delivery.unloading.description,\n        });\n      }\n    });\n\n    waypoints = waypoints.filter(\n      (waypoint) =>\n        waypoint.location !==\n        formik.values.deliveryDetails[0].loading.description\n    );\n    waypoints = waypoints.filter(\n      (waypoint) =>\n        waypoint.location !==\n        formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1]\n          .unloading.description\n    );\n\n    waypoints = [\n      ...new Map(waypoints.map((item) => [item.location, item])).values(),\n    ];\n\n    setAddresses({\n      origin: formik.values.deliveryDetails[0].loading.description,\n      destination:\n        formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1]\n          .unloading.description,\n      waypoints: waypoints,\n    });\n  }, [formik.values.deliveryDetails]);\n\n  const handleOnChange = (event, newValue) => {\n    formik.setFieldValue(\"saleType\", newValue);\n\n    // setFieldValue('driver', newValue);\n  };\n\n  const handleInputChange = (event, newInputValue) => {\n    setInputValue(newInputValue);\n    // setFieldValue('driver', newInputValue);\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(`orderNo`, event.target.value);\n                    }}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    slotProps={{\n                      textField: {\n                        helperText:\n                          formik.touched.saleDate && formik.errors.saleDate,\n                        error: Boolean(\n                          formik.touched.saleDate && formik.errors.saleDate\n                        ),\n                      },\n                    }}\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <PartyAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    type=\"customer\"\n                    user={user}\n                    formik={formik}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid sx={{ mb: 6 }} item md={4} xs={12}>\n              <Typography sx={{ mb: 3 }} variant=\"h6\">\n                Delivery details\n              </Typography>\n              <GoogleMaps addresses={addresses} />\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <DeliveryDetails formik={formik} />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Vehicle details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <VehicleAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    setSelectedVehicle={setSelectedVehicle}\n                    setDriver={setDriver}\n                    user={user}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  {typeof selectedVehicle === \"object\" &&\n                  selectedVehicle !== null ? (\n                    <DriverAutocomplete\n                      errors={formik.errors}\n                      touched={formik.touched}\n                      setFieldValue={formik.setFieldValue}\n                      handleBlur={formik.handleBlur}\n                      setSelectedVehicle={setSelectedVehicle}\n                      setDriver={setDriver}\n                      user={user}\n                      values={formik.values}\n                    />\n                  ) : (\n                    selectedVehicle !== null && (\n                      <PartyAutocomplete\n                        errors={formik.errors}\n                        touched={formik.touched}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        type=\"transporter\"\n                        user={user}\n                        formik={formik}\n                      />\n                    )\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Sale details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleType && formik.errors.saleType\n                    )}\n                    onBlur={formik.handleBlur}\n                    name=\"saleType\"\n                    label=\"Sale Type\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    id=\"saleType\"\n                    select\n                    value={saleType}\n                    onChange={(event) => {\n                      setSaleType(event.target.value);\n                      formik.setFieldValue(\"saleType\", event.target.value);\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                    helperText=\"Please select sale type\"\n                    variant=\"outlined\"\n                  >\n                    {saleTypes.map((option) => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </TextField>\n                  <Autocomplete\n                    autoSelect={true}\n                    blurOnSelect={true}\n                    id=\"saleType\"\n                    open={open}\n                    onOpen={() => {\n                      setOpen(true);\n                    }}\n                    onClose={() => {\n                      setOpen(false);\n                    }}\n                    getOptionSelected={(option, value) => {\n                      if (value)\n                        return (\n                          option.label ===\n                          value.label.replace(/\\w\\S*/g, function (txt) {\n                            return (\n                              txt.charAt(0).toUpperCase() +\n                              txt.substr(1).toLowerCase()\n                            );\n                          })\n                        );\n                    }}\n                    getOptionLabel={(option) => {\n                      return (\n                        option &&\n                        option.label.replace(/\\w\\S*/g, function (txt) {\n                          return (\n                            txt.charAt(0).toUpperCase() +\n                            txt.substr(1).toLowerCase()\n                          );\n                        })\n                      );\n                    }}\n                    options={saleTypes}\n                    value={formik.values.saleType}\n                    onChange={handleOnChange}\n                    inputValue={inputValue}\n                    onInputChange={handleInputChange}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        name=\"saleType\"\n                        label=\"Sale Type\"\n                        variant=\"outlined\"\n                        error={Boolean(\n                          formik.touched.saleType && formik.errors.saleType\n                        )}\n                        fullWidth\n                        helperText={\n                          formik.touched.saleType && formik.errors.saleType\n                        }\n                        onBlur={formik.handleBlur}\n                      />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleRate && formik.errors.saleRate\n                    )}\n                    variant=\"outlined\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    helperText={\n                      formik.touched.saleRate && formik.errors.saleRate\n                    }\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          {saleType.unit}\n                        </InputAdornment>\n                      ),\n                    }}\n                    id=\"saleRate\"\n                    name=\"saleRate\"\n                    label=\"Sale Rate\"\n                    fullWidth\n                  />\n                </Grid>\n                {saleType === \"quantity\" && (\n                  <Grid item md={4} xs={6}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.minimumSaleGuarantee &&\n                          formik.errors.minimumSaleGuarantee\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.minimumSaleGuarantee &&\n                        formik.errors.minimumSaleGuarantee\n                      }\n                      id=\"minimumSaleGuarantee\"\n                      name=\"minimumSaleGuarantee\"\n                      label=\"Min. Load Guarantee\"\n                      fullWidth\n                    />\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      {!(typeof selectedVehicle === \"object\") && selectedVehicle !== null && (\n        <Card sx={{ mt: 3 }}>\n          <CardContent>\n            <Grid container spacing={3}>\n              <Grid item md={4} xs={12}>\n                <Typography variant=\"h6\">Purchase details</Typography>\n              </Grid>\n              <Grid item md={8} xs={12}>\n                <Grid container spacing={3}>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseType &&\n                          formik.errors.purchaseType\n                      )}\n                      onBlur={formik.handleBlur}\n                      name=\"purchaseType\"\n                      label=\"Purchase Type\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      id=\"purchaseType\"\n                      select\n                      value={purchaseType}\n                      onChange={(event) => {\n                        setPurchaseType(event.target.value);\n                        event.target.value;\n                        formik.setFieldValue(\n                          \"purchaseType\",\n                          event.target.value\n                        );\n                      }}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      helperText=\"Please select purchase type\"\n                      variant=\"outlined\"\n                    >\n                      {purchaseTypes.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseRate &&\n                          formik.errors.purchaseRate\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.purchaseRate &&\n                        formik.errors.purchaseRate\n                      }\n                      id=\"purchaseRate\"\n                      name=\"purchaseRate\"\n                      label=\"Purchase Rate\"\n                      fullWidth\n                    />\n                  </Grid>\n                  {purchaseType === \"quantity\" && (\n                    <Grid item md={4} xs={6}>\n                      <TextField\n                        error={Boolean(\n                          formik.touched.minimumPurchaseGuarantee &&\n                            formik.errors.minimumPurchaseGuarantee\n                        )}\n                        variant=\"outlined\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        helperText={\n                          formik.touched.minimumPurchaseGuarantee &&\n                          formik.errors.minimumPurchaseGuarantee\n                        }\n                        id=\"minimumPurchaseGuarantee\"\n                        name=\"minimumPurchaseGuarantee\"\n                        label=\"Min. Load Guarantee\"\n                        fullWidth\n                      />\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}