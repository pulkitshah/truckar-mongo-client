{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/PartyAutocomplete.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Dialog, DialogTitle, Divider, Grid, Switch, TextField, Typography } from \"@mui/material\";\nimport { useDispatch } from \"../../../store\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { partyApi } from \"../../../api/party-api\";\n\nvar FreeSoloCreateOptionDialog = function FreeSoloCreateOptionDialog(_ref) {\n  _s();\n\n  var className = _ref.className,\n      touched = _ref.touched,\n      setFieldValue = _ref.setFieldValue,\n      errors = _ref.errors,\n      handleBlur = _ref.handleBlur,\n      type = _ref.type,\n      values = _ref.values,\n      user = _ref.user,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"touched\", \"setFieldValue\", \"errors\", \"handleBlur\", \"type\", \"values\", \"user\"]);\n\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState(values && values[type]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      toggleOpen = _React$useState4[1];\n\n  var _useState = useState([]),\n      parties = _useState[0],\n      setParties = _useState[1];\n\n  var _React$useState5 = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dialogValue = _React$useState6[0],\n      setDialogValue = _React$useState6[1];\n\n  var formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\").required(\"Mobile is required\")\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var resetForm, setErrors, setStatus, setSubmitting, _response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm, setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                _context.prev = 1;\n                // NOTE: Make API request\n                console.log(values);\n                _context.next = 5;\n                return axios.post(\"/api/parties/\", _objectSpread({\n                  name: values.name.replace(/\\w\\S*/g, function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                  })\n                }, values));\n\n              case 5:\n                _response = _context.sent;\n                setFieldValue(type, _response.data); // dispatch(updateParty(party, values));\n\n                resetForm();\n                setStatus({\n                  success: true\n                });\n                setSubmitting(false);\n                handleClose();\n                _context.next = 19;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 13]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var partiesDB;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return partyApi.getPartiesByUser(user, dispatch);\n\n          case 3:\n            partiesDB = _context2.sent;\n            setParties(partiesDB);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  })), []);\n\n  var handleClose = function handleClose() {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false\n    });\n    toggleOpen(false);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              setValue({\n                name: dialogValue.name,\n                transporter: dialogValue.transporter\n              });\n              _context3.prev = 2;\n              _context3.next = 5;\n              return partyApi.createParty({\n                name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }),\n                transporter: dialogValue.transporter\n              }, dispatch);\n\n            case 5:\n              setFieldValue(type, response.data);\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error(_context3.t0);\n\n            case 11:\n              handleClose();\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 8]]);\n    }));\n\n    return function handleSubmit(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: function onChange(event, newValue) {\n        if (typeof newValue === \"string\") {\n          // timeout to avoid instant validation of the dialog's form.\n          setTimeout(function () {\n            console.log(\"New value is \".concat(newValue));\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.replace(/\\w\\S*/g, function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n              }),\n              transporter: type !== \"customer\" ? true : false\n            });\n          });\n        } else if (newValue && newValue.inputValue) {\n          toggleOpen(true);\n          setDialogValue({\n            name: newValue.inputValue,\n            transporter: type !== \"customer\" ? true : false\n          });\n        } else {\n          setFieldValue(type, newValue);\n          setValue(newValue);\n        }\n      },\n      id: type,\n      options: parties,\n      getOptionLabel: function getOptionLabel(option) {\n        // e.g value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }\n\n        if (option.inputValue) {\n          return option.inputValue.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }\n\n        return option.name.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n      },\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      renderOption: function renderOption(props, option) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", _objectSpread(_objectSpread({}, props), {}, {\n            children: [option.name && option.name.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, _this), option.mobile && \"(M) \".concat(option.mobile.replace(/ /g, \"\")), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, _this), option.city && \"City - \".concat(JSON.parse(option.city).structured_formatting.main_text), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, _this)]\n          }), void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, _this);\n      },\n      fullWidth: true,\n      freeSolo: true,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          onKeyPress: function onKeyPress(e) {\n            e.which === 13 && e.preventDefault();\n          }\n        }, params), {}, {\n          label: type.charAt(0).toUpperCase() + type.slice(1),\n          error: Boolean(type === \"customer\" ? touched.customer && errors.customer : touched.transporter && errors.transporter),\n          onBlur: handleBlur,\n          helperText: type === \"customer\" ? touched.customer && errors.customer : touched.transporter && errors.transporter,\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-name\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-name\",\n        children: \"Add a new party\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n        onSubmit: handleSubmit\n      }, rest), {}, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.name && formik.errors.name),\n                  fullWidth: true,\n                  helperText: formik.touched.name && formik.errors.name,\n                  label: \"Main Contact Name\",\n                  name: \"name\",\n                  onBlur: handleBlur,\n                  onChange: function onChange(event) {\n                    formik.setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                    }));\n                  },\n                  required: true,\n                  value: formik.values.name,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.mobile && formik.errors.mobile),\n                  fullWidth: true,\n                  helperText: formik.touched.mobile && formik.errors.mobile,\n                  label: \"Mobile\",\n                  name: \"mobile\",\n                  onBlur: handleBlur,\n                  onChange: function onChange(event) {\n                    setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                  },\n                  value: formik.values.mobile,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  name: \"location\",\n                  field: \"location\",\n                  formik: formik,\n                  error: Boolean(formik.touched.city && formik.errors.city),\n                  label: \"Your city in India\",\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: \"textPrimary\",\n                  children: \"Party Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Is this party a transporter?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: formik.values.transporter,\n                  color: \"secondary\",\n                  edge: \"start\",\n                  name: \"transporter\",\n                  onChange: formik.handleChange,\n                  value: formik.values.transporter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    type: \"submit\",\n                    disabled: formik.isSubmitting,\n                    children: \"Create Party\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: handleClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FreeSoloCreateOptionDialog, \"0c5mmZkmYyvuzQSxFZNwpYGUDBo=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = FreeSoloCreateOptionDialog;\nexport default FreeSoloCreateOptionDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeSoloCreateOptionDialog\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/PartyAutocomplete.js"],"names":["React","useState","useEffect","useCallback","Yup","useFormik","Box","Button","Card","CardContent","Dialog","DialogTitle","Divider","Grid","Switch","TextField","Typography","useDispatch","Autocomplete","createFilterOptions","GoogleMaps","partyApi","FreeSoloCreateOptionDialog","className","touched","setFieldValue","errors","handleBlur","type","values","user","rest","dispatch","value","setValue","open","toggleOpen","parties","setParties","name","transporter","dialogValue","setDialogValue","formik","initialValues","mobile","location","submit","validationSchema","object","shape","string","max","required","matches","onSubmit","resetForm","setErrors","setStatus","setSubmitting","console","log","axios","post","replace","txt","charAt","toUpperCase","substr","toLowerCase","response","data","success","handleClose","message","getPartiesByUser","partiesDB","handleSubmit","event","preventDefault","createParty","error","newValue","setTimeout","inputValue","option","props","city","JSON","parse","structured_formatting","main_text","params","e","which","slice","Boolean","customer","target","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Divider,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch } from \"../../../store\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { partyApi } from \"../../../api/party-api\";\n\nconst FreeSoloCreateOptionDialog = ({\n  className,\n  touched,\n  setFieldValue,\n  errors,\n  handleBlur,\n  type,\n  values,\n  user,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(values && values[type]);\n  const [open, toggleOpen] = React.useState(false);\n  const [parties, setParties] = useState([]);\n  const [dialogValue, setDialogValue] = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null,\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string()\n        .matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\")\n        .required(\"Mobile is required\"),\n    }),\n    onSubmit: async (\n      values,\n      { resetForm, setErrors, setStatus, setSubmitting }\n    ) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        const response = await axios.post(`/api/parties/`, {\n          name: values.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }),\n          ...values,\n        });\n        setFieldValue(type, response.data);\n        // dispatch(updateParty(party, values));\n        resetForm();\n        setStatus({ success: true });\n        setSubmitting(false);\n        handleClose();\n      } catch (err) {\n        console.log(err);\n        setStatus({ success: false });\n        setErrors({ submit: err.message });\n        setSubmitting(false);\n      }\n    },\n  });\n\n  useEffect(async () => {\n    try {\n      const partiesDB = await partyApi.getPartiesByUser(user, dispatch);\n      setParties(partiesDB);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false,\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      transporter: dialogValue.transporter,\n    });\n\n    try {\n      await partyApi.createParty(\n        {\n          name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }),\n          transporter: dialogValue.transporter,\n        },\n        dispatch\n      );\n      setFieldValue(type, response.data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === \"string\") {\n            // timeout to avoid instant validation of the dialog's form.\n            setTimeout(() => {\n              console.log(`New value is ${newValue}`);\n              toggleOpen(true);\n              setDialogValue({\n                name: newValue.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                }),\n                transporter: type !== \"customer\" ? true : false,\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.inputValue,\n              transporter: type !== \"customer\" ? true : false,\n            });\n          } else {\n            setFieldValue(type, newValue);\n            setValue(newValue);\n          }\n        }}\n        id={type}\n        options={parties}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === \"string\") {\n            return option.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n          }\n          if (option.inputValue) {\n            return option.inputValue.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n          }\n          return option.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }}\n        clearOnBlur\n        handleHomeEndKeys\n        renderOption={(props, option) => {\n          return (\n            <React.Fragment>\n              <li {...props}>\n                {option.name &&\n                  option.name.replace(/\\w\\S*/g, function (txt) {\n                    return (\n                      txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                    );\n                  })}\n                <br />\n                {option.mobile && `(M) ${option.mobile.replace(/ /g, \"\")}`}\n                <br />\n                {option.city &&\n                  `City - ${\n                    JSON.parse(option.city).structured_formatting.main_text\n                  }`}\n                <Divider />\n              </li>\n            </React.Fragment>\n          );\n        }}\n        fullWidth\n        freeSolo\n        renderInput={(params) => (\n          <TextField\n            onKeyPress={(e) => {\n              e.which === 13 && e.preventDefault();\n            }}\n            {...params}\n            label={type.charAt(0).toUpperCase() + type.slice(1)}\n            error={Boolean(\n              type === \"customer\"\n                ? touched.customer && errors.customer\n                : touched.transporter && errors.transporter\n            )}\n            onBlur={handleBlur}\n            helperText={\n              type === \"customer\"\n                ? touched.customer && errors.customer\n                : touched.transporter && errors.transporter\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-name\"\n      >\n        <DialogTitle id=\"form-dialog-name\">Add a new party</DialogTitle>\n        <form onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.name && formik.errors.name)}\n                    fullWidth\n                    helperText={formik.touched.name && formik.errors.name}\n                    label=\"Main Contact Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(\n                        \"name\",\n                        event.target.value.replace(/\\w\\S*/g, function (txt) {\n                          return (\n                            txt.charAt(0).toUpperCase() +\n                            txt.substr(1).toLowerCase()\n                          );\n                        })\n                      );\n                    }}\n                    required\n                    value={formik.values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.mobile && formik.errors.mobile\n                    )}\n                    fullWidth\n                    helperText={formik.touched.mobile && formik.errors.mobile}\n                    label=\"Mobile\"\n                    name=\"mobile\"\n                    onBlur={handleBlur}\n                    onChange={(event) => {\n                      setFieldValue(\n                        \"mobile\",\n                        event.target.value.replace(/ /g, \"\")\n                      );\n                    }}\n                    value={formik.values.mobile}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <GoogleMaps\n                    name={\"location\"}\n                    field={\"location\"}\n                    formik={formik}\n                    error={Boolean(formik.touched.city && formik.errors.city)}\n                    label={\"Your city in India\"}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    values={formik.values}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    Party Type\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Is this party a transporter?\n                  </Typography>\n                  <Switch\n                    checked={formik.values.transporter}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"transporter\"\n                    onChange={formik.handleChange}\n                    value={formik.values.transporter}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Grid container spacing={3}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      type=\"submit\"\n                      disabled={formik.isSubmitting}\n                    >\n                      Create Party\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n};\nexport default FreeSoloCreateOptionDialog;\n"]},"metadata":{},"sourceType":"module"}