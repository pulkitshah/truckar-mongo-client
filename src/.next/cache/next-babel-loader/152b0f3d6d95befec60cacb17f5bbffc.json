{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { useFormik, FormikProvider, FieldArray, getIn } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Trash as TrashIcon } from \"../../../icons/trash\";\nimport { useDispatch } from \"../../../store\";\nimport { Box, Button, Card, CardContent, Checkbox, Divider, Grid, InputAdornment, TextField, Typography } from \"@mui/material\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { userApi } from \"../../../api/user-api\";\nexport var AccountOrderLRInvoiceSettings = function AccountOrderLRInvoiceSettings(props) {\n  _s();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var dispatch = useDispatch();\n  var formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [{\n        id: uuidv4(),\n        driverExpenseName: \"\",\n        showDefault: true\n      }]\n    },\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                console.log(values.driverExpensesCategories);\n                _context.next = 4;\n                return userApi.updateUser({\n                  id: user.id,\n                  driverExpensesCategories: JSON.stringify(values.driverExpensesCategories),\n                  _version: user._version\n                }, dispatch);\n\n              case 4:\n                toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n\n                _context.next = 14;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"driverExpensesCategories\",\n        error: formik.errors,\n        children: function children(_ref) {\n          var remove = _ref.remove,\n              push = _ref.push;\n          return /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n            sx: {\n              mt: 4\n            }\n          }, props), {}, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: t(\"Truck Driver Expenses Categories\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      children: t(\"Expenses to store the purpose of giving money to driver of own vehicles \")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 8,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 8,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: t(\"Truck Driver Expenses Categories\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 89,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: t(\"Show Default\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 23\n                    }, _this), formik.values.driverExpensesCategories.length > 0 && formik.values.driverExpensesCategories.map(function (delivery, index) {\n                      var driverExpenseName = \"driverExpensesCategories[\".concat(index, \"].driverExpenseName\");\n                      var touchedDriverExpenseName = getIn(formik.touched, driverExpenseName);\n                      var errorDriverExpenseName = getIn(formik.errors, driverExpenseName);\n                      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          spacing: 3,\n                          children: [index > 0 && /*#__PURE__*/_jsxDEV(Divider, {\n                            sx: {\n                              mb: 2\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 115,\n                            columnNumber: 49\n                          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 8,\n                            sx: {\n                              mt: 2\n                            },\n                            className: \"col\",\n                            children: /*#__PURE__*/_jsxDEV(TextField, {\n                              helperText: touchedDriverExpenseName && errorDriverExpenseName ? errorDriverExpenseName : \"\",\n                              error: Boolean(touchedDriverExpenseName && errorDriverExpenseName),\n                              variant: \"outlined\",\n                              onChange: function onChange(event) {\n                                formik.setFieldValue(\"driverExpensesCategories[\".concat(index, \"].driverExpenseName\"), event.target.value);\n                              },\n                              onBlur: formik.handleBlur,\n                              id: \"driverExpenseName\",\n                              name: \"driverExpenseName\",\n                              label: \"Expense Name\",\n                              fullWidth: true,\n                              value: formik.values[driverExpenseName]\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 123,\n                              columnNumber: 37\n                            }, _this)\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 116,\n                            columnNumber: 35\n                          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 2,\n                            sx: {\n                              mt: 3\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                              defaultChecked: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 150,\n                              columnNumber: 37\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 149,\n                            columnNumber: 35\n                          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            sx: {\n                              mt: 3\n                            },\n                            className: \"col\",\n                            children: /*#__PURE__*/_jsxDEV(Button, {\n                              disabled: index < 1,\n                              color: \"error\",\n                              onClick: function onClick() {\n                                remove(index);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n                                fontSize: \"small\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 160,\n                                columnNumber: 39\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 153,\n                              columnNumber: 37\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 152,\n                            columnNumber: 35\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 114,\n                          columnNumber: 33\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 31\n                      }, _this);\n                    }), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mt: 2\n                      },\n                      p: 2,\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        sx: {\n                          mr: 2\n                        },\n                        variant: \"contained\",\n                        color: \"secondary\",\n                        startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 179,\n                          columnNumber: 38\n                        }, _this),\n                        onClick: function onClick() {\n                          push({\n                            id: uuidv4(),\n                            driverExpenseName: \"\",\n                            showDefault: true\n                          });\n                        },\n                        children: \"Add Expense\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"secondary\",\n                        type: \"submit\",\n                        variant: \"contained\",\n                        children: \"Save Changes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AccountOrderLRInvoiceSettings, \"4yxiJqtxQZiL6BFUqL9ew0knfWY=\", false, function () {\n  return [useAuth, useTranslation, useDispatch, useFormik];\n});\n\n_c = AccountOrderLRInvoiceSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountOrderLRInvoiceSettings\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js"],"names":["React","useRef","useState","v4","uuidv4","useTranslation","toast","useFormik","FormikProvider","FieldArray","getIn","Yup","useAuth","Trash","TrashIcon","useDispatch","Box","Button","Card","CardContent","Checkbox","Divider","Grid","InputAdornment","TextField","Typography","Plus","PlusIcon","userApi","AccountOrderLRInvoiceSettings","props","user","t","dispatch","formik","initialValues","driverExpensesCategories","id","driverExpenseName","showDefault","onSubmit","values","helpers","console","log","updateUser","JSON","stringify","_version","success","error","setStatus","setErrors","submit","message","setSubmitting","handleSubmit","errors","remove","push","mt","length","map","delivery","index","touchedDriverExpenseName","touched","errorDriverExpenseName","mb","Boolean","event","setFieldValue","target","value","handleBlur","mr"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { useFormik, FormikProvider, FieldArray, getIn } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Trash as TrashIcon } from \"../../../icons/trash\";\nimport { useDispatch } from \"../../../store\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Checkbox,\n  Divider,\n  Grid,\n  InputAdornment,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { userApi } from \"../../../api/user-api\";\n\nexport const AccountOrderLRInvoiceSettings = (props) => {\n  const { user } = useAuth();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [\n        {\n          id: uuidv4(),\n          driverExpenseName: \"\",\n          showDefault: true,\n        },\n      ],\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        console.log(values.driverExpensesCategories),\n          // await orderApi.createOrder(newOrder, dispatch);\n          await userApi.updateUser(\n            {\n              id: user.id,\n              driverExpensesCategories: JSON.stringify(\n                values.driverExpensesCategories\n              ),\n              _version: user._version,\n            },\n            dispatch\n          );\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"driverExpensesCategories\" error={formik.errors}>\n          {({ remove, push }) => (\n            <Box sx={{ mt: 4 }} {...props}>\n              <Card>\n                <CardContent>\n                  <Grid container spacing={3}>\n                    <Grid item md={4} xs={12}>\n                      <Typography variant=\"h6\">\n                        {t(\"Truck Driver Expenses Categories\")}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {t(\n                          \"Expenses to store the purpose of giving money to driver of own vehicles \"\n                        )}\n                      </Typography>\n                    </Grid>\n                    <Grid item md={8} xs={12}>\n                      <Grid container spacing={3}>\n                        <Grid item xs={8}>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            {t(\"Truck Driver Expenses Categories\")}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            {t(\"Show Default\")}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n\n                      {formik.values.driverExpensesCategories.length > 0 &&\n                        formik.values.driverExpensesCategories.map(\n                          (delivery, index) => {\n                            const driverExpenseName = `driverExpensesCategories[${index}].driverExpenseName`;\n                            const touchedDriverExpenseName = getIn(\n                              formik.touched,\n                              driverExpenseName\n                            );\n                            const errorDriverExpenseName = getIn(\n                              formik.errors,\n                              driverExpenseName\n                            );\n                            return (\n                              <React.Fragment>\n                                <Grid container spacing={3}>\n                                  {index > 0 && <Divider sx={{ mb: 2 }} />}\n                                  <Grid\n                                    item\n                                    xs={8}\n                                    sx={{ mt: 2 }}\n                                    className=\"col\"\n                                    key={index}\n                                  >\n                                    <TextField\n                                      helperText={\n                                        touchedDriverExpenseName &&\n                                        errorDriverExpenseName\n                                          ? errorDriverExpenseName\n                                          : \"\"\n                                      }\n                                      error={Boolean(\n                                        touchedDriverExpenseName &&\n                                          errorDriverExpenseName\n                                      )}\n                                      variant=\"outlined\"\n                                      onChange={(event) => {\n                                        formik.setFieldValue(\n                                          `driverExpensesCategories[${index}].driverExpenseName`,\n                                          event.target.value\n                                        );\n                                      }}\n                                      onBlur={formik.handleBlur}\n                                      id=\"driverExpenseName\"\n                                      name=\"driverExpenseName\"\n                                      label=\"Expense Name\"\n                                      fullWidth\n                                      value={formik.values[driverExpenseName]}\n                                    />\n                                  </Grid>\n                                  <Grid item xs={2} sx={{ mt: 3 }}>\n                                    <Checkbox defaultChecked />\n                                  </Grid>\n                                  <Grid item sx={{ mt: 3 }} className=\"col\">\n                                    <Button\n                                      disabled={index < 1}\n                                      color=\"error\"\n                                      onClick={() => {\n                                        remove(index);\n                                      }}\n                                    >\n                                      <TrashIcon fontSize=\"small\" />\n                                    </Button>\n                                  </Grid>\n                                </Grid>\n                              </React.Fragment>\n                            );\n                          }\n                        )}\n\n                      <Box\n                        sx={{ mt: 2 }}\n                        p={2}\n                        display=\"flex\"\n                        justifyContent=\"flex-end\"\n                      >\n                        <Button\n                          sx={{ mr: 2 }}\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          startIcon={<PlusIcon fontSize=\"small\" />}\n                          onClick={() => {\n                            push({\n                              id: uuidv4(),\n                              driverExpenseName: \"\",\n                              showDefault: true,\n                            });\n                          }}\n                        >\n                          Add Expense\n                        </Button>\n                        <Button\n                          color=\"secondary\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Save Changes\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Box>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}