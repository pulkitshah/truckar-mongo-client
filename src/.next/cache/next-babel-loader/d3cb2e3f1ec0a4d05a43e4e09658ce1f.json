{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { FieldArray } from \"formik\";\nimport { getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = (_ref) => {\n  let {\n    className,\n    touched,\n    setFieldValue,\n    errors,\n    handleBlur,\n    handleChange,\n    values,\n    formik\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"touched\", \"setFieldValue\", \"errors\", \"handleBlur\", \"handleChange\", \"values\", \"formik\"]);\n\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"deliveryDetails\",\n      error: errors,\n      children: ({\n        remove,\n        push\n      }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"No of Deliveries: \", noOfDeliveries]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                mb: 3\n              },\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: () => {\n                setNoOfDeliveries(noOfDeliveries + 1);\n                push({\n                  loading: \"\",\n                  unloading: \"\"\n                });\n              },\n              children: \"Add Delivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), values.deliveryDetails.length > 0 && values.deliveryDetails.map((delivery, index) => {\n          const loading = `deliveryDetails[${index}].loading`;\n          const touchedLoading = getIn(formik.touched, loading);\n          const errorLoading = getIn(formik.errors, loading);\n          const unloading = `deliveryDetails[${index}].unloading`;\n          const touchedUnloading = getIn(formik.touched, unloading);\n          const errorUnloading = getIn(formik.errors, unloading);\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 4,\n              xs: 12,\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                error: errorLoading,\n                touched: touchedLoading,\n                name: loading,\n                setFieldValue: formik.setFieldValue,\n                handleBlur: formik.handleBlur,\n                values: formik.values,\n                index: index,\n                type: \"loading\",\n                formik: formik\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              md: 4,\n              xs: 12,\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                error: errorUnloading,\n                touched: touchedUnloading,\n                name: loading,\n                setFieldValue: formik.setFieldValue,\n                handleBlur: formik.handleBlur,\n                values: formik.values,\n                index: index,\n                type: \"unloading\",\n                formik: formik\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                disabled: index < 1,\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: () => {\n                  setNoOfDeliveries(noOfDeliveries - 1);\n                  remove(index);\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DeliveryForm;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FieldArray","getIn","Grid","Typography","Button","GoogleMaps","DeliveryForm","className","touched","setFieldValue","errors","handleBlur","handleChange","values","formik","rest","noOfDeliveries","setNoOfDeliveries","useState","remove","push","mb","loading","unloading","deliveryDetails","length","map","delivery","index","touchedLoading","errorLoading","touchedUnloading","errorUnloading"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FieldArray } from \"formik\";\nimport { getIn } from \"formik\";\n\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({\n  className,\n  touched,\n  setFieldValue,\n  errors,\n  handleBlur,\n  handleChange,\n  values,\n  formik,\n  ...rest\n}) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n\n  return (\n    <React.Fragment>\n      <FieldArray name=\"deliveryDetails\" error={errors}>\n        {({ remove, push }) => (\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item>\n                <Typography variant=\"h6\">\n                  No of Deliveries: {noOfDeliveries}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Button\n                  sx={{ mb: 3 }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    setNoOfDeliveries(noOfDeliveries + 1);\n                    push({ loading: \"\", unloading: \"\" });\n                  }}\n                >\n                  Add Delivery\n                </Button>\n              </Grid>\n            </Grid>\n\n            {values.deliveryDetails.length > 0 &&\n              values.deliveryDetails.map((delivery, index) => {\n                const loading = `deliveryDetails[${index}].loading`;\n                const touchedLoading = getIn(formik.touched, loading);\n                const errorLoading = getIn(formik.errors, loading);\n\n                const unloading = `deliveryDetails[${index}].unloading`;\n                const touchedUnloading = getIn(formik.touched, unloading);\n                const errorUnloading = getIn(formik.errors, unloading);\n\n                return (\n                  <Grid container spacing={3} className=\"row\" key={index}>\n                    <Grid item md={4} xs={12} className=\"col\" key={index}>\n                      <GoogleMaps\n                        error={errorLoading}\n                        touched={touchedLoading}\n                        name={loading}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        values={formik.values}\n                        index={index}\n                        type=\"loading\"\n                        formik={formik}\n                      />\n                    </Grid>\n                    <Grid item md={4} xs={12} className=\"col\">\n                      <GoogleMaps\n                        error={errorUnloading}\n                        touched={touchedUnloading}\n                        name={loading}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        values={formik.values}\n                        index={index}\n                        type=\"unloading\"\n                        formik={formik}\n                      />\n                    </Grid>\n                    <Grid item className=\"col\">\n                      <Button\n                        disabled={index < 1}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => {\n                          setNoOfDeliveries(noOfDeliveries - 1);\n                          remove(index);\n                        }}\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n          </React.Fragment>\n        )}\n      </FieldArray>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}