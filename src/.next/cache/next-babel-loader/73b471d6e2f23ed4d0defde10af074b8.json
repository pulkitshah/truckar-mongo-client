{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/parties/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, useCallback, useRef } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport { Box, Button, Card, Container, Divider, Grid, InputAdornment, Tab, Tabs, TextField, Typography } from \"@mui/material\";\nimport { partyApi } from \"../../../api/party-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { PartyListTable } from \"../../../components/dashboard/party/party-list-table\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { Download as DownloadIcon } from \"../../../icons/download\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { Upload as UploadIcon } from \"../../../icons/upload\";\nimport { gtm } from \"../../../lib/gtm\";\nconst tabs = [{\n  label: \"All\",\n  value: \"all\"\n}, {\n  label: \"Accepts Marketing\",\n  value: \"hasAcceptedMarketing\"\n}, {\n  label: \"Prospect\",\n  value: \"isProspect\"\n}, {\n  label: \"Returning\",\n  value: \"isReturning\"\n}];\nconst sortOptions = [{\n  label: \"Last update (newest)\",\n  value: \"updatedAt|desc\"\n}, {\n  label: \"Last update (oldest)\",\n  value: \"updatedAt|asc\"\n}, {\n  label: \"Total orders (highest)\",\n  value: \"orders|desc\"\n}, {\n  label: \"Total orders (lowest)\",\n  value: \"orders|asc\"\n}];\n\nconst applyFilters = (parties, filters) => parties.filter(party => {\n  if (filters.query) {\n    let queryMatched = false;\n    const properties = [\"email\", \"name\"];\n    properties.forEach(property => {\n      if (party[property].toLowerCase().includes(filters.query.toLowerCase())) {\n        queryMatched = true;\n      }\n    });\n\n    if (!queryMatched) {\n      return false;\n    }\n  }\n\n  if (filters.hasAcceptedMarketing && !party.hasAcceptedMarketing) {\n    return false;\n  }\n\n  if (filters.isProspect && !party.isProspect) {\n    return false;\n  }\n\n  if (filters.isReturning && !party.isReturning) {\n    return false;\n  }\n\n  return true;\n});\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n\nconst applySort = (parties, sort) => {\n  const [orderBy, order] = sort.split(\"|\");\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = parties.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n};\n\nconst applyPagination = (parties, page, rowsPerPage) => parties.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\nconst PartyList = () => {\n  const isMounted = useMounted();\n  const queryRef = useRef(null);\n  const {\n    parties\n  } = useSelector(state => state.parties);\n  const {\n    0: currentTab,\n    1: setCurrentTab\n  } = useState(\"all\");\n  const {\n    0: page,\n    1: setPage\n  } = useState(0);\n  const {\n    0: rowsPerPage,\n    1: setRowsPerPage\n  } = useState(10);\n  const {\n    0: sort,\n    1: setSort\n  } = useState(sortOptions[0].value);\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    query: \"\",\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n  useEffect(() => {\n    gtm.push({\n      event: \"page_view\"\n    });\n  }, []);\n  const getParties = useCallback(async () => {\n    try {\n      const data = await partyApi.getPartiesByUser();\n      console.log(data);\n\n      if (isMounted()) {\n        setParties(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMounted]);\n  useEffect(() => {\n    getParties();\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = _objectSpread(_objectSpread({}, filters), {}, {\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    });\n\n    if (value !== \"all\") {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = event => {\n    event.preventDefault();\n    setFilters(prevState => {\n      var _queryRef$current;\n\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        query: (_queryRef$current = queryRef.current) === null || _queryRef$current === void 0 ? void 0 : _queryRef$current.value\n      });\n    });\n  };\n\n  const handleSortChange = event => {\n    setSort(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  }; // Usually query is done on backend with indexing solutions\n\n\n  const filteredParties = applyFilters(parties, filters);\n  const sortedParties = applySort(filteredParties, sort);\n  const paginatedParties = applyPagination(sortedParties, page, rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Dashboard: Party List | Material Kit Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        py: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"space-between\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: \"Parties\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(NextLink, {\n                href: \"/dashboard/parties/new\",\n                passHref: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  component: \"a\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 32\n                  }, this),\n                  variant: \"contained\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              m: -1,\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 34\n              }, this),\n              sx: {\n                m: 1\n              },\n              children: \"Import\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 28\n              }, this),\n              sx: {\n                m: 1\n              },\n              children: \"Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            indicatorColor: \"primary\",\n            onChange: handleTabsChange,\n            scrollButtons: \"auto\",\n            sx: {\n              px: 3\n            },\n            textColor: \"primary\",\n            value: currentTab,\n            variant: \"scrollable\",\n            children: tabs.map(tab => /*#__PURE__*/_jsxDEV(Tab, {\n              label: tab.label,\n              value: tab.value\n            }, tab.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              alignItems: \"center\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              m: -1.5,\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              onSubmit: handleQueryChange,\n              sx: {\n                flexGrow: 1,\n                m: 1.5\n              },\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                defaultValue: \"\",\n                fullWidth: true,\n                inputProps: {\n                  ref: queryRef\n                },\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this)\n                },\n                placeholder: \"Search parties\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Sort By\",\n              name: \"sort\",\n              onChange: handleSortChange,\n              select: true,\n              SelectProps: {\n                native: true\n              },\n              sx: {\n                m: 1.5\n              },\n              value: sort,\n              children: sortOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PartyListTable, {\n            parties: paginatedParties,\n            partiesCount: filteredParties.length,\n            onPageChange: handlePageChange,\n            onRowsPerPageChange: handleRowsPerPageChange,\n            rowsPerPage: rowsPerPage,\n            page: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nPartyList.getLayout = page => /*#__PURE__*/_jsxDEV(AuthGuard, {\n  children: /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: page\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 343,\n  columnNumber: 3\n}, this);\n\nexport default PartyList;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/pages/dashboard/parties/index.js"],"names":["useState","useEffect","useCallback","useRef","NextLink","Head","Box","Button","Card","Container","Divider","Grid","InputAdornment","Tab","Tabs","TextField","Typography","partyApi","AuthGuard","DashboardLayout","PartyListTable","useMounted","Download","DownloadIcon","Plus","PlusIcon","Search","SearchIcon","Upload","UploadIcon","gtm","tabs","label","value","sortOptions","applyFilters","parties","filters","filter","party","query","queryMatched","properties","forEach","property","toLowerCase","includes","hasAcceptedMarketing","isProspect","isReturning","descendingComparator","a","b","orderBy","getComparator","order","applySort","sort","split","comparator","stabilizedThis","map","el","index","newOrder","applyPagination","page","rowsPerPage","slice","PartyList","isMounted","queryRef","useSelector","state","currentTab","setCurrentTab","setPage","setRowsPerPage","setSort","setFilters","push","event","getParties","data","getPartiesByUser","console","log","setParties","err","error","handleTabsChange","updatedFilters","handleQueryChange","preventDefault","prevState","current","handleSortChange","target","handlePageChange","newPage","handleRowsPerPageChange","parseInt","filteredParties","sortedParties","paginatedParties","flexGrow","py","mb","m","mt","px","tab","alignItems","display","flexWrap","p","ref","startAdornment","native","option","length","getLayout"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback, useRef } from \"react\";\nimport NextLink from \"next/link\";\nimport Head from \"next/head\";\nimport {\n  Box,\n  Button,\n  Card,\n  Container,\n  Divider,\n  Grid,\n  InputAdornment,\n  Tab,\n  Tabs,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { partyApi } from \"../../../api/party-api\";\nimport { AuthGuard } from \"../../../components/authentication/auth-guard\";\nimport { DashboardLayout } from \"../../../components/dashboard/dashboard-layout\";\nimport { PartyListTable } from \"../../../components/dashboard/party/party-list-table\";\nimport { useMounted } from \"../../../hooks/use-mounted\";\nimport { Download as DownloadIcon } from \"../../../icons/download\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport { Search as SearchIcon } from \"../../../icons/search\";\nimport { Upload as UploadIcon } from \"../../../icons/upload\";\nimport { gtm } from \"../../../lib/gtm\";\n\nconst tabs = [\n  {\n    label: \"All\",\n    value: \"all\",\n  },\n  {\n    label: \"Accepts Marketing\",\n    value: \"hasAcceptedMarketing\",\n  },\n  {\n    label: \"Prospect\",\n    value: \"isProspect\",\n  },\n  {\n    label: \"Returning\",\n    value: \"isReturning\",\n  },\n];\n\nconst sortOptions = [\n  {\n    label: \"Last update (newest)\",\n    value: \"updatedAt|desc\",\n  },\n  {\n    label: \"Last update (oldest)\",\n    value: \"updatedAt|asc\",\n  },\n  {\n    label: \"Total orders (highest)\",\n    value: \"orders|desc\",\n  },\n  {\n    label: \"Total orders (lowest)\",\n    value: \"orders|asc\",\n  },\n];\n\nconst applyFilters = (parties, filters) =>\n  parties.filter((party) => {\n    if (filters.query) {\n      let queryMatched = false;\n      const properties = [\"email\", \"name\"];\n\n      properties.forEach((property) => {\n        if (\n          party[property].toLowerCase().includes(filters.query.toLowerCase())\n        ) {\n          queryMatched = true;\n        }\n      });\n\n      if (!queryMatched) {\n        return false;\n      }\n    }\n\n    if (filters.hasAcceptedMarketing && !party.hasAcceptedMarketing) {\n      return false;\n    }\n\n    if (filters.isProspect && !party.isProspect) {\n      return false;\n    }\n\n    if (filters.isReturning && !party.isReturning) {\n      return false;\n    }\n\n    return true;\n  });\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) =>\n  order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n\nconst applySort = (parties, sort) => {\n  const [orderBy, order] = sort.split(\"|\");\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = parties.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst applyPagination = (parties, page, rowsPerPage) =>\n  parties.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\nconst PartyList = () => {\n  const isMounted = useMounted();\n  const queryRef = useRef(null);\n  const { parties } = useSelector((state) => state.parties);\n  const [currentTab, setCurrentTab] = useState(\"all\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    query: \"\",\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null,\n  });\n\n  useEffect(() => {\n    gtm.push({ event: \"page_view\" });\n  }, []);\n\n  const getParties = useCallback(async () => {\n    try {\n      const data = await partyApi.getPartiesByUser();\n      console.log(data);\n      if (isMounted()) {\n        setParties(data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMounted]);\n\n  useEffect(\n    () => {\n      getParties();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null,\n    };\n\n    if (value !== \"all\") {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.preventDefault();\n    setFilters((prevState) => ({\n      ...prevState,\n      query: queryRef.current?.value,\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleRowsPerPageChange = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredParties = applyFilters(parties, filters);\n  const sortedParties = applySort(filteredParties, sort);\n  const paginatedParties = applyPagination(sortedParties, page, rowsPerPage);\n\n  return (\n    <>\n      <Head>\n        <title>Dashboard: Party List | Material Kit Pro</title>\n      </Head>\n      <Box\n        component=\"main\"\n        sx={{\n          flexGrow: 1,\n          py: 8,\n        }}\n      >\n        <Container maxWidth=\"xl\">\n          <Box sx={{ mb: 4 }}>\n            <Grid container justifyContent=\"space-between\" spacing={3}>\n              <Grid item>\n                <Typography variant=\"h4\">Parties</Typography>\n              </Grid>\n              <Grid item>\n                <NextLink href=\"/dashboard/parties/new\" passHref>\n                  <Button\n                    component=\"a\"\n                    startIcon={<PlusIcon fontSize=\"small\" />}\n                    variant=\"contained\"\n                  >\n                    Add\n                  </Button>\n                </NextLink>\n              </Grid>\n            </Grid>\n            <Box\n              sx={{\n                m: -1,\n                mt: 3,\n              }}\n            >\n              <Button startIcon={<UploadIcon fontSize=\"small\" />} sx={{ m: 1 }}>\n                Import\n              </Button>\n              <Button\n                startIcon={<DownloadIcon fontSize=\"small\" />}\n                sx={{ m: 1 }}\n              >\n                Export\n              </Button>\n            </Box>\n          </Box>\n          <Card>\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              sx={{ px: 3 }}\n              textColor=\"primary\"\n              value={currentTab}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab key={tab.value} label={tab.label} value={tab.value} />\n              ))}\n            </Tabs>\n            <Divider />\n            <Box\n              sx={{\n                alignItems: \"center\",\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                m: -1.5,\n                p: 3,\n              }}\n            >\n              <Box\n                component=\"form\"\n                onSubmit={handleQueryChange}\n                sx={{\n                  flexGrow: 1,\n                  m: 1.5,\n                }}\n              >\n                <TextField\n                  defaultValue=\"\"\n                  fullWidth\n                  inputProps={{ ref: queryRef }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon fontSize=\"small\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                  placeholder=\"Search parties\"\n                />\n              </Box>\n              <TextField\n                label=\"Sort By\"\n                name=\"sort\"\n                onChange={handleSortChange}\n                select\n                SelectProps={{ native: true }}\n                sx={{ m: 1.5 }}\n                value={sort}\n              >\n                {sortOptions.map((option) => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Box>\n            <PartyListTable\n              parties={paginatedParties}\n              partiesCount={filteredParties.length}\n              onPageChange={handlePageChange}\n              onRowsPerPageChange={handleRowsPerPageChange}\n              rowsPerPage={rowsPerPage}\n              page={page}\n            />\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nPartyList.getLayout = (page) => (\n  <AuthGuard>\n    <DashboardLayout>{page}</DashboardLayout>\n  </AuthGuard>\n);\n\nexport default PartyList;\n"]},"metadata":{},"sourceType":"module"}