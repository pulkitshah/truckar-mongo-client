{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/dashboard-sidebar-item.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useState } from 'react';\nimport NextLink from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Collapse, ListItem } from '@mui/material';\nimport { ChevronDown as ChevronDownIcon } from '../../icons/chevron-down';\nimport { ChevronRight as ChevronRightIcon } from '../../icons/chevron-right';\nimport { openLink } from '../../helper/openLink';\nimport electron from 'electron';\nconst ipcRenderer = electron.ipcRenderer || false;\nexport const DashboardSidebarItem = props => {\n  const {\n    active,\n    children,\n    chip,\n    depth,\n    icon,\n    info,\n    open: openProp,\n    path,\n    title,\n    onClose\n  } = props,\n        other = _objectWithoutProperties(props, [\"active\", \"children\", \"chip\", \"depth\", \"icon\", \"info\", \"open\", \"path\", \"title\", \"onClose\"]);\n\n  const {\n    0: open,\n    1: setOpen\n  } = useState(openProp);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  let paddingLeft = 24;\n\n  if (depth > 0) {\n    paddingLeft = 32 + 8 * depth;\n  } // Branch\n\n\n  if (children) {\n    return /*#__PURE__*/_jsxDEV(ListItem, _objectSpread(_objectSpread({\n      disableGutters: true,\n      sx: {\n        display: 'block',\n        mb: 0.5,\n        py: 0\n      }\n    }, other), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        endIcon: !open ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this),\n        disableRipple: true,\n        onClick: handleToggle,\n        startIcon: icon,\n        sx: {\n          color: active ? 'secondary.main' : 'neutral.300',\n          justifyContent: 'flex-start',\n          pl: `${paddingLeft}px`,\n          pr: 3,\n          textAlign: 'left',\n          textTransform: 'none',\n          width: '100%',\n          '&:hover': {\n            backgroundColor: 'rgba(255,255,255, 0.08)'\n          },\n          '& .MuiButton-startIcon': {\n            color: active ? 'secondary.main' : 'neutral.400'\n          },\n          '& .MuiButton-endIcon': {\n            color: 'neutral.400'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), info]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        sx: {\n          mt: 0.5\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } // Leaf\n\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    disableGutters: true,\n    sx: {\n      display: 'flex',\n      mb: 0.5,\n      py: 0\n    },\n    children: [!ipcRenderer && /*#__PURE__*/_jsxDEV(NextLink, {\n      href: path,\n      onClick: onClose,\n      passHref: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        component: \"a\",\n        startIcon: icon,\n        endIcon: chip,\n        disableRipple: true,\n        sx: {\n          backgroundColor: active && 'rgba(255,255,255, 0.08)',\n          borderRadius: 1,\n          color: active ? 'secondary.main' : 'neutral.300',\n          fontWeight: active && 'fontWeightBold',\n          justifyContent: 'flex-start',\n          pl: `${paddingLeft}px`,\n          pr: 3,\n          textAlign: 'left',\n          textTransform: 'none',\n          width: '100%',\n          '& .MuiButton-startIcon': {\n            color: active ? 'secondary.main' : 'neutral.400'\n          },\n          '&:hover': {\n            backgroundColor: 'rgba(255,255,255, 0.08)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), info]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), ipcRenderer && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        openLink(title, path, '_blank', 'top=500,left=200,frame=false');\n        onClose();\n      },\n      component: \"a\",\n      startIcon: icon,\n      endIcon: chip,\n      disableRipple: true,\n      sx: {\n        backgroundColor: active && 'rgba(255,255,255, 0.08)',\n        borderRadius: 1,\n        color: active ? 'secondary.main' : 'neutral.300',\n        fontWeight: active && 'fontWeightBold',\n        justifyContent: 'flex-start',\n        pl: `${paddingLeft}px`,\n        pr: 3,\n        textAlign: 'left',\n        textTransform: 'none',\n        width: '100%',\n        '& .MuiButton-startIcon': {\n          color: active ? 'secondary.main' : 'neutral.400'\n        },\n        '&:hover': {\n          backgroundColor: 'rgba(255,255,255, 0.08)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), info]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\nDashboardSidebarItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  depth: PropTypes.number.isRequired,\n  icon: PropTypes.node,\n  info: PropTypes.node,\n  open: PropTypes.bool,\n  path: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\nDashboardSidebarItem.defaultProps = {\n  active: false,\n  open: false\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/dashboard-sidebar-item.js"],"names":["useState","NextLink","PropTypes","Box","Button","Collapse","ListItem","ChevronDown","ChevronDownIcon","ChevronRight","ChevronRightIcon","openLink","electron","ipcRenderer","DashboardSidebarItem","props","active","children","chip","depth","icon","info","open","openProp","path","title","onClose","other","setOpen","handleToggle","prevOpen","paddingLeft","display","mb","py","color","justifyContent","pl","pr","textAlign","textTransform","width","backgroundColor","flexGrow","mt","borderRadius","fontWeight","propTypes","bool","node","number","isRequired","string","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,QAAhC,QAAgD,eAAhD;AACA,SAASC,WAAW,IAAIC,eAAxB,QAA+C,0BAA/C;AACA,SAASC,YAAY,IAAIC,gBAAzB,QAAiD,2BAAjD;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,MAAMC,WAAW,GAAGD,QAAQ,CAACC,WAAT,IAAwB,KAA5C;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAC7C,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,IAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,IAAI,EAAEC,QAPF;AAQJC,IAAAA,IARI;AASJC,IAAAA,KATI;AAUJC,IAAAA;AAVI,MAYFX,KAZJ;AAAA,QAWKY,KAXL,4BAYIZ,KAZJ;;AAaA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOM;AAAP,MAAkB5B,QAAQ,CAACuB,QAAD,CAAhC;;AACA,QAAMM,YAAY,GAAG,MAAM;AACzBD,IAAAA,OAAO,CAAEE,QAAD,IAAc,CAACA,QAAhB,CAAP;AACD,GAFD;;AAIA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAIZ,KAAK,GAAG,CAAZ,EAAe;AACbY,IAAAA,WAAW,GAAG,KAAK,IAAIZ,KAAvB;AACD,GAvB4C,CAyB7C;;;AACA,MAAIF,QAAJ,EAAc;AACZ,wBACE,QAAC,QAAD;AACE,MAAA,cAAc,MADhB;AAEE,MAAA,EAAE,EAAE;AACFe,QAAAA,OAAO,EAAE,OADP;AAEFC,QAAAA,EAAE,EAAE,GAFF;AAGFC,QAAAA,EAAE,EAAE;AAHF;AAFN,OAOMP,KAPN;AAAA,8BASE,QAAC,MAAD;AACE,QAAA,OAAO,EACL,CAACL,IAAD,gBACE,QAAC,gBAAD;AAAkB,UAAA,QAAQ,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,gBAGE,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBALN;AAQE,QAAA,aAAa,MARf;AASE,QAAA,OAAO,EAAEO,YATX;AAUE,QAAA,SAAS,EAAET,IAVb;AAWE,QAAA,EAAE,EAAE;AACFe,UAAAA,KAAK,EAAEnB,MAAM,GAAG,gBAAH,GAAsB,aADjC;AAEFoB,UAAAA,cAAc,EAAE,YAFd;AAGFC,UAAAA,EAAE,EAAG,GAAEN,WAAY,IAHjB;AAIFO,UAAAA,EAAE,EAAE,CAJF;AAKFC,UAAAA,SAAS,EAAE,MALT;AAMFC,UAAAA,aAAa,EAAE,MANb;AAOFC,UAAAA,KAAK,EAAE,MAPL;AAQF,qBAAW;AACTC,YAAAA,eAAe,EAAE;AADR,WART;AAWF,oCAA0B;AACxBP,YAAAA,KAAK,EAAEnB,MAAM,GAAG,gBAAH,GAAsB;AADX,WAXxB;AAcF,kCAAwB;AACtBmB,YAAAA,KAAK,EAAE;AADe;AAdtB,SAXN;AAAA,gCA8BE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEQ,YAAAA,QAAQ,EAAE;AAAZ,WAAT;AAAA,oBAA2BlB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBA9BF,EA+BGJ,IA/BH;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eA0CE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEC,IAAd;AAAoB,QAAA,EAAE,EAAE;AAAEsB,UAAAA,EAAE,EAAE;AAAN,SAAxB;AAAA,kBACG3B;AADH;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgDD,GA3E4C,CA6E7C;;;AACA,sBACE,QAAC,QAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,EAAE,EAAE;AACFe,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,EAAE,EAAE,GAFF;AAGFC,MAAAA,EAAE,EAAE;AAHF,KAFN;AAAA,eAQG,CAACrB,WAAD,iBACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEW,IAAhB;AAAsB,MAAA,OAAO,EAAEE,OAA/B;AAAwC,MAAA,QAAQ,MAAhD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEA,OADX;AAEE,QAAA,SAAS,EAAC,GAFZ;AAGE,QAAA,SAAS,EAAEN,IAHb;AAIE,QAAA,OAAO,EAAEF,IAJX;AAKE,QAAA,aAAa,MALf;AAME,QAAA,EAAE,EAAE;AACFwB,UAAAA,eAAe,EAAE1B,MAAM,IAAI,yBADzB;AAEF6B,UAAAA,YAAY,EAAE,CAFZ;AAGFV,UAAAA,KAAK,EAAEnB,MAAM,GAAG,gBAAH,GAAsB,aAHjC;AAIF8B,UAAAA,UAAU,EAAE9B,MAAM,IAAI,gBAJpB;AAKFoB,UAAAA,cAAc,EAAE,YALd;AAMFC,UAAAA,EAAE,EAAG,GAAEN,WAAY,IANjB;AAOFO,UAAAA,EAAE,EAAE,CAPF;AAQFC,UAAAA,SAAS,EAAE,MART;AASFC,UAAAA,aAAa,EAAE,MATb;AAUFC,UAAAA,KAAK,EAAE,MAVL;AAWF,oCAA0B;AACxBN,YAAAA,KAAK,EAAEnB,MAAM,GAAG,gBAAH,GAAsB;AADX,WAXxB;AAcF,qBAAW;AACT0B,YAAAA,eAAe,EAAE;AADR;AAdT,SANN;AAAA,gCAyBE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAAT;AAAA,oBAA2BlB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAzBF,EA0BGJ,IA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATJ,EAwCGR,WAAW,iBACV,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACbF,QAAAA,QAAQ,CAACc,KAAD,EAAQD,IAAR,EAAc,QAAd,EAAwB,8BAAxB,CAAR;AACAE,QAAAA,OAAO;AACR,OAJH;AAKE,MAAA,SAAS,EAAC,GALZ;AAME,MAAA,SAAS,EAAEN,IANb;AAOE,MAAA,OAAO,EAAEF,IAPX;AAQE,MAAA,aAAa,MARf;AASE,MAAA,EAAE,EAAE;AACFwB,QAAAA,eAAe,EAAE1B,MAAM,IAAI,yBADzB;AAEF6B,QAAAA,YAAY,EAAE,CAFZ;AAGFV,QAAAA,KAAK,EAAEnB,MAAM,GAAG,gBAAH,GAAsB,aAHjC;AAIF8B,QAAAA,UAAU,EAAE9B,MAAM,IAAI,gBAJpB;AAKFoB,QAAAA,cAAc,EAAE,YALd;AAMFC,QAAAA,EAAE,EAAG,GAAEN,WAAY,IANjB;AAOFO,QAAAA,EAAE,EAAE,CAPF;AAQFC,QAAAA,SAAS,EAAE,MART;AASFC,QAAAA,aAAa,EAAE,MATb;AAUFC,QAAAA,KAAK,EAAE,MAVL;AAWF,kCAA0B;AACxBN,UAAAA,KAAK,EAAEnB,MAAM,GAAG,gBAAH,GAAsB;AADX,SAXxB;AAcF,mBAAW;AACT0B,UAAAA,eAAe,EAAE;AADR;AAdT,OATN;AAAA,8BA4BE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAT;AAAA,kBAA2BlB;AAA3B;AAAA;AAAA;AAAA;AAAA,cA5BF,EA6BGJ,IA7BH;AAAA;AAAA;AAAA;AAAA;AAAA,YAzCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4ED,CA1JM;AA4JPP,oBAAoB,CAACiC,SAArB,GAAiC;AAC/B/B,EAAAA,MAAM,EAAEd,SAAS,CAAC8C,IADa;AAE/B/B,EAAAA,QAAQ,EAAEf,SAAS,CAAC+C,IAFW;AAG/B9B,EAAAA,KAAK,EAAEjB,SAAS,CAACgD,MAAV,CAAiBC,UAHO;AAI/B/B,EAAAA,IAAI,EAAElB,SAAS,CAAC+C,IAJe;AAK/B5B,EAAAA,IAAI,EAAEnB,SAAS,CAAC+C,IALe;AAM/B3B,EAAAA,IAAI,EAAEpB,SAAS,CAAC8C,IANe;AAO/BxB,EAAAA,IAAI,EAAEtB,SAAS,CAACkD,MAPe;AAQ/B3B,EAAAA,KAAK,EAAEvB,SAAS,CAACkD,MAAV,CAAiBD;AARO,CAAjC;AAWArC,oBAAoB,CAACuC,YAArB,GAAoC;AAClCrC,EAAAA,MAAM,EAAE,KAD0B;AAElCM,EAAAA,IAAI,EAAE;AAF4B,CAApC","sourcesContent":["import { useState } from 'react';\nimport NextLink from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Box, Button, Collapse, ListItem } from '@mui/material';\nimport { ChevronDown as ChevronDownIcon } from '../../icons/chevron-down';\nimport { ChevronRight as ChevronRightIcon } from '../../icons/chevron-right';\nimport { openLink } from '../../helper/openLink';\nimport electron from 'electron';\nconst ipcRenderer = electron.ipcRenderer || false;\n\nexport const DashboardSidebarItem = (props) => {\n  const {\n    active,\n    children,\n    chip,\n    depth,\n    icon,\n    info,\n    open: openProp,\n    path,\n    title,\n    onClose,\n    ...other\n  } = props;\n  const [open, setOpen] = useState(openProp);\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  let paddingLeft = 24;\n\n  if (depth > 0) {\n    paddingLeft = 32 + 8 * depth;\n  }\n\n  // Branch\n  if (children) {\n    return (\n      <ListItem\n        disableGutters\n        sx={{\n          display: 'block',\n          mb: 0.5,\n          py: 0,\n        }}\n        {...other}\n      >\n        <Button\n          endIcon={\n            !open ? (\n              <ChevronRightIcon fontSize='small' />\n            ) : (\n              <ChevronDownIcon fontSize='small' />\n            )\n          }\n          disableRipple\n          onClick={handleToggle}\n          startIcon={icon}\n          sx={{\n            color: active ? 'secondary.main' : 'neutral.300',\n            justifyContent: 'flex-start',\n            pl: `${paddingLeft}px`,\n            pr: 3,\n            textAlign: 'left',\n            textTransform: 'none',\n            width: '100%',\n            '&:hover': {\n              backgroundColor: 'rgba(255,255,255, 0.08)',\n            },\n            '& .MuiButton-startIcon': {\n              color: active ? 'secondary.main' : 'neutral.400',\n            },\n            '& .MuiButton-endIcon': {\n              color: 'neutral.400',\n            },\n          }}\n        >\n          <Box sx={{ flexGrow: 1 }}>{title}</Box>\n          {info}\n        </Button>\n        <Collapse in={open} sx={{ mt: 0.5 }}>\n          {children}\n        </Collapse>\n      </ListItem>\n    );\n  }\n\n  // Leaf\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        mb: 0.5,\n        py: 0,\n      }}\n    >\n      {!ipcRenderer && (\n        <NextLink href={path} onClick={onClose} passHref>\n          <Button\n            onClick={onClose}\n            component='a'\n            startIcon={icon}\n            endIcon={chip}\n            disableRipple\n            sx={{\n              backgroundColor: active && 'rgba(255,255,255, 0.08)',\n              borderRadius: 1,\n              color: active ? 'secondary.main' : 'neutral.300',\n              fontWeight: active && 'fontWeightBold',\n              justifyContent: 'flex-start',\n              pl: `${paddingLeft}px`,\n              pr: 3,\n              textAlign: 'left',\n              textTransform: 'none',\n              width: '100%',\n              '& .MuiButton-startIcon': {\n                color: active ? 'secondary.main' : 'neutral.400',\n              },\n              '&:hover': {\n                backgroundColor: 'rgba(255,255,255, 0.08)',\n              },\n            }}\n          >\n            <Box sx={{ flexGrow: 1 }}>{title}</Box>\n            {info}\n          </Button>\n        </NextLink>\n      )}\n      {ipcRenderer && (\n        <Button\n          onClick={() => {\n            openLink(title, path, '_blank', 'top=500,left=200,frame=false');\n            onClose();\n          }}\n          component='a'\n          startIcon={icon}\n          endIcon={chip}\n          disableRipple\n          sx={{\n            backgroundColor: active && 'rgba(255,255,255, 0.08)',\n            borderRadius: 1,\n            color: active ? 'secondary.main' : 'neutral.300',\n            fontWeight: active && 'fontWeightBold',\n            justifyContent: 'flex-start',\n            pl: `${paddingLeft}px`,\n            pr: 3,\n            textAlign: 'left',\n            textTransform: 'none',\n            width: '100%',\n            '& .MuiButton-startIcon': {\n              color: active ? 'secondary.main' : 'neutral.400',\n            },\n            '&:hover': {\n              backgroundColor: 'rgba(255,255,255, 0.08)',\n            },\n          }}\n        >\n          <Box sx={{ flexGrow: 1 }}>{title}</Box>\n          {info}\n        </Button>\n      )}\n    </ListItem>\n  );\n};\n\nDashboardSidebarItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  depth: PropTypes.number.isRequired,\n  icon: PropTypes.node,\n  info: PropTypes.node,\n  open: PropTypes.bool,\n  path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nDashboardSidebarItem.defaultProps = {\n  active: false,\n  open: false,\n};\n"]},"metadata":{},"sourceType":"module"}