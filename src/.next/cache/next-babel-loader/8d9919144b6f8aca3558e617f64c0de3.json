{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details-grid.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useDispatch } from \"../../../store\";\nimport { deliveryDetailsTable } from \"../../grids/grid-columns\";\nimport { orderApi } from \"../../../api/order-api\";\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var order = _ref.order,\n      deliveries = _ref.deliveries;\n  var dispatch = useDispatch();\n\n  var getOrderUnit = function getOrderUnit(order) {\n    switch (JSON.parse(order.saleType).value) {\n      case \"quantity\":\n        return \"\".concat(JSON.parse(order.saleType).unit);\n        break;\n\n      case \"fixed\":\n        return \"(Fixed)\";\n        break;\n\n      case \"time\":\n        return \"\".concat(JSON.parse(order.saleType).unit);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var processRowUpdate = React.useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newRow) {\n      var order, newDeliveries, newOrder, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Make the HTTP request to save in the backend\n              order = newRow.order;\n              delete newRow.order;\n              newDeliveries = JSON.parse(order.deliveries).map(function (del) {\n                if (del.id !== newRow.id) {\n                  return del;\n                } else {\n                  return newRow;\n                }\n              });\n              newOrder = _objectSpread(_objectSpread({}, order), {}, {\n                deliveries: JSON.stringify(newDeliveries)\n              });\n              console.log(newOrder);\n              _context.next = 7;\n              return orderApi.updateOrder(newOrder, dispatch);\n\n            case 7:\n              response = _context.sent;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  deliveries.map(function (del) {\n    del.order = order;\n    del.unit = getOrderUnit(order);\n    return del;\n  });\n  return /*#__PURE__*/_jsxDEV(DataGrid, {\n    rows: deliveries,\n    autoHeight: true,\n    columns: deliveryDetailsTable,\n    disableSelectionOnClick: true,\n    experimentalFeatures: {\n      newEditingApi: true\n    },\n    processRowUpdate: processRowUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Table, \"6UOfhBpef+0HOc/ZyCaDgEWUMgE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details-grid.js"],"names":["React","DataGrid","useDispatch","deliveryDetailsTable","orderApi","Table","order","deliveries","dispatch","getOrderUnit","JSON","parse","saleType","value","unit","processRowUpdate","useCallback","newRow","newDeliveries","map","del","id","newOrder","stringify","console","log","updateOrder","response","newEditingApi"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA2B;AAAA;;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACvC,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACH,KAAD,EAAW;AAC9B,YAAQI,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,QAAjB,EAA2BC,KAAnC;AACE,WAAK,UAAL;AACE,yBAAUH,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,QAAjB,EAA2BE,IAArC;AACA;;AACF,WAAK,OAAL;AACE;AACA;;AACF,WAAK,MAAL;AACE,yBAAUJ,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,QAAjB,EAA2BE,IAArC;AACA;;AACF;AACE;AAXJ;AAaD,GAdD;;AAgBA,MAAMC,gBAAgB,GAAGf,KAAK,CAACgB,WAAN;AAAA,yEAAkB,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACzC;AACIX,cAAAA,KAFqC,GAE7BW,MAAM,CAACX,KAFsB;AAGzC,qBAAOW,MAAM,CAACX,KAAd;AAEIY,cAAAA,aALqC,GAKrBR,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACC,UAAjB,EAA6BY,GAA7B,CAAiC,UAACC,GAAD,EAAS;AAC5D,oBAAIA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACI,EAAtB,EAA0B;AACxB,yBAAOD,GAAP;AACD,iBAFD,MAEO;AACL,yBAAOH,MAAP;AACD;AACF,eANmB,CALqB;AAarCK,cAAAA,QAbqC,mCAarBhB,KAbqB;AAadC,gBAAAA,UAAU,EAAEG,IAAI,CAACa,SAAL,CAAeL,aAAf;AAbE;AAezCM,cAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAfyC;AAAA,qBAiBlBlB,QAAQ,CAACsB,WAAT,CAAqBJ,QAArB,EAA+Bd,QAA/B,CAjBkB;;AAAA;AAiBnCmB,cAAAA,QAjBmC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAAA;AAAA;AAAA;AAAA,OAmBtB,EAnBsB,CAAzB;AAqBApB,EAAAA,UAAU,CAACY,GAAX,CAAe,UAACC,GAAD,EAAS;AACtBA,IAAAA,GAAG,CAACd,KAAJ,GAAYA,KAAZ;AACAc,IAAAA,GAAG,CAACN,IAAJ,GAAWL,YAAY,CAACH,KAAD,CAAvB;AACA,WAAOc,GAAP;AACD,GAJD;AAKA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAEb,UADR;AAEE,IAAA,UAAU,EAAE,IAFd;AAGE,IAAA,OAAO,EAAEJ,oBAHX;AAIE,IAAA,uBAAuB,MAJzB;AAKE,IAAA,oBAAoB,EAAE;AAAEyB,MAAAA,aAAa,EAAE;AAAjB,KALxB;AAME,IAAA,gBAAgB,EAAEb;AANpB;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAvDD;;GAAMV,K;UACaH,W;;;KADbG,K;AAyDN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { useDispatch } from \"../../../store\";\nimport { deliveryDetailsTable } from \"../../grids/grid-columns\";\nimport { orderApi } from \"../../../api/order-api\";\n\nconst Table = ({ order, deliveries }) => {\n  const dispatch = useDispatch();\n\n  const getOrderUnit = (order) => {\n    switch (JSON.parse(order.saleType).value) {\n      case \"quantity\":\n        return `${JSON.parse(order.saleType).unit}`;\n        break;\n      case \"fixed\":\n        return `(Fixed)`;\n        break;\n      case \"time\":\n        return `${JSON.parse(order.saleType).unit}`;\n        break;\n      default:\n        break;\n    }\n  };\n\n  const processRowUpdate = React.useCallback(async (newRow) => {\n    // Make the HTTP request to save in the backend\n    let order = newRow.order;\n    delete newRow.order;\n\n    let newDeliveries = JSON.parse(order.deliveries).map((del) => {\n      if (del.id !== newRow.id) {\n        return del;\n      } else {\n        return newRow;\n      }\n    });\n\n    let newOrder = { ...order, deliveries: JSON.stringify(newDeliveries) };\n\n    console.log(newOrder);\n\n    const response = await orderApi.updateOrder(newOrder, dispatch);\n    // return response;\n  }, []);\n\n  deliveries.map((del) => {\n    del.order = order;\n    del.unit = getOrderUnit(order);\n    return del;\n  });\n  return (\n    <DataGrid\n      rows={deliveries}\n      autoHeight={true}\n      columns={deliveryDetailsTable}\n      disableSelectionOnClick\n      experimentalFeatures={{ newEditingApi: true }}\n      processRowUpdate={processRowUpdate}\n    />\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}