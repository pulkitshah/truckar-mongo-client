{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { API } from \"aws-amplify\";\nimport { branchesByUser } from \"../graphql/queries\";\nimport { createBranch as _createBranch } from \"../graphql/mutations\";\nvar now = new Date();\n\nvar BranchApi = /*#__PURE__*/function () {\n  function BranchApi() {\n    _classCallCheck(this, BranchApi);\n  }\n\n  _createClass(BranchApi, [{\n    key: \"getBranchesByUser\",\n    value: function () {\n      var _getBranchesByUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var branchesDB;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.graphql({\n                  query: branchesByUser,\n                  variables: {\n                    user: user.id.toString()\n                  }\n                });\n\n              case 2:\n                branchesDB = _context.sent;\n                return _context.abrupt(\"return\", branchesDB);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getBranchesByUser(_x) {\n        return _getBranchesByUser.apply(this, arguments);\n      }\n\n      return getBranchesByUser;\n    }()\n  }, {\n    key: \"createBranch\",\n    value: function () {\n      var _createBranch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newBranch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return API.graphql({\n                  query: _createBranch,\n                  variables: {\n                    input: newBranch\n                  },\n                  authMode: \"AMAZON_COGNITO_USER_POOLS\"\n                });\n\n              case 2:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function createBranch(_x2) {\n        return _createBranch2.apply(this, arguments);\n      }\n\n      return createBranch;\n    }()\n  }]);\n\n  return BranchApi;\n}();\n\nexport var branchApi = new BranchApi();","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/api/branch-api.js"],"names":["API","branchesByUser","createBranch","now","Date","BranchApi","user","graphql","query","variables","id","toString","branchesDB","newBranch","input","authMode","response","branchApi"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,YAAY,IAAZA,aAAT,QAA6B,sBAA7B;AAEA,IAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;;IAEMC,S;;;;;;;;yGACoBC,I;;;;;;;uBACGN,GAAG,CAACO,OAAJ,CAAY;AACnCC,kBAAAA,KAAK,EAAEP,cAD4B;AAEnCQ,kBAAAA,SAAS,EAAE;AAAEH,oBAAAA,IAAI,EAAEA,IAAI,CAACI,EAAL,CAAQC,QAAR;AAAR;AAFwB,iBAAZ,C;;;AAAnBC,gBAAAA,U;iDAICA,U;;;;;;;;;;;;;;;;;;;sGAGUC,S;;;;;;;uBACMb,GAAG,CAACO,OAAJ,CAAY;AACjCC,kBAAAA,KAAK,EAAEN,aAD0B;AAEjCO,kBAAAA,SAAS,EAAE;AAAEK,oBAAAA,KAAK,EAAED;AAAT,mBAFsB;AAGjCE,kBAAAA,QAAQ,EAAE;AAHuB,iBAAZ,C;;;AAAjBC,gBAAAA,Q;kDAKCA,Q;;;;;;;;;;;;;;;;;;;;;AAIX,OAAO,IAAMC,SAAS,GAAG,IAAIZ,SAAJ,EAAlB","sourcesContent":["import { API } from \"aws-amplify\";\nimport { branchesByUser } from \"../graphql/queries\";\nimport { createBranch } from \"../graphql/mutations\";\n\nconst now = new Date();\n\nclass BranchApi {\n  async getBranchesByUser(user) {\n    const branchesDB = await API.graphql({\n      query: branchesByUser,\n      variables: { user: user.id.toString() },\n    });\n    return branchesDB;\n  }\n\n  async createBranch(newBranch) {\n    const response = await API.graphql({\n      query: createBranch,\n      variables: { input: newBranch },\n      authMode: \"AMAZON_COGNITO_USER_POOLS\",\n    });\n    return response;\n  }\n}\n\nexport const branchApi = new BranchApi();\n"]},"metadata":{},"sourceType":"module"}