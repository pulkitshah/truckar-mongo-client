{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { API } from \"aws-amplify\";\nimport { organisationsByUser } from \"../graphql/queries\";\nimport { createOrganisation as _createOrganisation } from \"../graphql/mutations\";\nvar now = new Date();\n\nvar OrganisationApi = /*#__PURE__*/function () {\n  function OrganisationApi() {\n    _classCallCheck(this, OrganisationApi);\n  }\n\n  _createClass(OrganisationApi, [{\n    key: \"getOrganisationesByUser\",\n    value: function () {\n      var _getOrganisationesByUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var organisationesDB;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return API.graphql({\n                  query: organisationsByUser,\n                  variables: {\n                    user: user.id.toString()\n                  }\n                });\n\n              case 2:\n                organisationesDB = _context.sent;\n                return _context.abrupt(\"return\", organisationesDB);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getOrganisationesByUser(_x) {\n        return _getOrganisationesByUser.apply(this, arguments);\n      }\n\n      return getOrganisationesByUser;\n    }()\n  }, {\n    key: \"createOrganisation\",\n    value: function () {\n      var _createOrganisation2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(newOrganisation) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return API.graphql({\n                  query: _createOrganisation,\n                  variables: {\n                    input: newOrganisation\n                  },\n                  authMode: \"AMAZON_COGNITO_USER_POOLS\"\n                });\n\n              case 2:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function createOrganisation(_x2) {\n        return _createOrganisation2.apply(this, arguments);\n      }\n\n      return createOrganisation;\n    }()\n  }]);\n\n  return OrganisationApi;\n}();\n\nexport var organisationApi = new OrganisationApi();","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/api/organisation-api.js"],"names":["API","organisationsByUser","createOrganisation","now","Date","OrganisationApi","user","graphql","query","variables","id","toString","organisationesDB","newOrganisation","input","authMode","response","organisationApi"],"mappings":";;;;AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,kBAAkB,IAAlBA,mBAAT,QAAmC,sBAAnC;AAEA,IAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;;IAEMC,e;;;;;;;;+GAC0BC,I;;;;;;;uBACGN,GAAG,CAACO,OAAJ,CAAY;AACzCC,kBAAAA,KAAK,EAAEP,mBADkC;AAEzCQ,kBAAAA,SAAS,EAAE;AAAEH,oBAAAA,IAAI,EAAEA,IAAI,CAACI,EAAL,CAAQC,QAAR;AAAR;AAF8B,iBAAZ,C;;;AAAzBC,gBAAAA,gB;iDAICA,gB;;;;;;;;;;;;;;;;;;;4GAGgBC,e;;;;;;;uBACAb,GAAG,CAACO,OAAJ,CAAY;AACjCC,kBAAAA,KAAK,EAAEN,mBAD0B;AAEjCO,kBAAAA,SAAS,EAAE;AAAEK,oBAAAA,KAAK,EAAED;AAAT,mBAFsB;AAGjCE,kBAAAA,QAAQ,EAAE;AAHuB,iBAAZ,C;;;AAAjBC,gBAAAA,Q;kDAKCA,Q;;;;;;;;;;;;;;;;;;;;;AAIX,OAAO,IAAMC,eAAe,GAAG,IAAIZ,eAAJ,EAAxB","sourcesContent":["import { API } from \"aws-amplify\";\nimport { organisationsByUser } from \"../graphql/queries\";\nimport { createOrganisation } from \"../graphql/mutations\";\n\nconst now = new Date();\n\nclass OrganisationApi {\n  async getOrganisationesByUser(user) {\n    const organisationesDB = await API.graphql({\n      query: organisationsByUser,\n      variables: { user: user.id.toString() },\n    });\n    return organisationesDB;\n  }\n\n  async createOrganisation(newOrganisation) {\n    const response = await API.graphql({\n      query: createOrganisation,\n      variables: { input: newOrganisation },\n      authMode: \"AMAZON_COGNITO_USER_POOLS\",\n    });\n    return response;\n  }\n}\n\nexport const organisationApi = new OrganisationApi();\n"]},"metadata":{},"sourceType":"module"}