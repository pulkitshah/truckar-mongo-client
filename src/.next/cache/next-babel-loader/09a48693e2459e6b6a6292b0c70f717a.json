{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\nimport { Box, Button, Card, CardContent, Grid, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport DeliveryDetails from \"./delivery-details\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nimport GoogleMaps from \"./google-maps\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { useDispatch } from \"../../../store\";\nexport var OrderCreateForm = function OrderCreateForm(props) {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState(null),\n      selectedVehicle = _useState[0],\n      setSelectedVehicle = _useState[1];\n\n  var _useState2 = useState(),\n      driver = _useState2[0],\n      setDriver = _useState2[1];\n\n  var _useState3 = useState({\n    waypoints: []\n  }),\n      addresses = _useState3[0],\n      setAddresses = _useState3[1];\n\n  var _React$useState = React.useState(\"quantity\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      saleType = _React$useState2[0],\n      setSaleType = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"quantity\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      purchaseType = _React$useState4[0],\n      setPurchaseType = _React$useState4[1];\n\n  var saleTypes = [{\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  var purchaseTypes = [{\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  var validationShape = {// orderNo: Yup.number()\n    //   .required(\"Order No is required\")\n    //   .test(\n    //     \"Unique Name\",\n    //     \"Order No already exists\", // <- key, message\n    //     async function (value) {\n    //       try {\n    //         console.log(value);\n    //         const response = await orderApi.validateDuplicateOrderNo(\n    //           value,\n    //           user\n    //         );\n    //         // console.log(response);\n    //         return response;\n    //       } catch (error) {\n    //         console.log(error);\n    //       }\n    //     }\n    //   ),\n    // customer: Yup.object().nullable().required(\"Customer is required\"),\n    // vehicle: Yup.lazy((value) => {\n    //   switch (typeof value) {\n    //     case \"object\":\n    //       return Yup.object().nullable().required(\"Vehicle is required\");\n    //     case \"string\":\n    //       return Yup.string().required(\"Vehicle is required\");\n    //     default:\n    //       return Yup.string().required(\"Vehicle is required\");\n    //   }\n    // }),\n    // saleType: Yup.string().required(\"Sale is required\"),\n    // saleRate: Yup.string().required(\"Sale Rate is required\"),\n  };\n\n  if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {} else {// validationShape.transporter = Yup.object().required(\n    //   \"Transporter is required\"\n    // );\n    // validationShape.purchaseType = Yup.string().required(\n    //   \"Purchase is required\"\n    // );\n    // validationShape.purchaseRate = Yup.string().required(\n    //   \"Purchase Rate is required\"\n    // );\n  } // validationShape.deliveryDetails = Yup.array().of(\n  //   Yup.object().shape({\n  //     loading: Yup.object().required(\"Loading Point is Required\"), // these constraints take precedence\n  //     unloading: Yup.object().required(\"Unloading Point is Required\"), // these constraints take precedence\n  //   })\n  // );\n\n\n  var formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      saleType: saleType,\n      purchaseType: purchaseType,\n      deliveryDetails: [{\n        loading: \"\",\n        unloading: \"\"\n      }]\n    },\n    validationSchema: Yup.object().shape(validationShape),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var newOrder;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                console.log(values);\n                newOrder = {\n                  orderNo: parseInt(values.orderNo),\n                  saleDate: values.saleDate.format(),\n                  // customer: values.customer,\n                  customerId: values.customer.id,\n                  saleRate: values.saleRate,\n                  saleType: values.saleType,\n                  user: user.id,\n                  deliveries: JSON.stringify(values.deliveryDetails)\n                };\n\n                if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {\n                  // newOrder.vehicle = values.vehicle;\n                  newOrder.vehicleId = values.vehicle.id;\n                  newOrder.vehicleNumber = values.vehicle.vehicleNumber;\n\n                  if (values.driver) {\n                    // newOrder.driver = values.driver;\n                    newOrder.driverId = values.driver.id;\n                  }\n                } else {\n                  newOrder.vehicleNumber = values.vehicle; // newOrder.transporter = values.transporter;\n\n                  newOrder.transporterId = values.transporter.id;\n                  newOrder.purchaseRate = values.purchaseRate;\n                  newOrder.purchaseType = values.purchaseType;\n                  if (values.minimumPurchaseGuarantee) newOrder.minimumPurchaseGuarantee = values.minimumPurchaseGuarantee;\n                }\n\n                if (values.minimumSaleGuarantee) newOrder.minimumSaleGuarantee = values.minimumSaleGuarantee;\n                console.log(newOrder);\n                _context.next = 8;\n                return orderApi.createOrder(newOrder, dispatch);\n\n              case 8:\n                toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n\n                _context.next = 18;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  React.useEffect(function () {\n    setAddresses({\n      waypoints: _toConsumableArray(addresses.waypoints)\n    }); // Setting Origin\n\n    setAddresses(function (addresses) {\n      return _objectSpread(_objectSpread({}, addresses), {\n        origin: formik.values.deliveryDetails[0].loading.description\n      });\n    }); // Setting Destination\n\n    if (formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description) {\n      setAddresses(function (addresses) {\n        return _objectSpread(_objectSpread({}, addresses), {\n          destination: formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description\n        });\n      });\n    } // Setting waypoints\n\n\n    var waypoints = [];\n    formik.values.deliveryDetails.map(function (delivery) {\n      if (delivery.loading.description) {\n        waypoints.push({\n          location: delivery.loading.description\n        });\n      }\n\n      if (delivery.unloading.description) {\n        waypoints.push({\n          location: delivery.unloading.description\n        });\n      }\n    });\n    waypoints = waypoints.filter(function (waypoint) {\n      return waypoint.location !== formik.values.deliveryDetails[0].loading.description;\n    });\n    waypoints = waypoints.filter(function (waypoint) {\n      return waypoint.location !== formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description;\n    });\n    waypoints = _toConsumableArray(new Map(waypoints.map(function (item) {\n      return [item.location, item];\n    })).values());\n    setAddresses({\n      origin: formik.values.deliveryDetails[0].loading.description,\n      destination: formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1].unloading.description,\n      waypoints: waypoints\n    });\n  }, [formik.values.deliveryDetails]);\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: function onChange(event) {\n                    formik.setFieldValue(\"orderNo\", event.target.value);\n                  },\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: function onClick() {\n                    return setFieldTouched(\"end\");\n                  },\n                  onChange: function onChange(date) {\n                    return formik.setFieldValue(\"saleDate\", moment(date));\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                      fullWidth: true\n                    }, params), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"customer\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            sx: {\n              mb: 6\n            },\n            item: true,\n            md: 4,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mb: 3\n              },\n              variant: \"h6\",\n              children: \"Delivery details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(GoogleMaps, {\n              addresses: addresses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(DeliveryDetails, {\n              formik: formik\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Vehicle details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(VehicleAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: typeof selectedVehicle === \"object\" && selectedVehicle !== null ? /*#__PURE__*/_jsxDEV(DriverAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, _this) : selectedVehicle !== null && /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"transporter\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Sale details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleType && formik.errors.saleType),\n                  onBlur: formik.handleBlur,\n                  name: \"saleType\",\n                  label: \"Sale Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"saleType\",\n                  select: true,\n                  value: saleType,\n                  onChange: function onChange(event) {\n                    setSaleType(event.target.value);\n                    formik.setFieldValue(\"saleType\", event.target.value);\n                  },\n                  SelectProps: {\n                    \"native\": true\n                  },\n                  helperText: \"Please select sale type\",\n                  variant: \"outlined\",\n                  children: saleTypes.map(function (option) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 23\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleRate && formik.errors.saleRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.saleRate && formik.errors.saleRate,\n                  id: \"saleRate\",\n                  name: \"saleRate\",\n                  label: \"Sale Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, _this), saleType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.minimumSaleGuarantee && formik.errors.minimumSaleGuarantee),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.minimumSaleGuarantee && formik.errors.minimumSaleGuarantee,\n                  id: \"minimumSaleGuarantee\",\n                  name: \"minimumSaleGuarantee\",\n                  label: \"Min. Load Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, _this), !(typeof selectedVehicle === \"object\") && selectedVehicle !== null && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Purchase details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseType && formik.errors.purchaseType),\n                  onBlur: formik.handleBlur,\n                  name: \"purchaseType\",\n                  label: \"Purchase Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"purchaseType\",\n                  select: true,\n                  value: purchaseType,\n                  onChange: function onChange(event) {\n                    setPurchaseType(event.target.value);\n                    event.target.value;\n                    formik.setFieldValue(\"purchaseType\", event.target.value);\n                  },\n                  SelectProps: {\n                    \"native\": true\n                  },\n                  helperText: \"Please select purchase type\",\n                  variant: \"outlined\",\n                  children: purchaseTypes.map(function (option) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 25\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseRate && formik.errors.purchaseRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.purchaseRate && formik.errors.purchaseRate,\n                  id: \"purchaseRate\",\n                  name: \"purchaseRate\",\n                  label: \"Purchase Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, _this), purchaseType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.minimumPurchaseGuarantee && formik.errors.minimumPurchaseGuarantee),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.minimumPurchaseGuarantee && formik.errors.minimumPurchaseGuarantee,\n                  id: \"minimumPurchaseGuarantee\",\n                  name: \"minimumPurchaseGuarantee\",\n                  label: \"Min. Load Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrderCreateForm, \"ldHxZ8SlTSs/c8MzHgMAETMatOU=\", false, function () {\n  return [useRouter, useDispatch, useAuth, useFormik];\n});\n\n_c = OrderCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["React","useState","useRef","useMemo","useCallback","useRouter","toast","Yup","useFormik","moment","Box","Button","Card","CardContent","Grid","TextField","Typography","DatePicker","useAuth","DeliveryDetails","PartyAutocomplete","VehicleAutocomplete","DriverAutocomplete","GoogleMaps","orderApi","useDispatch","OrderCreateForm","props","router","dispatch","user","selectedVehicle","setSelectedVehicle","driver","setDriver","waypoints","addresses","setAddresses","saleType","setSaleType","purchaseType","setPurchaseType","saleTypes","value","label","purchaseTypes","validationShape","formik","initialValues","saleDate","deliveryDetails","loading","unloading","validationSchema","object","shape","onSubmit","values","helpers","console","log","newOrder","orderNo","parseInt","format","customerId","customer","id","saleRate","deliveries","JSON","stringify","vehicleId","vehicle","vehicleNumber","driverId","transporterId","transporter","purchaseRate","minimumPurchaseGuarantee","minimumSaleGuarantee","createOrder","success","error","setStatus","setErrors","submit","message","setSubmitting","useEffect","origin","description","length","destination","map","delivery","push","location","filter","waypoint","Map","item","handleSubmit","Boolean","touched","errors","handleBlur","event","setFieldValue","target","setFieldTouched","date","params","mt","mb","shrink","option","handleChange","display","flexWrap","justifyContent","mx","m","mr"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport moment from \"moment\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport DeliveryDetails from \"./delivery-details\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nimport GoogleMaps from \"./google-maps\";\nimport { orderApi } from \"../../../api/order-api\";\nimport { useDispatch } from \"../../../store\";\n\nexport const OrderCreateForm = (props) => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n  const [driver, setDriver] = useState();\n  const [addresses, setAddresses] = useState({ waypoints: [] });\n\n  const [saleType, setSaleType] = React.useState(\"quantity\");\n  const [purchaseType, setPurchaseType] = React.useState(\"quantity\");\n\n  const saleTypes = [\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  const purchaseTypes = [\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  let validationShape = {\n    // orderNo: Yup.number()\n    //   .required(\"Order No is required\")\n    //   .test(\n    //     \"Unique Name\",\n    //     \"Order No already exists\", // <- key, message\n    //     async function (value) {\n    //       try {\n    //         console.log(value);\n    //         const response = await orderApi.validateDuplicateOrderNo(\n    //           value,\n    //           user\n    //         );\n    //         // console.log(response);\n    //         return response;\n    //       } catch (error) {\n    //         console.log(error);\n    //       }\n    //     }\n    //   ),\n    // customer: Yup.object().nullable().required(\"Customer is required\"),\n    // vehicle: Yup.lazy((value) => {\n    //   switch (typeof value) {\n    //     case \"object\":\n    //       return Yup.object().nullable().required(\"Vehicle is required\");\n    //     case \"string\":\n    //       return Yup.string().required(\"Vehicle is required\");\n    //     default:\n    //       return Yup.string().required(\"Vehicle is required\");\n    //   }\n    // }),\n    // saleType: Yup.string().required(\"Sale is required\"),\n    // saleRate: Yup.string().required(\"Sale Rate is required\"),\n  };\n\n  if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {\n  } else {\n    // validationShape.transporter = Yup.object().required(\n    //   \"Transporter is required\"\n    // );\n    // validationShape.purchaseType = Yup.string().required(\n    //   \"Purchase is required\"\n    // );\n    // validationShape.purchaseRate = Yup.string().required(\n    //   \"Purchase Rate is required\"\n    // );\n  }\n\n  // validationShape.deliveryDetails = Yup.array().of(\n  //   Yup.object().shape({\n  //     loading: Yup.object().required(\"Loading Point is Required\"), // these constraints take precedence\n  //     unloading: Yup.object().required(\"Unloading Point is Required\"), // these constraints take precedence\n  //   })\n  // );\n\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      saleType: saleType,\n      purchaseType: purchaseType,\n      deliveryDetails: [\n        {\n          loading: \"\",\n          unloading: \"\",\n        },\n      ],\n    },\n    validationSchema: Yup.object().shape(validationShape),\n    onSubmit: async (values, helpers) => {\n      try {\n        console.log(values);\n\n        const newOrder = {\n          orderNo: parseInt(values.orderNo),\n          saleDate: values.saleDate.format(),\n          // customer: values.customer,\n          customerId: values.customer.id,\n          saleRate: values.saleRate,\n          saleType: values.saleType,\n          user: user.id,\n          deliveries: JSON.stringify(values.deliveryDetails),\n        };\n\n        if (typeof selectedVehicle === \"object\" && selectedVehicle !== null) {\n          // newOrder.vehicle = values.vehicle;\n          newOrder.vehicleId = values.vehicle.id;\n          newOrder.vehicleNumber = values.vehicle.vehicleNumber;\n          if (values.driver) {\n            // newOrder.driver = values.driver;\n            newOrder.driverId = values.driver.id;\n          }\n        } else {\n          newOrder.vehicleNumber = values.vehicle;\n          // newOrder.transporter = values.transporter;\n          newOrder.transporterId = values.transporter.id;\n          newOrder.purchaseRate = values.purchaseRate;\n          newOrder.purchaseType = values.purchaseType;\n          if (values.minimumPurchaseGuarantee)\n            newOrder.minimumPurchaseGuarantee = values.minimumPurchaseGuarantee;\n        }\n\n        if (values.minimumSaleGuarantee)\n          newOrder.minimumSaleGuarantee = values.minimumSaleGuarantee;\n\n        console.log(newOrder);\n        await orderApi.createOrder(newOrder, dispatch);\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    setAddresses({ waypoints: [...addresses.waypoints] });\n\n    // Setting Origin\n    setAddresses((addresses) => ({\n      ...addresses,\n      ...{\n        origin: formik.values.deliveryDetails[0].loading.description,\n      },\n    }));\n\n    // Setting Destination\n    if (\n      formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1]\n        .unloading.description\n    ) {\n      setAddresses((addresses) => ({\n        ...addresses,\n        ...{\n          destination:\n            formik.values.deliveryDetails[\n              formik.values.deliveryDetails.length - 1\n            ].unloading.description,\n        },\n      }));\n    }\n\n    // Setting waypoints\n\n    let waypoints = [];\n\n    formik.values.deliveryDetails.map((delivery) => {\n      if (delivery.loading.description) {\n        waypoints.push({\n          location: delivery.loading.description,\n        });\n      }\n\n      if (delivery.unloading.description) {\n        waypoints.push({\n          location: delivery.unloading.description,\n        });\n      }\n    });\n\n    waypoints = waypoints.filter(\n      (waypoint) =>\n        waypoint.location !==\n        formik.values.deliveryDetails[0].loading.description\n    );\n    waypoints = waypoints.filter(\n      (waypoint) =>\n        waypoint.location !==\n        formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1]\n          .unloading.description\n    );\n\n    waypoints = [\n      ...new Map(waypoints.map((item) => [item.location, item])).values(),\n    ];\n\n    setAddresses({\n      origin: formik.values.deliveryDetails[0].loading.description,\n      destination:\n        formik.values.deliveryDetails[formik.values.deliveryDetails.length - 1]\n          .unloading.description,\n      waypoints: waypoints,\n    });\n  }, [formik.values.deliveryDetails]);\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(`orderNo`, event.target.value);\n                    }}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <PartyAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    type=\"customer\"\n                    user={user}\n                    formik={formik}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid sx={{ mb: 6 }} item md={4} xs={12}>\n              <Typography sx={{ mb: 3 }} variant=\"h6\">\n                Delivery details\n              </Typography>\n              <GoogleMaps addresses={addresses} />\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <DeliveryDetails formik={formik} />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Vehicle details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <VehicleAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    setSelectedVehicle={setSelectedVehicle}\n                    setDriver={setDriver}\n                    user={user}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  {typeof selectedVehicle === \"object\" &&\n                  selectedVehicle !== null ? (\n                    <DriverAutocomplete\n                      errors={formik.errors}\n                      touched={formik.touched}\n                      setFieldValue={formik.setFieldValue}\n                      handleBlur={formik.handleBlur}\n                      setSelectedVehicle={setSelectedVehicle}\n                      setDriver={setDriver}\n                      user={user}\n                      values={formik.values}\n                    />\n                  ) : (\n                    selectedVehicle !== null && (\n                      <PartyAutocomplete\n                        errors={formik.errors}\n                        touched={formik.touched}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        type=\"transporter\"\n                        user={user}\n                        formik={formik}\n                      />\n                    )\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Sale details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleType && formik.errors.saleType\n                    )}\n                    onBlur={formik.handleBlur}\n                    name=\"saleType\"\n                    label=\"Sale Type\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    id=\"saleType\"\n                    select\n                    value={saleType}\n                    onChange={(event) => {\n                      setSaleType(event.target.value);\n                      formik.setFieldValue(\"saleType\", event.target.value);\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                    helperText=\"Please select sale type\"\n                    variant=\"outlined\"\n                  >\n                    {saleTypes.map((option) => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleRate && formik.errors.saleRate\n                    )}\n                    variant=\"outlined\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    helperText={\n                      formik.touched.saleRate && formik.errors.saleRate\n                    }\n                    id=\"saleRate\"\n                    name=\"saleRate\"\n                    label=\"Sale Rate\"\n                    fullWidth\n                  />\n                </Grid>\n                {saleType === \"quantity\" && (\n                  <Grid item md={4} xs={6}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.minimumSaleGuarantee &&\n                          formik.errors.minimumSaleGuarantee\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.minimumSaleGuarantee &&\n                        formik.errors.minimumSaleGuarantee\n                      }\n                      id=\"minimumSaleGuarantee\"\n                      name=\"minimumSaleGuarantee\"\n                      label=\"Min. Load Guarantee\"\n                      fullWidth\n                    />\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      {!(typeof selectedVehicle === \"object\") && selectedVehicle !== null && (\n        <Card sx={{ mt: 3 }}>\n          <CardContent>\n            <Grid container spacing={3}>\n              <Grid item md={4} xs={12}>\n                <Typography variant=\"h6\">Purchase details</Typography>\n              </Grid>\n              <Grid item md={8} xs={12}>\n                <Grid container spacing={3}>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseType &&\n                          formik.errors.purchaseType\n                      )}\n                      onBlur={formik.handleBlur}\n                      name=\"purchaseType\"\n                      label=\"Purchase Type\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      id=\"purchaseType\"\n                      select\n                      value={purchaseType}\n                      onChange={(event) => {\n                        setPurchaseType(event.target.value);\n                        event.target.value;\n                        formik.setFieldValue(\n                          \"purchaseType\",\n                          event.target.value\n                        );\n                      }}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      helperText=\"Please select purchase type\"\n                      variant=\"outlined\"\n                    >\n                      {purchaseTypes.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseRate &&\n                          formik.errors.purchaseRate\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.purchaseRate &&\n                        formik.errors.purchaseRate\n                      }\n                      id=\"purchaseRate\"\n                      name=\"purchaseRate\"\n                      label=\"Purchase Rate\"\n                      fullWidth\n                    />\n                  </Grid>\n                  {purchaseType === \"quantity\" && (\n                    <Grid item md={4} xs={6}>\n                      <TextField\n                        error={Boolean(\n                          formik.touched.minimumPurchaseGuarantee &&\n                            formik.errors.minimumPurchaseGuarantee\n                        )}\n                        variant=\"outlined\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        helperText={\n                          formik.touched.minimumPurchaseGuarantee &&\n                          formik.errors.minimumPurchaseGuarantee\n                        }\n                        id=\"minimumPurchaseGuarantee\"\n                        name=\"minimumPurchaseGuarantee\"\n                        label=\"Min. Load Guarantee\"\n                        fullWidth\n                      />\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}