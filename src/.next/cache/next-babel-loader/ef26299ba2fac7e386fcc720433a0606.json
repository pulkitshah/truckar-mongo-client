{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-items.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport { Box, Card, CardHeader, Divider, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography } from '@mui/material';\nimport { Scrollbar } from '../../scrollbar';\nexport var OrderItems = function OrderItems(props) {\n  var orderItems = props.orderItems,\n      other = _objectWithoutProperties(props, [\"orderItems\"]);\n\n  return /*#__PURE__*/_jsxDEV(Card, _objectSpread(_objectSpread({}, other), {}, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Order items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 700\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Billing Cycle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: orderItems.map(function (item) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: [item.name, ' ', \"x\", ' ', item.quantity]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: item.billingCycle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: numeral(item.unitAmount).format(\"\".concat(item.currency, \"0,0.00\"))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, _this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: orderItems.length,\n      onPageChange: function onPageChange() {},\n      onRowsPerPageChange: function onRowsPerPageChange() {},\n      page: 0,\n      rowsPerPage: 5,\n      rowsPerPageOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n_c = OrderItems;\nOrderItems.propTypes = {\n  orderItems: PropTypes.array.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderItems\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-items.js"],"names":["PropTypes","numeral","Box","Card","CardHeader","Divider","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","Scrollbar","OrderItems","props","orderItems","other","minWidth","map","item","name","quantity","billingCycle","unitAmount","format","currency","id","length","propTypes","array","isRequired"],"mappings":";;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,SARF,EASEC,eATF,EAUEC,QAVF,EAWEC,UAXF,QAYO,eAZP;AAaA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA,MAC3BC,UAD2B,GACFD,KADE,CAC3BC,UAD2B;AAAA,MACZC,KADY,4BACFF,KADE;;AAGnC,sBACE,QAAC,IAAD,kCAAUE,KAAV;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAT;AAAA,+BACE,QAAC,KAAD;AAAA,kCACE,QAAC,SAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,eAOE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAcE,QAAC,SAAD;AAAA,sBACGF,UAAU,CAACG,GAAX,CAAe,UAACC,IAAD;AAAA,kCACd,QAAC,QAAD;AAAA,wCACE,QAAC,SAAD;AAAA,yCACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,WAApB;AAAA,+BACGA,IAAI,CAACC,IADR,EAEG,GAFH,OAIG,GAJH,EAKGD,IAAI,CAACE,QALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBADF,eAUE,QAAC,SAAD;AAAA,4BACGF,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,yBAVF,eAaE,QAAC,SAAD;AAAA,4BACGtB,OAAO,CAACmB,IAAI,CAACI,UAAN,CAAP,CAAyBC,MAAzB,WAAmCL,IAAI,CAACM,QAAxC;AADH;AAAA;AAAA;AAAA;AAAA,yBAbF;AAAA,iBAAeN,IAAI,CAACO,EAApB;AAAA;AAAA;AAAA;AAAA,uBADc;AAAA,aAAf;AADH;AAAA;AAAA;AAAA;AAAA,mBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAHF,eA2CE,QAAC,eAAD;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,KAAK,EAAEX,UAAU,CAACY,MAFpB;AAGE,MAAA,YAAY,EAAE,wBAAM,CAAG,CAHzB;AAIE,MAAA,mBAAmB,EAAE,+BAAM,CAAG,CAJhC;AAKE,MAAA,IAAI,EAAE,CALR;AAME,MAAA,WAAW,EAAE,CANf;AAOE,MAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;AAPtB;AAAA;AAAA;AAAA;AAAA,aA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAuDD,CA1DM;KAAMd,U;AA4DbA,UAAU,CAACe,SAAX,GAAuB;AACrBb,EAAAA,UAAU,EAAEhB,SAAS,CAAC8B,KAAV,CAAgBC;AADP,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@mui/material';\nimport { Scrollbar } from '../../scrollbar';\n\nexport const OrderItems = (props) => {\n  const { orderItems, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell>\n                  Billing Cycle\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orderItems.map((item) => (\n                <TableRow key={item.id}>\n                  <TableCell>\n                    <Typography variant=\"subtitle2\">\n                      {item.name}\n                      {' '}\n                      x\n                      {' '}\n                      {item.quantity}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    {item.billingCycle}\n                  </TableCell>\n                  <TableCell>\n                    {numeral(item.unitAmount).format(`${item.currency}0,0.00`)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={orderItems.length}\n        onPageChange={() => { }}\n        onRowsPerPageChange={() => { }}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  orderItems: PropTypes.array.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}