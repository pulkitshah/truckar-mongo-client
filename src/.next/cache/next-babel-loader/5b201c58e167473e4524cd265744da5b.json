{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/PartyAutocomplete.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Box, Button, Card, CardContent, Dialog, DialogTitle, Divider, Grid, Switch, TextField, Typography } from \"@mui/material\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { orderApi } from \"../../../api/order-api\";\nvar filter = createFilterOptions();\n\nvar FreeSoloCreateOptionDialog = function FreeSoloCreateOptionDialog(_ref) {\n  _s();\n\n  var className = _ref.className,\n      touched = _ref.touched,\n      setFieldValue = _ref.setFieldValue,\n      errors = _ref.errors,\n      handleBlur = _ref.handleBlur,\n      type = _ref.type,\n      values = _ref.values,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"touched\", \"setFieldValue\", \"errors\", \"handleBlur\", \"type\", \"values\"]);\n\n  var _React$useState = React.useState(values && values[type]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      toggleOpen = _React$useState4[1];\n\n  var _useState = useState([]),\n      parties = _useState[0],\n      setParties = _useState[1];\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var partiesDB;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return orderApi.getPartiesByUser(user);\n\n          case 3:\n            partiesDB = _context.sent;\n            setParties(partiesDB.data.partiesByUser.items);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n            if (!open) {\n              setParties([]);\n            }\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  })), [open]);\n\n  var handleClose = function handleClose() {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false\n    });\n    toggleOpen(false);\n  };\n\n  var _React$useState5 = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dialogValue = _React$useState6[0],\n      setDialogValue = _React$useState6[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setValue({\n                name: dialogValue.name,\n                transporter: dialogValue.transporter\n              });\n              _context2.prev = 2;\n              // NOTE: Make API request\n              console.log(value);\n              _context2.next = 6;\n              return axios.post(\"/api/parties/\", {\n                name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }),\n                transporter: dialogValue.transporter\n              });\n\n            case 6:\n              response = _context2.sent;\n              console.log(response.data);\n              setFieldValue(type, response.data);\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error(_context2.t0);\n\n            case 14:\n              handleClose();\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 11]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: function onChange(event, newValue) {\n        if (typeof newValue === \"string\") {\n          // timeout to avoid instant validation of the dialog's form.\n          setTimeout(function () {\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.replace(/\\w\\S*/g, function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n              }),\n              transporter: type !== \"customer\" ? true : false\n            });\n          });\n        } else if (newValue && newValue.inputValue) {\n          toggleOpen(true);\n          setDialogValue({\n            name: newValue.inputValue,\n            transporter: type !== \"customer\" ? true : false\n          });\n        } else {\n          setFieldValue(type, newValue);\n          setValue(newValue);\n        }\n      },\n      filterOptions: function filterOptions(options, params) {\n        var filtered = filter(options, params);\n\n        if (params.inputValue !== \"\") {\n          filtered.push({\n            inputValue: params.inputValue,\n            name: \"Add \\\"\".concat(params.inputValue, \"\\\"\")\n          });\n        }\n\n        return filtered;\n      },\n      id: type,\n      options: parties,\n      getOptionLabel: function getOptionLabel(option) {\n        // e.g value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }\n\n        if (option.inputValue) {\n          return option.inputValue.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }\n\n        return option.name.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n      },\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      renderOption: function renderOption(option) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [option.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, _this), option.mobile && \"(M) \".concat(option.mobile.replace(/ /g, \"\")), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, _this), option.location && \"Location - \".concat(option.location.structured_formatting.main_text), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, _this);\n      },\n      fullWidth: true,\n      freeSolo: true,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: type.charAt(0).toUpperCase() + type.slice(1),\n          error: Boolean(type === \"customer\" ? touched.customer && errors.customer : touched.transporter && errors.transporter),\n          onBlur: handleBlur,\n          helperText: type === \"customer\" ? touched.customer && errors.customer : touched.transporter && errors.transporter,\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-name\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-name\",\n          children: \"Add a new party\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: dialogValue.name || \"\",\n            mobile: dialogValue.mobile || \"\",\n            location: dialogValue.location || \"\",\n            transporter: dialogValue.transporter || \"\",\n            submit: null\n          },\n          validationSchema: Yup.object().shape({\n            name: Yup.string().max(255).required(\"Name is required\"),\n            mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\").required(\"Mobile is required\")\n          }),\n          onSubmit: /*#__PURE__*/function () {\n            var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, _ref4) {\n              var resetForm, setErrors, setStatus, setSubmitting, response;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      resetForm = _ref4.resetForm, setErrors = _ref4.setErrors, setStatus = _ref4.setStatus, setSubmitting = _ref4.setSubmitting;\n                      _context3.prev = 1;\n                      // NOTE: Make API request\n                      console.log(values);\n                      _context3.next = 5;\n                      return axios.post(\"/api/parties/\", _objectSpread({\n                        name: values.name.replace(/\\w\\S*/g, function (txt) {\n                          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                        })\n                      }, values));\n\n                    case 5:\n                      response = _context3.sent;\n                      setFieldValue(type, response.data); // dispatch(updateParty(party, values));\n\n                      resetForm();\n                      setStatus({\n                        success: true\n                      });\n                      setSubmitting(false);\n                      handleClose();\n                      _context3.next = 19;\n                      break;\n\n                    case 13:\n                      _context3.prev = 13;\n                      _context3.t0 = _context3[\"catch\"](1);\n                      console.log(_context3.t0);\n                      setStatus({\n                        success: false\n                      });\n                      setErrors({\n                        submit: _context3.t0.message\n                      });\n                      setSubmitting(false);\n\n                    case 19:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, null, [[1, 13]]);\n            }));\n\n            return function (_x2, _x3) {\n              return _ref5.apply(this, arguments);\n            };\n          }(),\n          children: function children(_ref6) {\n            var errors = _ref6.errors,\n                handleBlur = _ref6.handleBlur,\n                handleChange = _ref6.handleChange,\n                handleSubmit = _ref6.handleSubmit,\n                isSubmitting = _ref6.isSubmitting,\n                setFieldValue = _ref6.setFieldValue,\n                touched = _ref6.touched,\n                values = _ref6.values;\n            return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n              onSubmit: handleSubmit\n            }, rest), {}, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.name && errors.name),\n                        fullWidth: true,\n                        helperText: touched.name && errors.name,\n                        label: \"Main Contact Name\",\n                        name: \"name\",\n                        onBlur: handleBlur,\n                        onChange: function onChange(event) {\n                          setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                          }));\n                        },\n                        required: true,\n                        value: values.name,\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.mobile && errors.mobile),\n                        fullWidth: true,\n                        helperText: touched.mobile && errors.mobile,\n                        label: \"Mobile\",\n                        name: \"mobile\",\n                        onBlur: handleBlur,\n                        onChange: function onChange(event) {\n                          setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                        },\n                        value: values.mobile,\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 281,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                        error: Boolean(touched.mobile && errors.mobile),\n                        name: \"location\",\n                        field: \"location\",\n                        setFieldValue: setFieldValue,\n                        handleBlur: handleBlur,\n                        values: values\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: \"textPrimary\",\n                        children: \"Party Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: \"Is this party a transporter?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: values.transporter,\n                        color: \"secondary\",\n                        edge: \"start\",\n                        name: \"transporter\",\n                        onChange: handleChange,\n                        value: values.transporter\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    mt: 2,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          type: \"submit\",\n                          disabled: isSubmitting,\n                          children: \"Create Party\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 328,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          onClick: handleClose,\n                          children: \"Cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 338,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, _this)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FreeSoloCreateOptionDialog, \"qYAQesq0acOlRYVLmWZCZaVssv8=\");\n\n_c = FreeSoloCreateOptionDialog;\nexport default FreeSoloCreateOptionDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeSoloCreateOptionDialog\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/PartyAutocomplete.js"],"names":["React","useState","useEffect","useCallback","clsx","Yup","Formik","Box","Button","Card","CardContent","Dialog","DialogTitle","Divider","Grid","Switch","TextField","Typography","Autocomplete","createFilterOptions","GoogleMaps","orderApi","filter","FreeSoloCreateOptionDialog","className","touched","setFieldValue","errors","handleBlur","type","values","rest","value","setValue","open","toggleOpen","parties","setParties","getPartiesByUser","user","partiesDB","data","partiesByUser","items","console","log","handleClose","setDialogValue","name","transporter","dialogValue","handleSubmit","event","preventDefault","axios","post","replace","txt","charAt","toUpperCase","substr","toLowerCase","response","error","newValue","setTimeout","inputValue","options","params","filtered","push","option","mobile","location","structured_formatting","main_text","slice","Boolean","customer","submit","object","shape","string","max","required","matches","resetForm","setErrors","setStatus","setSubmitting","success","message","handleChange","isSubmitting","target"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,WANF,EAOEC,OAPF,EAQEC,IARF,EASEC,MATF,EAUEC,SAVF,EAWEC,UAXF,QAYO,eAZP;AAaA,OAAOC,YAAP,IAAuBC,mBAAvB,QAAkD,4BAAlD;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,IAAMC,MAAM,GAAGH,mBAAmB,EAAlC;;AAEA,IAAMI,0BAA0B,GAAG,SAA7BA,0BAA6B,OAS7B;AAAA;;AAAA,MARJC,SAQI,QARJA,SAQI;AAAA,MAPJC,OAOI,QAPJA,OAOI;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADDC,IACC;;AAAA,wBACsB/B,KAAK,CAACC,QAAN,CAAe6B,MAAM,IAAIA,MAAM,CAACD,IAAD,CAA/B,CADtB;AAAA;AAAA,MACGG,KADH;AAAA,MACUC,QADV;;AAAA,yBAEuBjC,KAAK,CAACC,QAAN,CAAe,KAAf,CAFvB;AAAA;AAAA,MAEGiC,IAFH;AAAA,MAESC,UAFT;;AAAA,kBAG0BlC,QAAQ,CAAC,EAAD,CAHlC;AAAA,MAGGmC,OAHH;AAAA,MAGYC,UAHZ;;AAKJnC,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEkBmB,QAAQ,CAACiB,gBAAT,CAA0BC,IAA1B,CAFlB;;AAAA;AAEAC,YAAAA,SAFA;AAGNH,YAAAA,UAAU,CAACG,SAAS,CAACC,IAAV,CAAeC,aAAf,CAA6BC,KAA9B,CAAV;AAHM;AAAA;;AAAA;AAAA;AAAA;AAKNC,YAAAA,OAAO,CAACC,GAAR;;AALM;AAQR,gBAAI,CAACX,IAAL,EAAW;AACTG,cAAAA,UAAU,CAAC,EAAD,CAAV;AACD;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAWN,CAACH,IAAD,CAXM,CAAT;;AAaA,MAAMY,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,IAAAA,cAAc,CAAC;AACbC,MAAAA,IAAI,EAAE,EADO;AAEbC,MAAAA,WAAW,EAAEpB,IAAI,KAAK,UAAT,GAAsB,IAAtB,GAA6B;AAF7B,KAAD,CAAd;AAKAM,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;;AAlBI,yBA2BkCnC,KAAK,CAACC,QAAN,CAAe;AACnD+C,IAAAA,IAAI,EAAE,EAD6C;AAEnDC,IAAAA,WAAW,EAAEpB,IAAI,KAAK,UAAT,GAAsB,IAAtB,GAA6B;AAFS,GAAf,CA3BlC;AAAA;AAAA,MA2BGqB,WA3BH;AAAA,MA2BgBH,cA3BhB;;AAgCJ,MAAMI,YAAY;AAAA,yEAAG,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACC,cAAN;AACApB,cAAAA,QAAQ,CAAC;AACPe,gBAAAA,IAAI,EAAEE,WAAW,CAACF,IADX;AAEPC,gBAAAA,WAAW,EAAEC,WAAW,CAACD;AAFlB,eAAD,CAAR;AAFmB;AAQjB;AACAL,cAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AATiB;AAAA,qBAUMsB,KAAK,CAACC,IAAN,kBAA4B;AACjDP,gBAAAA,IAAI,EAAEE,WAAW,CAACF,IAAZ,CAAiBQ,OAAjB,CAAyB,QAAzB,EAAmC,UAAUC,GAAV,EAAe;AACtD,yBAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC;AACD,iBAFK,CAD2C;AAIjDZ,gBAAAA,WAAW,EAAEC,WAAW,CAACD;AAJwB,eAA5B,CAVN;;AAAA;AAUXa,cAAAA,QAVW;AAgBjBlB,cAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAQ,CAACrB,IAArB;AACAf,cAAAA,aAAa,CAACG,IAAD,EAAOiC,QAAQ,CAACrB,IAAhB,CAAb;AAjBiB;AAAA;;AAAA;AAAA;AAAA;AAmBjBG,cAAAA,OAAO,CAACmB,KAAR;;AAnBiB;AAsBnBjB,cAAAA,WAAW;;AAtBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZK,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAyBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEnB,KADT;AAEE,MAAA,QAAQ,EAAE,kBAACoB,KAAD,EAAQY,QAAR,EAAqB;AAC7B,YAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC;AACAC,UAAAA,UAAU,CAAC,YAAM;AACf9B,YAAAA,UAAU,CAAC,IAAD,CAAV;AACAY,YAAAA,cAAc,CAAC;AACbC,cAAAA,IAAI,EAAEgB,QAAQ,CAACR,OAAT,CAAiB,QAAjB,EAA2B,UAAUC,GAAV,EAAe;AAC9C,uBACEA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EADhC;AAGD,eAJK,CADO;AAMbZ,cAAAA,WAAW,EAAEpB,IAAI,KAAK,UAAT,GAAsB,IAAtB,GAA6B;AAN7B,aAAD,CAAd;AAQD,WAVS,CAAV;AAWD,SAbD,MAaO,IAAImC,QAAQ,IAAIA,QAAQ,CAACE,UAAzB,EAAqC;AAC1C/B,UAAAA,UAAU,CAAC,IAAD,CAAV;AACAY,UAAAA,cAAc,CAAC;AACbC,YAAAA,IAAI,EAAEgB,QAAQ,CAACE,UADF;AAEbjB,YAAAA,WAAW,EAAEpB,IAAI,KAAK,UAAT,GAAsB,IAAtB,GAA6B;AAF7B,WAAD,CAAd;AAID,SANM,MAMA;AACLH,UAAAA,aAAa,CAACG,IAAD,EAAOmC,QAAP,CAAb;AACA/B,UAAAA,QAAQ,CAAC+B,QAAD,CAAR;AACD;AACF,OA1BH;AA2BE,MAAA,aAAa,EAAE,uBAACG,OAAD,EAAUC,MAAV,EAAqB;AAClC,YAAMC,QAAQ,GAAG/C,MAAM,CAAC6C,OAAD,EAAUC,MAAV,CAAvB;;AAEA,YAAIA,MAAM,CAACF,UAAP,KAAsB,EAA1B,EAA8B;AAC5BG,UAAAA,QAAQ,CAACC,IAAT,CAAc;AACZJ,YAAAA,UAAU,EAAEE,MAAM,CAACF,UADP;AAEZlB,YAAAA,IAAI,kBAAUoB,MAAM,CAACF,UAAjB;AAFQ,WAAd;AAID;;AACD,eAAOG,QAAP;AACD,OArCH;AAsCE,MAAA,EAAE,EAAExC,IAtCN;AAuCE,MAAA,OAAO,EAAEO,OAvCX;AAwCE,MAAA,cAAc,EAAE,wBAACmC,MAAD,EAAY;AAC1B;AACA,YAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,iBAAOA,MAAM,CAACf,OAAP,CAAe,QAAf,EAAyB,UAAUC,GAAV,EAAe;AAC7C,mBAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC;AACD,WAFM,CAAP;AAGD;;AACD,YAAIU,MAAM,CAACL,UAAX,EAAuB;AACrB,iBAAOK,MAAM,CAACL,UAAP,CAAkBV,OAAlB,CAA0B,QAA1B,EAAoC,UAAUC,GAAV,EAAe;AACxD,mBAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC;AACD,WAFM,CAAP;AAGD;;AACD,eAAOU,MAAM,CAACvB,IAAP,CAAYQ,OAAZ,CAAoB,QAApB,EAA8B,UAAUC,GAAV,EAAe;AAClD,iBAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAArC;AACD,SAFM,CAAP;AAGD,OAvDH;AAwDE,MAAA,WAAW,MAxDb;AAyDE,MAAA,iBAAiB,MAzDnB;AA0DE,MAAA,YAAY,EAAE,sBAACU,MAAD,EAAY;AACxB,4BACE,QAAC,KAAD,CAAO,QAAP;AAAA,qBACGA,MAAM,CAACvB,IAAP,CAAYQ,OAAZ,CAAoB,QAApB,EAA8B,UAAUC,GAAV,EAAe;AAC5C,mBACEA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EADhC;AAGD,WAJA,CADH,eAME;AAAA;AAAA;AAAA;AAAA,mBANF,EAOGU,MAAM,CAACC,MAAP,kBAAwBD,MAAM,CAACC,MAAP,CAAchB,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAxB,CAPH,eAQE;AAAA;AAAA;AAAA;AAAA,mBARF,EASGe,MAAM,CAACE,QAAP,yBACeF,MAAM,CAACE,QAAP,CAAgBC,qBAAhB,CAAsCC,SADrD,CATH,eAWE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,mBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAeD,OA1EH;AA2EE,MAAA,SAAS,MA3EX;AA4EE,MAAA,QAAQ,MA5EV;AA6EE,MAAA,WAAW,EAAE,qBAACP,MAAD;AAAA,4BACX,QAAC,SAAD,kCACMA,MADN;AAEE,UAAA,KAAK,EAAEvC,IAAI,CAAC6B,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+B9B,IAAI,CAAC+C,KAAL,CAAW,CAAX,CAFxC;AAGE,UAAA,KAAK,EAAEC,OAAO,CACZhD,IAAI,KAAK,UAAT,GACIJ,OAAO,CAACqD,QAAR,IAAoBnD,MAAM,CAACmD,QAD/B,GAEIrD,OAAO,CAACwB,WAAR,IAAuBtB,MAAM,CAACsB,WAHtB,CAHhB;AAQE,UAAA,MAAM,EAAErB,UARV;AASE,UAAA,UAAU,EACRC,IAAI,KAAK,UAAT,GACIJ,OAAO,CAACqD,QAAR,IAAoBnD,MAAM,CAACmD,QAD/B,GAEIrD,OAAO,CAACwB,WAAR,IAAuBtB,MAAM,CAACsB,WAZtC;AAcE,UAAA,OAAO,EAAC;AAdV;AAAA;AAAA;AAAA;AAAA,iBADW;AAAA;AA7Ef;AAAA;AAAA;AAAA;AAAA,aADF,eAiGE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEf,IADR;AAEE,MAAA,OAAO,EAAEY,WAFX;AAGE,yBAAgB,kBAHlB;AAAA,6BAKE;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AACbE,YAAAA,IAAI,EAAEE,WAAW,CAACF,IAAZ,IAAoB,EADb;AAEbwB,YAAAA,MAAM,EAAEtB,WAAW,CAACsB,MAAZ,IAAsB,EAFjB;AAGbC,YAAAA,QAAQ,EAAEvB,WAAW,CAACuB,QAAZ,IAAwB,EAHrB;AAIbxB,YAAAA,WAAW,EAAEC,WAAW,CAACD,WAAZ,IAA2B,EAJ3B;AAKb8B,YAAAA,MAAM,EAAE;AALK,WADjB;AAQE,UAAA,gBAAgB,EAAE1E,GAAG,CAAC2E,MAAJ,GAAaC,KAAb,CAAmB;AACnCjC,YAAAA,IAAI,EAAE3C,GAAG,CAAC6E,MAAJ,GAAaC,GAAb,CAAiB,GAAjB,EAAsBC,QAAtB,CAA+B,kBAA/B,CAD6B;AAEnCZ,YAAAA,MAAM,EAAEnE,GAAG,CAAC6E,MAAJ,GACLG,OADK,CACG,cADH,EACmB,2BADnB,EAELD,QAFK,CAEI,oBAFJ;AAF2B,WAAnB,CARpB;AAcE,UAAA,QAAQ;AAAA,iFAAE,kBACRtD,MADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAENwD,sBAAAA,SAFM,SAENA,SAFM,EAEKC,SAFL,SAEKA,SAFL,EAEgBC,SAFhB,SAEgBA,SAFhB,EAE2BC,aAF3B,SAE2BA,aAF3B;AAAA;AAKN;AACA7C,sBAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AANM;AAAA,6BAOiBwB,KAAK,CAACC,IAAN;AACrBP,wBAAAA,IAAI,EAAElB,MAAM,CAACkB,IAAP,CAAYQ,OAAZ,CAAoB,QAApB,EAA8B,UAAUC,GAAV,EAAe;AACjD,iCACEA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EADhC;AAGD,yBAJK;AADe,yBAMlB/B,MANkB,EAPjB;;AAAA;AAOAgC,sBAAAA,QAPA;AAeNpC,sBAAAA,aAAa,CAACG,IAAD,EAAOiC,QAAQ,CAACrB,IAAhB,CAAb,CAfM,CAgBN;;AACA6C,sBAAAA,SAAS;AACTE,sBAAAA,SAAS,CAAC;AAAEE,wBAAAA,OAAO,EAAE;AAAX,uBAAD,CAAT;AACAD,sBAAAA,aAAa,CAAC,KAAD,CAAb;AACA3C,sBAAAA,WAAW;AApBL;AAAA;;AAAA;AAAA;AAAA;AAsBNF,sBAAAA,OAAO,CAACC,GAAR;AACA2C,sBAAAA,SAAS,CAAC;AAAEE,wBAAAA,OAAO,EAAE;AAAX,uBAAD,CAAT;AACAH,sBAAAA,SAAS,CAAC;AAAER,wBAAAA,MAAM,EAAE,aAAIY;AAAd,uBAAD,CAAT;AACAF,sBAAAA,aAAa,CAAC,KAAD,CAAb;;AAzBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAF;;AAAA;AAAA;AAAA;AAAA,aAdV;AAAA,oBA2CG;AAAA,gBACC9D,MADD,SACCA,MADD;AAAA,gBAECC,UAFD,SAECA,UAFD;AAAA,gBAGCgE,YAHD,SAGCA,YAHD;AAAA,gBAICzC,YAJD,SAICA,YAJD;AAAA,gBAKC0C,YALD,SAKCA,YALD;AAAA,gBAMCnE,aAND,SAMCA,aAND;AAAA,gBAOCD,OAPD,SAOCA,OAPD;AAAA,gBAQCK,MARD,SAQCA,MARD;AAAA,gCAUC;AAAM,cAAA,QAAQ,EAAEqB;AAAhB,eAAkCpB,IAAlC;AAAA,qCACE,QAAC,IAAD;AAAA,uCACE,QAAC,WAAD;AAAA,0CACE,QAAC,IAAD;AAAM,oBAAA,SAAS,MAAf;AAAgB,oBAAA,OAAO,EAAE,CAAzB;AAAA,4CACE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,EAAE,EAAE,EAAf;AAAA,6CACE,QAAC,SAAD;AACE,wBAAA,KAAK,EAAE8C,OAAO,CAACpD,OAAO,CAACuB,IAAR,IAAgBrB,MAAM,CAACqB,IAAxB,CADhB;AAEE,wBAAA,SAAS,MAFX;AAGE,wBAAA,UAAU,EAAEvB,OAAO,CAACuB,IAAR,IAAgBrB,MAAM,CAACqB,IAHrC;AAIE,wBAAA,KAAK,EAAC,mBAJR;AAKE,wBAAA,IAAI,EAAC,MALP;AAME,wBAAA,MAAM,EAAEpB,UANV;AAOE,wBAAA,QAAQ,EAAE,kBAACwB,KAAD,EAAW;AACnB1B,0BAAAA,aAAa,CACX,MADW,EAEX0B,KAAK,CAAC0C,MAAN,CAAa9D,KAAb,CAAmBwB,OAAnB,CACE,QADF,EAEE,UAAUC,GAAV,EAAe;AACb,mCACEA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,KACAF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAFF;AAID,2BAPH,CAFW,CAAb;AAYD,yBApBH;AAqBE,wBAAA,QAAQ,MArBV;AAsBE,wBAAA,KAAK,EAAE/B,MAAM,CAACkB,IAtBhB;AAuBE,wBAAA,OAAO,EAAC;AAvBV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BADF,eA4BE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,EAAE,EAAE,EAAf;AAAA,6CACE,QAAC,SAAD;AACE,wBAAA,KAAK,EAAE6B,OAAO,CAACpD,OAAO,CAAC+C,MAAR,IAAkB7C,MAAM,CAAC6C,MAA1B,CADhB;AAEE,wBAAA,SAAS,MAFX;AAGE,wBAAA,UAAU,EAAE/C,OAAO,CAAC+C,MAAR,IAAkB7C,MAAM,CAAC6C,MAHvC;AAIE,wBAAA,KAAK,EAAC,QAJR;AAKE,wBAAA,IAAI,EAAC,QALP;AAME,wBAAA,MAAM,EAAE5C,UANV;AAOE,wBAAA,QAAQ,EAAE,kBAACwB,KAAD,EAAW;AACnB1B,0BAAAA,aAAa,CACX,QADW,EAEX0B,KAAK,CAAC0C,MAAN,CAAa9D,KAAb,CAAmBwB,OAAnB,CAA2B,IAA3B,EAAiC,EAAjC,CAFW,CAAb;AAID,yBAZH;AAaE,wBAAA,KAAK,EAAE1B,MAAM,CAAC0C,MAbhB;AAcE,wBAAA,OAAO,EAAC;AAdV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BA5BF,eA8CE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,EAAE,EAAE,EAAf;AAAA,6CACE,QAAC,UAAD;AACE,wBAAA,KAAK,EAAEK,OAAO,CAACpD,OAAO,CAAC+C,MAAR,IAAkB7C,MAAM,CAAC6C,MAA1B,CADhB;AAEE,wBAAA,IAAI,EAAE,UAFR;AAGE,wBAAA,KAAK,EAAE,UAHT;AAIE,wBAAA,aAAa,EAAE9C,aAJjB;AAKE,wBAAA,UAAU,EAAEE,UALd;AAME,wBAAA,MAAM,EAAEE;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BA9CF,eAwDE,QAAC,IAAD;AAAM,sBAAA,IAAI,MAAV;AAAW,sBAAA,EAAE,EAAE,EAAf;AAAA,8CACE,QAAC,UAAD;AAAY,wBAAA,OAAO,EAAC,IAApB;AAAyB,wBAAA,KAAK,EAAC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAIE,QAAC,UAAD;AAAY,wBAAA,OAAO,EAAC,OAApB;AAA4B,wBAAA,KAAK,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,eAOE,QAAC,MAAD;AACE,wBAAA,OAAO,EAAEA,MAAM,CAACmB,WADlB;AAEE,wBAAA,KAAK,EAAC,WAFR;AAGE,wBAAA,IAAI,EAAC,OAHP;AAIE,wBAAA,IAAI,EAAC,aAJP;AAKE,wBAAA,QAAQ,EAAE2C,YALZ;AAME,wBAAA,KAAK,EAAE9D,MAAM,CAACmB;AANhB;AAAA;AAAA;AAAA;AAAA,+BAPF;AAAA;AAAA;AAAA;AAAA;AAAA,6BAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eA0EE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAA,2CACE,QAAC,IAAD;AAAM,sBAAA,SAAS,MAAf;AAAgB,sBAAA,OAAO,EAAE,CAAzB;AAAA,8CACE,QAAC,IAAD;AAAM,wBAAA,IAAI,MAAV;AAAA,+CACE,QAAC,MAAD;AACE,0BAAA,OAAO,EAAC,WADV;AAEE,0BAAA,KAAK,EAAC,WAFR;AAGE,0BAAA,IAAI,EAAC,QAHP;AAIE,0BAAA,QAAQ,EAAE4C,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,+BADF,eAWE,QAAC,IAAD;AAAM,wBAAA,IAAI,MAAV;AAAA,+CACE,QAAC,MAAD;AACE,0BAAA,OAAO,EAAC,WADV;AAEE,0BAAA,KAAK,EAAC,WAFR;AAGE,0BAAA,OAAO,EAAE/C,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,+BAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BA1EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAVD;AAAA;AA3CH;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,aAjGF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA0QD,CA5UD;;GAAMvB,0B;;KAAAA,0B;AA6UN,eAAeA,0BAAf","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Divider,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { orderApi } from \"../../../api/order-api\";\n\nconst filter = createFilterOptions();\n\nconst FreeSoloCreateOptionDialog = ({\n  className,\n  touched,\n  setFieldValue,\n  errors,\n  handleBlur,\n  type,\n  values,\n  ...rest\n}) => {\n  const [value, setValue] = React.useState(values && values[type]);\n  const [open, toggleOpen] = React.useState(false);\n  const [parties, setParties] = useState([]);\n\n  useEffect(async () => {\n    try {\n      const partiesDB = await orderApi.getPartiesByUser(user);\n      setParties(partiesDB.data.partiesByUser.items);\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (!open) {\n      setParties([]);\n    }\n  }, [open]);\n\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false,\n    });\n\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false,\n  });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      transporter: dialogValue.transporter,\n    });\n\n    try {\n      // NOTE: Make API request\n      console.log(value);\n      const response = await axios.post(`/api/parties/`, {\n        name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        }),\n        transporter: dialogValue.transporter,\n      });\n      console.log(response.data);\n      setFieldValue(type, response.data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === \"string\") {\n            // timeout to avoid instant validation of the dialog's form.\n            setTimeout(() => {\n              toggleOpen(true);\n              setDialogValue({\n                name: newValue.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                }),\n                transporter: type !== \"customer\" ? true : false,\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.inputValue,\n              transporter: type !== \"customer\" ? true : false,\n            });\n          } else {\n            setFieldValue(type, newValue);\n            setValue(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          if (params.inputValue !== \"\") {\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `Add \"${params.inputValue}\"`,\n            });\n          }\n          return filtered;\n        }}\n        id={type}\n        options={parties}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === \"string\") {\n            return option.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n          }\n          if (option.inputValue) {\n            return option.inputValue.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n          }\n          return option.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }}\n        clearOnBlur\n        handleHomeEndKeys\n        renderOption={(option) => {\n          return (\n            <React.Fragment>\n              {option.name.replace(/\\w\\S*/g, function (txt) {\n                return (\n                  txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                );\n              })}\n              <br />\n              {option.mobile && `(M) ${option.mobile.replace(/ /g, \"\")}`}\n              <br />\n              {option.location &&\n                `Location - ${option.location.structured_formatting.main_text}`}\n              <Divider />\n            </React.Fragment>\n          );\n        }}\n        fullWidth\n        freeSolo\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label={type.charAt(0).toUpperCase() + type.slice(1)}\n            error={Boolean(\n              type === \"customer\"\n                ? touched.customer && errors.customer\n                : touched.transporter && errors.transporter\n            )}\n            onBlur={handleBlur}\n            helperText={\n              type === \"customer\"\n                ? touched.customer && errors.customer\n                : touched.transporter && errors.transporter\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-name\"\n      >\n        <form>\n          <DialogTitle id=\"form-dialog-name\">Add a new party</DialogTitle>\n          <Formik\n            initialValues={{\n              name: dialogValue.name || \"\",\n              mobile: dialogValue.mobile || \"\",\n              location: dialogValue.location || \"\",\n              transporter: dialogValue.transporter || \"\",\n              submit: null,\n            }}\n            validationSchema={Yup.object().shape({\n              name: Yup.string().max(255).required(\"Name is required\"),\n              mobile: Yup.string()\n                .matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\")\n                .required(\"Mobile is required\"),\n            })}\n            onSubmit={async (\n              values,\n              { resetForm, setErrors, setStatus, setSubmitting }\n            ) => {\n              try {\n                // NOTE: Make API request\n                console.log(values);\n                const response = await axios.post(`/api/parties/`, {\n                  name: values.name.replace(/\\w\\S*/g, function (txt) {\n                    return (\n                      txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                    );\n                  }),\n                  ...values,\n                });\n                setFieldValue(type, response.data);\n                // dispatch(updateParty(party, values));\n                resetForm();\n                setStatus({ success: true });\n                setSubmitting(false);\n                handleClose();\n              } catch (err) {\n                console.log(err);\n                setStatus({ success: false });\n                setErrors({ submit: err.message });\n                setSubmitting(false);\n              }\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              setFieldValue,\n              touched,\n              values,\n            }) => (\n              <form onSubmit={handleSubmit} {...rest}>\n                <Card>\n                  <CardContent>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={Boolean(touched.name && errors.name)}\n                          fullWidth\n                          helperText={touched.name && errors.name}\n                          label=\"Main Contact Name\"\n                          name=\"name\"\n                          onBlur={handleBlur}\n                          onChange={(event) => {\n                            setFieldValue(\n                              \"name\",\n                              event.target.value.replace(\n                                /\\w\\S*/g,\n                                function (txt) {\n                                  return (\n                                    txt.charAt(0).toUpperCase() +\n                                    txt.substr(1).toLowerCase()\n                                  );\n                                }\n                              )\n                            );\n                          }}\n                          required\n                          value={values.name}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={Boolean(touched.mobile && errors.mobile)}\n                          fullWidth\n                          helperText={touched.mobile && errors.mobile}\n                          label=\"Mobile\"\n                          name=\"mobile\"\n                          onBlur={handleBlur}\n                          onChange={(event) => {\n                            setFieldValue(\n                              \"mobile\",\n                              event.target.value.replace(/ /g, \"\")\n                            );\n                          }}\n                          value={values.mobile}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <GoogleMaps\n                          error={Boolean(touched.mobile && errors.mobile)}\n                          name={\"location\"}\n                          field={\"location\"}\n                          setFieldValue={setFieldValue}\n                          handleBlur={handleBlur}\n                          values={values}\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography variant=\"h5\" color=\"textPrimary\">\n                          Party Type\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Is this party a transporter?\n                        </Typography>\n                        <Switch\n                          checked={values.transporter}\n                          color=\"secondary\"\n                          edge=\"start\"\n                          name=\"transporter\"\n                          onChange={handleChange}\n                          value={values.transporter}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box mt={2}>\n                      <Grid container spacing={3}>\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            type=\"submit\"\n                            disabled={isSubmitting}\n                          >\n                            Create Party\n                          </Button>\n                        </Grid>\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={handleClose}\n                          >\n                            Cancel\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </form>\n            )}\n          </Formik>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n};\nexport default FreeSoloCreateOptionDialog;\n"]},"metadata":{},"sourceType":"module"}