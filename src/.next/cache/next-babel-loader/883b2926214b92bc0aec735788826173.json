{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-logo-dropzone.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport { Box, Button, IconButton, Link, List, ListItem, ListItemIcon, ListItemText, Tooltip, Typography } from \"@mui/material\";\nimport { Duplicate as DuplicateIcon } from \"../../../icons/duplicate\";\nimport { X as XIcon } from \"../../../icons/x\";\nimport { bytesToSize } from \"../../../utils/bytes-to-size\";\nexport var OrganisationLogoDropzone = function OrganisationLogoDropzone(props) {\n  _s();\n\n  var accept = props.accept,\n      disabled = props.disabled,\n      file = props.file,\n      getFilesFromEvent = props.getFilesFromEvent,\n      maxFiles = props.maxFiles,\n      maxSize = props.maxSize,\n      minSize = props.minSize,\n      noClick = props.noClick,\n      noDrag = props.noDrag,\n      noDragEventsBubbling = props.noDragEventsBubbling,\n      noKeyboard = props.noKeyboard,\n      onDrop = props.onDrop,\n      onDropAccepted = props.onDropAccepted,\n      onDropRejected = props.onDropRejected,\n      onFileDialogCancel = props.onFileDialogCancel,\n      onRemove = props.onRemove,\n      onRemoveAll = props.onRemoveAll,\n      onUpload = props.onUpload,\n      preventDropOnDocument = props.preventDropOnDocument,\n      other = _objectWithoutProperties(props, [\"accept\", \"disabled\", \"file\", \"getFilesFromEvent\", \"maxFiles\", \"maxSize\", \"minSize\", \"noClick\", \"noDrag\", \"noDragEventsBubbling\", \"noKeyboard\", \"onDrop\", \"onDropAccepted\", \"onDropRejected\", \"onFileDialogCancel\", \"onRemove\", \"onRemoveAll\", \"onUpload\", \"preventDropOnDocument\"]); // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n\n\n  var _useDropzone = useDropzone({\n    accept: accept,\n    maxFiles: maxFiles,\n    maxSize: maxSize,\n    minSize: minSize,\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  console.log(file);\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, other), {}, {\n    children: file && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onRemove,\n          size: \"small\",\n          type: \"button\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onUpload,\n          size: \"small\",\n          sx: {\n            ml: 2\n          },\n          type: \"button\",\n          variant: \"contained\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrganisationLogoDropzone, \"YfI2qKQYNDOj7ozxGshQtast5Mk=\", false, function () {\n  return [useDropzone];\n});\n\n_c = OrganisationLogoDropzone;\nOrganisationLogoDropzone.propTypes = {\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  disabled: PropTypes.bool,\n  file: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool\n};\nOrganisationLogoDropzone.defaultProps = {\n  files: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganisationLogoDropzone\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-logo-dropzone.js"],"names":["PropTypes","useDropzone","AvatarEditor","Box","Button","IconButton","Link","List","ListItem","ListItemIcon","ListItemText","Tooltip","Typography","Duplicate","DuplicateIcon","X","XIcon","bytesToSize","OrganisationLogoDropzone","props","accept","disabled","file","getFilesFromEvent","maxFiles","maxSize","minSize","noClick","noDrag","noDragEventsBubbling","noKeyboard","onDrop","onDropAccepted","onDropRejected","onFileDialogCancel","onRemove","onRemoveAll","onUpload","preventDropOnDocument","other","getRootProps","getInputProps","isDragActive","console","log","mt","display","justifyContent","ml","propTypes","oneOfType","string","arrayOf","bool","array","func","number","defaultProps","files"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport AvatarEditor from \"react-avatar-editor\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { Duplicate as DuplicateIcon } from \"../../../icons/duplicate\";\nimport { X as XIcon } from \"../../../icons/x\";\nimport { bytesToSize } from \"../../../utils/bytes-to-size\";\n\nexport const OrganisationLogoDropzone = (props) => {\n  const {\n    accept,\n    disabled,\n    file,\n    getFilesFromEvent,\n    maxFiles,\n    maxSize,\n    minSize,\n    noClick,\n    noDrag,\n    noDragEventsBubbling,\n    noKeyboard,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onRemove,\n    onRemoveAll,\n    onUpload,\n    preventDropOnDocument,\n    ...other\n  } = props;\n\n  // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop,\n  });\n  console.log(file);\n  return (\n    <div {...other}>\n      {/* <Box\n        sx={{\n          alignItems: \"center\",\n          border: 1,\n          borderRadius: 1,\n          borderStyle: \"dashed\",\n          borderColor: \"divider\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n          outline: \"none\",\n          p: 6,\n          ...(isDragActive && {\n            backgroundColor: \"action.active\",\n            opacity: 0.5,\n          }),\n          \"&:hover\": {\n            backgroundColor: \"action.hover\",\n            cursor: \"pointer\",\n            opacity: 0.5,\n          },\n        }}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Box\n          sx={{\n            \"& img\": {\n              width: 100,\n            },\n          }}\n        >\n          <img alt=\"Select file\" src=\"/static/undraw_add_file2_gvbb.svg\" />\n        </Box>\n        <Box sx={{ p: 2 }}>\n          <Typography variant=\"h6\">\n            {`Select file${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`}\n          </Typography>\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"body1\">\n              {`Drop file${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`}{\" \"}\n              <Link underline=\"always\">browse</Link> thorough your machine\n            </Typography>\n          </Box>\n        </Box>\n      </Box> */}\n      {file && (\n        <Box sx={{ mt: 2 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              mt: 2,\n            }}\n          >\n            <Button onClick={onRemove} size=\"small\" type=\"button\">\n              Remove\n            </Button>\n            <Button\n              onClick={onUpload}\n              size=\"small\"\n              sx={{ ml: 2 }}\n              type=\"button\"\n              variant=\"contained\"\n            >\n              Upload\n            </Button>\n          </Box>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nOrganisationLogoDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  disabled: PropTypes.bool,\n  file: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool,\n};\n\nOrganisationLogoDropzone.defaultProps = {\n  files: [],\n};\n"]},"metadata":{},"sourceType":"module"}