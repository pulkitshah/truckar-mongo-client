{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/stepper.js\";\nimport * as React from \"react\";\nimport { useRef } from \"react\";\nimport NextLink from \"next/link\";\nimport { Box, Button, Card, CardActions, CardContent, Container, Divider, Grid, MenuItem, TextField, Typography, Stepper, Step, StepButton } from \"@mui/material\";\nimport { ArrowRight as ArrowRightIcon } from \"../../../icons/arrow-right\";\nimport { Briefcase as BriefcaseIcon } from \"../../../icons/briefcase\";\nimport { useTranslation } from \"react-i18next\";\nimport { BranchCreateForm } from \"../../../components/dashboard/welcome/branch-create-form\";\nconst steps = [\"Create a main branch\", \"Add team members\", \"Create vehicles\"];\nexport default function HorizontalNonLinearStepper() {\n  const branchCreateFormRef = useRef(null);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const {\n    t\n  } = useTranslation();\n\n  const handleNext = () => {\n    const newActiveStep = activeStep + 1;\n\n    if (activeStep === 0) {\n      branchCreateFormRef.current.handleFormSubmit();\n      handleComplete();\n    } else {\n      handleComplete();\n      setActiveStep(newActiveStep);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  const createAMainBranch = /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sx: {\n      py: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(BriefcaseIcon, {\n            color: \"primary\",\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary.main\",\n            sx: {\n              pl: 1\n            },\n            variant: \"subtitle2\",\n            children: t(\"Add your main branch details\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            mt: 2\n          },\n          children: t(\"Let us open your branch.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(BranchCreateForm, {\n            handleNext: handleNext,\n            ref: branchCreateFormRef,\n            setActiveStep: setActiveStep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minWidth: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      nonLinear: true,\n      activeStep: activeStep,\n      children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n        completed: completed[index],\n        children: /*#__PURE__*/_jsxDEV(StepButton, {\n          color: \"inherit\",\n          onClick: handleStep(index),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), //   activeStep === 0 &&\n    createAMainBranch, /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        pt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"inherit\",\n        disabled: activeStep !== 2,\n        onClick: handleBack,\n        sx: {\n          mr: 1\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: \"1 1 auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNext,\n        sx: {\n          mr: 1\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleComplete,\n        children: activeStep !== 0 && \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/stepper.js"],"names":["React","useRef","NextLink","Box","Button","Card","CardActions","CardContent","Container","Divider","Grid","MenuItem","TextField","Typography","Stepper","Step","StepButton","ArrowRight","ArrowRightIcon","Briefcase","BriefcaseIcon","useTranslation","BranchCreateForm","steps","HorizontalNonLinearStepper","branchCreateFormRef","activeStep","setActiveStep","useState","completed","setCompleted","t","handleNext","newActiveStep","current","handleFormSubmit","handleComplete","handleBack","prevActiveStep","handleStep","step","newCompleted","handleReset","createAMainBranch","py","alignItems","display","pl","mt","minWidth","map","label","index","flexDirection","pt","mr","flex"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useRef } from \"react\";\nimport NextLink from \"next/link\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Container,\n  Divider,\n  Grid,\n  MenuItem,\n  TextField,\n  Typography,\n  Stepper,\n  Step,\n  StepButton,\n} from \"@mui/material\";\nimport { ArrowRight as ArrowRightIcon } from \"../../../icons/arrow-right\";\nimport { Briefcase as BriefcaseIcon } from \"../../../icons/briefcase\";\nimport { useTranslation } from \"react-i18next\";\nimport { BranchCreateForm } from \"../../../components/dashboard/welcome/branch-create-form\";\n\nconst steps = [\"Create a main branch\", \"Add team members\", \"Create vehicles\"];\n\nexport default function HorizontalNonLinearStepper() {\n  const branchCreateFormRef = useRef(null);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const { t } = useTranslation();\n\n  const handleNext = () => {\n    const newActiveStep = activeStep + 1;\n    if (activeStep === 0) {\n      branchCreateFormRef.current.handleFormSubmit();\n      handleComplete();\n    } else {\n      handleComplete();\n      setActiveStep(newActiveStep);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  const handleComplete = () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n\n  const createAMainBranch = (\n    <Grid item xs={12} sx={{ py: 3 }}>\n      <Card>\n        <CardContent>\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n            }}\n          >\n            <BriefcaseIcon color=\"primary\" fontSize=\"small\" />\n            <Typography color=\"primary.main\" sx={{ pl: 1 }} variant=\"subtitle2\">\n              {t(\"Add your main branch details\")}\n            </Typography>\n          </Box>\n          <Typography variant=\"h5\" sx={{ mt: 2 }}>\n            {t(\"Let us open your branch.\")}\n          </Typography>\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n            }}\n          >\n            <BranchCreateForm\n              handleNext={handleNext}\n              ref={branchCreateFormRef}\n              setActiveStep={setActiveStep}\n            />\n          </Box>\n        </CardContent>\n        <Divider />\n      </Card>\n    </Grid>\n  );\n\n  return (\n    <Box sx={{ minWidth: \"100%\" }}>\n      <Stepper nonLinear activeStep={activeStep}>\n        {steps.map((label, index) => (\n          <Step key={label} completed={completed[index]}>\n            <StepButton color=\"inherit\" onClick={handleStep(index)}>\n              {label}\n            </StepButton>\n          </Step>\n        ))}\n      </Stepper>\n\n      {\n        //   activeStep === 0 &&\n        createAMainBranch\n      }\n      <Box sx={{ display: \"flex\", flexDirection: \"row\", pt: 2 }}>\n        <Button\n          color=\"inherit\"\n          disabled={activeStep !== 2}\n          onClick={handleBack}\n          sx={{ mr: 1 }}\n        >\n          Back\n        </Button>\n        <Box sx={{ flex: \"1 1 auto\" }} />\n        <Button onClick={handleNext} sx={{ mr: 1 }}>\n          Next\n        </Button>\n        {\n          <Button onClick={handleComplete}>\n            {activeStep !== 0 && \"Finish\"}\n          </Button>\n        }\n      </Box>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}