{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details-grid.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { deliveryDetailsTable } from \"../../grids/grid-columns\";\n\nvar Table = function Table(_ref) {\n  _s();\n\n  var order = _ref.order,\n      deliveries = _ref.deliveries;\n\n  var getOrderUnit = function getOrderUnit(order) {\n    switch (JSON.parse(order.saleType).value) {\n      case \"quantity\":\n        return \"\".concat(JSON.parse(order.saleType).unit);\n        break;\n\n      case \"fixed\":\n        return \"(Fixed)\";\n        break;\n\n      case \"time\":\n        return \"\".concat(JSON.parse(order.saleType).unit);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  var processRowUpdate = React.useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newRow) {\n      var order;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Make the HTTP request to save in the backend\n              order = newRow.order;\n              delete newRow.order;\n              JSON.parse(order.deliveries).map(function (del) {\n                if (del.id !== newRow.id) {\n                  return del;\n                } else {\n                  console.log(del);\n                  return newRow;\n                }\n              });\n              console.log(order.deliveries); // const response = await mutateRow(newRow);\n              // return response;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  deliveries.map(function (del) {\n    del.order = order;\n    del.unit = getOrderUnit(order);\n    return del;\n  });\n  return /*#__PURE__*/_jsxDEV(DataGrid, {\n    rows: deliveries,\n    autoHeight: true,\n    columns: deliveryDetailsTable,\n    disableSelectionOnClick: true,\n    experimentalFeatures: {\n      newEditingApi: true\n    },\n    processRowUpdate: processRowUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Table, \"+G1+6iziP8bdiUEmlAk1Mcl7MEg=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details-grid.js"],"names":["React","DataGrid","deliveryDetailsTable","Table","order","deliveries","getOrderUnit","JSON","parse","saleType","value","unit","processRowUpdate","useCallback","newRow","map","del","id","console","log","newEditingApi"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,oBAAT,QAAqC,0BAArC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA2B;AAAA;;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACvC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACF,KAAD,EAAW;AAC9B,YAAQG,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAjB,EAA2BC,KAAnC;AACE,WAAK,UAAL;AACE,yBAAUH,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAjB,EAA2BE,IAArC;AACA;;AACF,WAAK,OAAL;AACE;AACA;;AACF,WAAK,MAAL;AACE,yBAAUJ,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAjB,EAA2BE,IAArC;AACA;;AACF;AACE;AAXJ;AAaD,GAdD;;AAgBA,MAAMC,gBAAgB,GAAGZ,KAAK,CAACa,WAAN;AAAA,yEAAkB,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACzC;AACIV,cAAAA,KAFqC,GAE7BU,MAAM,CAACV,KAFsB;AAGzC,qBAAOU,MAAM,CAACV,KAAd;AAEAG,cAAAA,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,UAAjB,EAA6BU,GAA7B,CAAiC,UAACC,GAAD,EAAS;AACxC,oBAAIA,GAAG,CAACC,EAAJ,KAAWH,MAAM,CAACG,EAAtB,EAA0B;AACxB,yBAAOD,GAAP;AACD,iBAFD,MAEO;AACLE,kBAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,yBAAOF,MAAP;AACD;AACF,eAPD;AAQAI,cAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACC,UAAlB,EAbyC,CAezC;AACA;;AAhByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAAA;AAAA;AAAA;AAAA,OAiBtB,EAjBsB,CAAzB;AAmBAA,EAAAA,UAAU,CAACU,GAAX,CAAe,UAACC,GAAD,EAAS;AACtBA,IAAAA,GAAG,CAACZ,KAAJ,GAAYA,KAAZ;AACAY,IAAAA,GAAG,CAACL,IAAJ,GAAWL,YAAY,CAACF,KAAD,CAAvB;AACA,WAAOY,GAAP;AACD,GAJD;AAKA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAEX,UADR;AAEE,IAAA,UAAU,EAAE,IAFd;AAGE,IAAA,OAAO,EAAEH,oBAHX;AAIE,IAAA,uBAAuB,MAJzB;AAKE,IAAA,oBAAoB,EAAE;AAAEkB,MAAAA,aAAa,EAAE;AAAjB,KALxB;AAME,IAAA,gBAAgB,EAAER;AANpB;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAnDD;;GAAMT,K;;KAAAA,K;AAqDN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { deliveryDetailsTable } from \"../../grids/grid-columns\";\n\nconst Table = ({ order, deliveries }) => {\n  const getOrderUnit = (order) => {\n    switch (JSON.parse(order.saleType).value) {\n      case \"quantity\":\n        return `${JSON.parse(order.saleType).unit}`;\n        break;\n      case \"fixed\":\n        return `(Fixed)`;\n        break;\n      case \"time\":\n        return `${JSON.parse(order.saleType).unit}`;\n        break;\n      default:\n        break;\n    }\n  };\n\n  const processRowUpdate = React.useCallback(async (newRow) => {\n    // Make the HTTP request to save in the backend\n    let order = newRow.order;\n    delete newRow.order;\n\n    JSON.parse(order.deliveries).map((del) => {\n      if (del.id !== newRow.id) {\n        return del;\n      } else {\n        console.log(del);\n        return newRow;\n      }\n    });\n    console.log(order.deliveries);\n\n    // const response = await mutateRow(newRow);\n    // return response;\n  }, []);\n\n  deliveries.map((del) => {\n    del.order = order;\n    del.unit = getOrderUnit(order);\n    return del;\n  });\n  return (\n    <DataGrid\n      rows={deliveries}\n      autoHeight={true}\n      columns={deliveryDetailsTable}\n      disableSelectionOnClick\n      experimentalFeatures={{ newEditingApi: true }}\n      processRowUpdate={processRowUpdate}\n    />\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}