{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-logo-dropzone.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport { Box, Button, Link, Typography } from \"@mui/material\";\nexport const OrganisationLogoDropzone = props => {\n  const {\n    accept,\n    croppedImage,\n    disabled,\n    displayInDrawer,\n    file,\n    getFilesFromEvent,\n    maxFiles,\n    maxSize,\n    minSize,\n    noClick,\n    noDrag,\n    noDragEventsBubbling,\n    noKeyboard,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onRemove,\n    onRemoveAll,\n    onSaveCroppedImage,\n    onUpload,\n    preventDropOnDocument,\n    showModal,\n    onModalClose,\n    imgURL,\n    onSaveHandler\n  } = props,\n        other = _objectWithoutProperties(props, [\"accept\", \"croppedImage\", \"disabled\", \"displayInDrawer\", \"file\", \"getFilesFromEvent\", \"maxFiles\", \"maxSize\", \"minSize\", \"noClick\", \"noDrag\", \"noDragEventsBubbling\", \"noKeyboard\", \"onDrop\", \"onDropAccepted\", \"onDropRejected\", \"onFileDialogCancel\", \"onRemove\", \"onRemoveAll\", \"onSaveCroppedImage\", \"onUpload\", \"preventDropOnDocument\", \"showModal\", \"onModalClose\", \"imgURL\", \"onSaveHandler\"]); // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop,\n    onDropAccepted\n  });\n  const cropperRef = useRef(null);\n  const {\n    0: cropper,\n    1: setCropper\n  } = useState();\n\n  const getCroppedImage = () => {\n    if (typeof cropper !== \"undefined\") {\n      onSaveCroppedImage(cropper);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, other), {}, {\n    children: [!file && /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n      sx: _objectSpread(_objectSpread({\n        alignItems: \"center\",\n        border: 1,\n        borderRadius: 1,\n        borderStyle: \"dashed\",\n        borderColor: \"divider\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        outline: \"none\",\n        p: displayInDrawer ? 0.4 : 6\n      }, isDragActive && {\n        backgroundColor: \"action.active\",\n        opacity: 0.5\n      }), {}, {\n        \"&:hover\": {\n          backgroundColor: \"action.hover\",\n          cursor: \"pointer\",\n          opacity: 0.5\n        }\n      })\n    }, getRootProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          \"& img\": {\n            width: displayInDrawer ? 40 : 100\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Select file\",\n          src: \"/static/undraw_add_file2_gvbb.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: `Select logo${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [`Drop image${maxFiles && maxFiles === 1 ? \"\" : \"s\"} or `, \" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"always\",\n              children: \"browse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), \" thorough your machine\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), file && !croppedImage && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Cropper, {\n        src: file.preview,\n        style: {\n          height: 500,\n          width: \"732px\"\n        },\n        viewMode: 0,\n        cropBoxResizable: false,\n        guides: true,\n        aspectRatio: 4.5,\n        background: false,\n        ref: cropperRef,\n        minCropBoxHeight: 67.5,\n        minCropBoxWidth: 15,\n        responsive: true,\n        autoCropArea: 1,\n        onInitialized: instance => {\n          setCropper(instance);\n        },\n        checkOrientation: false,\n        toggleDragModeOnDblclick: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onRemove,\n          size: \"small\",\n          type: \"button\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getCroppedImage,\n          size: \"small\",\n          sx: {\n            ml: 2\n          },\n          type: \"button\",\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\nOrganisationLogoDropzone.propTypes = {\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  disabled: PropTypes.bool,\n  file: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool\n};\nOrganisationLogoDropzone.defaultProps = {\n  files: []\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-logo-dropzone.js"],"names":["React","useRef","useState","PropTypes","useDropzone","Cropper","Box","Button","Link","Typography","OrganisationLogoDropzone","props","accept","croppedImage","disabled","displayInDrawer","file","getFilesFromEvent","maxFiles","maxSize","minSize","noClick","noDrag","noDragEventsBubbling","noKeyboard","onDrop","onDropAccepted","onDropRejected","onFileDialogCancel","onRemove","onRemoveAll","onSaveCroppedImage","onUpload","preventDropOnDocument","showModal","onModalClose","imgURL","onSaveHandler","other","getRootProps","getInputProps","isDragActive","cropperRef","cropper","setCropper","getCroppedImage","alignItems","border","borderRadius","borderStyle","borderColor","display","flexWrap","justifyContent","outline","p","backgroundColor","opacity","cursor","width","mt","preview","height","instance","ml","propTypes","oneOfType","string","arrayOf","bool","array","func","number","defaultProps","files"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport { Box, Button, Link, Typography } from \"@mui/material\";\n\nexport const OrganisationLogoDropzone = (props) => {\n  const {\n    accept,\n    croppedImage,\n    disabled,\n    displayInDrawer,\n    file,\n    getFilesFromEvent,\n    maxFiles,\n    maxSize,\n    minSize,\n    noClick,\n    noDrag,\n    noDragEventsBubbling,\n    noKeyboard,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onRemove,\n    onRemoveAll,\n    onSaveCroppedImage,\n    onUpload,\n    preventDropOnDocument,\n    showModal,\n    onModalClose,\n    imgURL,\n    onSaveHandler,\n    ...other\n  } = props;\n\n  // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop,\n    onDropAccepted,\n  });\n\n  const cropperRef = useRef(null);\n  const [cropper, setCropper] = useState();\n\n  const getCroppedImage = () => {\n    if (typeof cropper !== \"undefined\") {\n      onSaveCroppedImage(cropper);\n    }\n  };\n\n  return (\n    <div {...other}>\n      {!file && (\n        <Box\n          sx={{\n            alignItems: \"center\",\n            border: 1,\n            borderRadius: 1,\n            borderStyle: \"dashed\",\n            borderColor: \"divider\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            outline: \"none\",\n            p: displayInDrawer ? 0.4 : 6,\n            ...(isDragActive && {\n              backgroundColor: \"action.active\",\n              opacity: 0.5,\n            }),\n            \"&:hover\": {\n              backgroundColor: \"action.hover\",\n              cursor: \"pointer\",\n              opacity: 0.5,\n            },\n          }}\n          {...getRootProps()}\n        >\n          <input {...getInputProps()} />\n\n          <Box\n            sx={{\n              \"& img\": {\n                width: displayInDrawer ? 40 : 100,\n              },\n            }}\n          >\n            <img alt=\"Select file\" src=\"/static/undraw_add_file2_gvbb.svg\" />\n          </Box>\n\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\">\n              {`Select logo${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`}\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"body1\">\n                {`Drop image${maxFiles && maxFiles === 1 ? \"\" : \"s\"} or `}{\" \"}\n                <Link underline=\"always\">browse</Link> thorough your machine\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      )}\n      {file && !croppedImage && (\n        <Box sx={{ mt: 2 }}>\n          <Cropper\n            src={file.preview}\n            style={{ height: 500, width: \"732px\" }}\n            viewMode={0}\n            cropBoxResizable={false}\n            guides={true}\n            aspectRatio={4.5}\n            background={false}\n            ref={cropperRef}\n            minCropBoxHeight={67.5}\n            minCropBoxWidth={15}\n            responsive={true}\n            autoCropArea={1}\n            onInitialized={(instance) => {\n              setCropper(instance);\n            }}\n            checkOrientation={false}\n            toggleDragModeOnDblclick={false}\n          />\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              mt: 2,\n            }}\n          >\n            <Button onClick={onRemove} size=\"small\" type=\"button\">\n              Remove\n            </Button>\n            <Button\n              onClick={getCroppedImage}\n              size=\"small\"\n              sx={{ ml: 2 }}\n              type=\"button\"\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </Box>\n        </Box>\n      )}\n\n      {}\n    </div>\n  );\n};\n\nOrganisationLogoDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  disabled: PropTypes.bool,\n  file: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool,\n};\n\nOrganisationLogoDropzone.defaultProps = {\n  files: [],\n};\n"]},"metadata":{},"sourceType":"module"}