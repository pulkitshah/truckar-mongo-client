{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../../utils/axios\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { LanguagePopover } from \"../language-popover\";\nimport { Box, Button, Card, CardContent, Checkbox, FormGroup, FormControlLabel, Grid, IconButton, TextField, Typography } from \"@mui/material\";\nexport const AccountOrderLRInvoiceSettings = props => {\n  const {\n    user\n  } = useAuth();\n  console.log(user);\n  const {\n    t\n  } = useTranslation();\n  console.log(t(\"Basic Details\"));\n  const formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [{\n        id: uuidv4(),\n        driverExpenseName: \"\",\n        showDefault: \"\"\n      }]\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        const newOrder = {\n          deliveries: JSON.stringify(values.deliveryDetails)\n        };\n        await orderApi.createOrder(newOrder, dispatch);\n        toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: user.name || \"\",\n      marketName: user.marketName || \"\",\n      email: user.email || \"\",\n      mobile: user.mobile || \"\",\n      accountType: user.accountType || {\n        vehicleOwner: false,\n        trader: true,\n        commissionAgent: false\n      },\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      marketName: Yup.string().max(255).required(\"Market Name is required\"),\n      mobile: Yup.string().max(10).required(\"Phone Number is required\"),\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\")\n    }),\n    onSubmit: async (values, {\n      resetForm,\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        await axios.patch(\"/api/auth/\", values);\n        await initialise();\n        resetForm();\n        setStatus({\n          success: true\n        });\n        setSubmitting(false);\n        toast.success(t(\"User updated\"));\n      } catch (err) {\n        console.error(err);\n        setStatus({\n          success: false\n        });\n        setErrors({\n          submit: err.message\n        });\n        setSubmitting(false);\n      }\n    },\n    children: ({\n      errors,\n      setFieldValue,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n        sx: {\n          mt: 4\n        }\n      }, props), {}, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: t(\"Truck Driver Expenses Categories\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: t(\"Expenses to store the purpose of giving money to driver of own vehicles \")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 8,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 8,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      children: t(\"Truck Driver Expenses Categories\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      children: t(\"Show Default\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 8,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: \"flex\",\n                        alignItems: \"center\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.name && errors.name),\n                        fullWidth: true,\n                        helperText: touched.name && errors.name,\n                        name: \"name\",\n                        size: \"small\",\n                        onBlur: handleBlur,\n                        onChange: handleChange,\n                        required: true,\n                        value: values.name,\n                        sx: {\n                          flexGrow: 1,\n                          mr: 3\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      defaultChecked: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  p: 2,\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"secondary\",\n                    disabled: isSubmitting,\n                    type: \"submit\",\n                    variant: \"contained\",\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js"],"names":["useRef","useState","useTranslation","toast","Formik","Yup","axios","useAuth","LanguagePopover","Box","Button","Card","CardContent","Checkbox","FormGroup","FormControlLabel","Grid","IconButton","TextField","Typography","AccountOrderLRInvoiceSettings","props","user","console","log","t","formik","useFormik","initialValues","driverExpensesCategories","id","uuidv4","driverExpenseName","showDefault","onSubmit","values","helpers","newOrder","deliveries","JSON","stringify","deliveryDetails","orderApi","createOrder","dispatch","success","err","error","setStatus","setErrors","submit","message","setSubmitting","name","marketName","email","mobile","accountType","vehicleOwner","trader","commissionAgent","object","shape","string","max","required","resetForm","patch","initialise","errors","setFieldValue","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mt","display","alignItems","Boolean","flexGrow","mr"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../../utils/axios\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { LanguagePopover } from \"../language-popover\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nexport const AccountOrderLRInvoiceSettings = (props) => {\n  const { user } = useAuth();\n  console.log(user);\n  const { t } = useTranslation();\n  console.log(t(\"Basic Details\"));\n\n  const formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [\n        {\n          id: uuidv4(),\n          driverExpenseName: \"\",\n          showDefault: \"\",\n        },\n      ],\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        const newOrder = {\n          deliveries: JSON.stringify(values.deliveryDetails),\n        };\n\n        await orderApi.createOrder(newOrder, dispatch);\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        name: user.name || \"\",\n        marketName: user.marketName || \"\",\n        email: user.email || \"\",\n        mobile: user.mobile || \"\",\n        accountType: user.accountType || {\n          vehicleOwner: false,\n          trader: true,\n          commissionAgent: false,\n        },\n        submit: null,\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(255).required(\"Name is required\"),\n        marketName: Yup.string().max(255).required(\"Market Name is required\"),\n        mobile: Yup.string().max(10).required(\"Phone Number is required\"),\n        email: Yup.string()\n          .email(\"Must be a valid email\")\n          .max(255)\n          .required(\"Email is required\"),\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          // NOTE: Make API request\n          console.log(values);\n          await axios.patch(\"/api/auth/\", values);\n          await initialise();\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          toast.success(t(\"User updated\"));\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        setFieldValue,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box sx={{ mt: 4 }} {...props}>\n            <Card>\n              <CardContent>\n                <Grid container spacing={3}>\n                  <Grid item md={4} xs={12}>\n                    <Typography variant=\"h6\">\n                      {t(\"Truck Driver Expenses Categories\")}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {t(\n                        \"Expenses to store the purpose of giving money to driver of own vehicles \"\n                      )}\n                    </Typography>\n                  </Grid>\n                  <Grid item md={8} xs={12}>\n                    <Grid container spacing={3}>\n                      <Grid item xs={8}>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {t(\"Truck Driver Expenses Categories\")}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          {t(\"Show Default\")}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={8}>\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <TextField\n                            error={Boolean(touched.name && errors.name)}\n                            fullWidth\n                            helperText={touched.name && errors.name}\n                            name=\"name\"\n                            size=\"small\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            required\n                            value={values.name}\n                            sx={{\n                              flexGrow: 1,\n                              mr: 3,\n                            }}\n                          />\n                        </Box>\n                      </Grid>\n                      <Grid item xs={4}>\n                        <Checkbox defaultChecked />\n                      </Grid>\n                    </Grid>\n\n                    <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n                      <Button\n                        color=\"secondary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                        variant=\"contained\"\n                      >\n                        Save Changes\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}