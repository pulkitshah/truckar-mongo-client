{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { addressApi } from \"../api/address-api\";\nimport axios from \"../utils/axios\";\nvar initialState = {\n  addresses: [],\n  addressIds: [],\n  isNextPageLoading: true\n};\nexport var slice = createSlice({\n  name: \"address\",\n  initialState: initialState,\n  reducers: {\n    getAddresses: function getAddresses(state, action) {\n      var addresses = action.payload;\n      state.addresses = addresses;\n      state.isNextPageLoading = false;\n    },\n    createAddress: function createAddress(state, action) {\n      var address = action.payload.address;\n      state.addresses = [].concat(_toConsumableArray(state.addresses), [address]);\n    },\n    selectAddress: function selectAddress(state, action) {\n      var _action$payload$addre = action.payload.addressId,\n          addressId = _action$payload$addre === void 0 ? null : _action$payload$addre;\n      state.isModalOpen = true;\n      state.selectedAddressId = addressId;\n    },\n    updateAddress: function updateAddress(state, action) {\n      var address = action.payload.address;\n      state.addresses = _.map(state.addresses, function (_address) {\n        if (_address.id === address.id) {\n          return address;\n        }\n\n        return _address;\n      });\n    },\n    deleteAddress: function deleteAddress(state, action) {\n      var addressId = action.payload.addressId;\n      state.addresses = _.reject(state.addresses, {\n        id: addressId\n      });\n    },\n    selectRange: function selectRange(state, action) {\n      var _action$payload = action.payload,\n          start = _action$payload.start,\n          end = _action$payload.end;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start: start,\n        end: end\n      };\n    },\n    openModal: function openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal: function closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedAddressId = null;\n      state.selectedRange = null;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getAddresses = function getAddresses(limit) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addressApi.getAddressesByUser();\n\n            case 2:\n              response = _context.sent;\n              console.log(\"getAddresses = ()\");\n              dispatch(slice.actions.getAddresses(response.data));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var createAddress = function createAddress(data) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"/api/calendar/addresses/new\", data);\n\n            case 2:\n              response = _context2.sent;\n              dispatch(slice.actions.createAddress(response.data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var selectAddress = function selectAddress(addressId) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch(slice.actions.selectAddress({\n                addressId: addressId\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updateAddress = function updateAddress(addressId, update) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.post(\"/api/calendar/addresses/update\", {\n                addressId: addressId,\n                update: update\n              });\n\n            case 2:\n              response = _context4.sent;\n              dispatch(slice.actions.updateAddress(response.data));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteAddress = function deleteAddress(addressId) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return axios.post(\"/api/calendar/addresses/remove\", {\n                addressId: addressId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteAddress({\n                addressId: addressId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var selectRange = function selectRange(start, end) {\n  return function (dispatch) {\n    dispatch(slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime()\n    }));\n  };\n};\nexport var openModal = function openModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.openModal());\n  };\n};\nexport var closeModal = function closeModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.closeModal());\n  };\n};\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/addresses.js"],"names":["createSlice","_","addressApi","axios","initialState","addresses","addressIds","isNextPageLoading","slice","name","reducers","getAddresses","state","action","payload","createAddress","address","selectAddress","addressId","isModalOpen","selectedAddressId","updateAddress","map","_address","id","deleteAddress","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer","limit","dispatch","getAddressesByUser","response","console","log","actions","data","post","update","getTime"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { addressApi } from \"../api/address-api\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  addresses: [],\n  addressIds: [],\n  isNextPageLoading: true,\n};\n\nexport const slice = createSlice({\n  name: \"address\",\n  initialState,\n  reducers: {\n    getAddresses(state, action) {\n      const addresses = action.payload;\n      state.addresses = addresses;\n      state.isNextPageLoading = false;\n    },\n    createAddress(state, action) {\n      const { address } = action.payload;\n\n      state.addresses = [...state.addresses, address];\n    },\n    selectAddress(state, action) {\n      const { addressId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedAddressId = addressId;\n    },\n    updateAddress(state, action) {\n      const { address } = action.payload;\n\n      state.addresses = _.map(state.addresses, (_address) => {\n        if (_address.id === address.id) {\n          return address;\n        }\n\n        return _address;\n      });\n    },\n    deleteAddress(state, action) {\n      const { addressId } = action.payload;\n\n      state.addresses = _.reject(state.addresses, {\n        id: addressId,\n      });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedAddressId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport const getAddresses = (limit) => async (dispatch) => {\n  const response = await addressApi.getAddressesByUser();\n  console.log(\"getAddresses = ()\");\n  dispatch(slice.actions.getAddresses(response.data));\n};\n\nexport const createAddress = (data) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/addresses/new\", data);\n\n  dispatch(slice.actions.createAddress(response.data));\n};\n\nexport const selectAddress = (addressId) => async (dispatch) => {\n  dispatch(slice.actions.selectAddress({ addressId }));\n};\n\nexport const updateAddress = (addressId, update) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/addresses/update\", {\n    addressId,\n    update,\n  });\n\n  dispatch(slice.actions.updateAddress(response.data));\n};\n\nexport const deleteAddress = (addressId) => async (dispatch) => {\n  await axios.post(\"/api/calendar/addresses/remove\", {\n    addressId,\n  });\n\n  dispatch(slice.actions.deleteAddress({ addressId }));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(\n    slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime(),\n    })\n  );\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}