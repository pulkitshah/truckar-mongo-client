{"ast":null,"code":"import { API } from \"aws-amplify\";\nimport { branchesByUser } from \"../graphql/queries\";\nimport { createBranch } from \"../graphql/mutations\";\nconst now = new Date();\n\nclass BranchApi {\n  async getBranchesByUser(user) {\n    const branchesDB = await API.graphql({\n      query: branchesByUser,\n      variables: {\n        user: user.id.toString()\n      }\n    });\n    return branchesDB;\n  }\n\n  async createBranch(newBranch) {\n    const response = await API.graphql({\n      query: createBranch,\n      variables: {\n        input: newBranch\n      },\n      authMode: \"AMAZON_COGNITO_USER_POOLS\"\n    });\n    return response;\n  }\n\n}\n\nexport const branchApi = new BranchApi();","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/api/branch-api.js"],"names":["API","branchesByUser","createBranch","now","Date","BranchApi","getBranchesByUser","user","branchesDB","graphql","query","variables","id","toString","newBranch","response","input","authMode","branchApi"],"mappings":"AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;;AAEA,MAAMC,SAAN,CAAgB;AACd,QAAMC,iBAAN,CAAwBC,IAAxB,EAA8B;AAC5B,UAAMC,UAAU,GAAG,MAAMR,GAAG,CAACS,OAAJ,CAAY;AACnCC,MAAAA,KAAK,EAAET,cAD4B;AAEnCU,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,IAAI,EAAEA,IAAI,CAACK,EAAL,CAAQC,QAAR;AAAR;AAFwB,KAAZ,CAAzB;AAIA,WAAOL,UAAP;AACD;;AAED,QAAMN,YAAN,CAAmBY,SAAnB,EAA8B;AAC5B,UAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACS,OAAJ,CAAY;AACjCC,MAAAA,KAAK,EAAER,YAD0B;AAEjCS,MAAAA,SAAS,EAAE;AAAEK,QAAAA,KAAK,EAAEF;AAAT,OAFsB;AAGjCG,MAAAA,QAAQ,EAAE;AAHuB,KAAZ,CAAvB;AAKA,WAAOF,QAAP;AACD;;AAhBa;;AAmBhB,OAAO,MAAMG,SAAS,GAAG,IAAIb,SAAJ,EAAlB","sourcesContent":["import { API } from \"aws-amplify\";\nimport { branchesByUser } from \"../graphql/queries\";\nimport { createBranch } from \"../graphql/mutations\";\n\nconst now = new Date();\n\nclass BranchApi {\n  async getBranchesByUser(user) {\n    const branchesDB = await API.graphql({\n      query: branchesByUser,\n      variables: { user: user.id.toString() },\n    });\n    return branchesDB;\n  }\n\n  async createBranch(newBranch) {\n    const response = await API.graphql({\n      query: createBranch,\n      variables: { input: newBranch },\n      authMode: \"AMAZON_COGNITO_USER_POOLS\",\n    });\n    return response;\n  }\n}\n\nexport const branchApi = new BranchApi();\n"]},"metadata":{},"sourceType":"module"}