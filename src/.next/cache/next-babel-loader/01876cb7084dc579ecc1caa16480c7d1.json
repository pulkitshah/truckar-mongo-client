{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-addnew-autocomplete.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Dialog, DialogTitle, Grid, Switch, TextField, Typography } from \"@mui/material\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { partyApi } from \"../../../api/party-api\";\n\nconst AddNewPartyFromAutocomplete = (_ref) => {\n  let {\n    open,\n    toggleOpen,\n    dialogValue,\n    setDialogValue,\n    user\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"open\", \"toggleOpen\", \"dialogValue\", \"setDialogValue\", \"user\"]);\n\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false\n    });\n    toggleOpen(false);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      transporter: dialogValue.transporter\n    });\n\n    try {\n      await partyApi.createParty({\n        name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        }),\n        transporter: dialogValue.transporter\n      }, dispatch);\n      setFieldValue(type, response.data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    handleClose();\n  };\n\n  let formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\").required(\"Mobile is required\")\n    }),\n    onSubmit: async (values, {\n      resetForm,\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        const response = await axios.post(`/api/parties/`, _objectSpread({\n          name: values.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          })\n        }, values));\n        setFieldValue(type, response.data); // dispatch(updateParty(party, values));\n\n        resetForm();\n        setStatus({\n          success: true\n        });\n        setSubmitting(false);\n        handleClose();\n      } catch (err) {\n        console.log(err);\n        setStatus({\n          success: false\n        });\n        setErrors({\n          submit: err.message\n        });\n        setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-name\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-name\",\n        children: \"Add a new party\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n        onSubmit: handleSubmit\n      }, rest), {}, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.name && formik.errors.name),\n                  fullWidth: true,\n                  helperText: formik.touched.name && formik.errors.name,\n                  label: \"Main Contact Name\",\n                  name: \"name\",\n                  onBlur: handleBlur,\n                  onChange: event => {\n                    formik.setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                    }));\n                  },\n                  required: true,\n                  value: formik.values.name,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.mobile && formik.errors.mobile),\n                  fullWidth: true,\n                  helperText: formik.touched.mobile && formik.errors.mobile,\n                  label: \"Mobile\",\n                  name: \"mobile\",\n                  onBlur: handleBlur,\n                  onChange: event => {\n                    setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                  },\n                  value: formik.values.mobile,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  name: \"location\",\n                  field: \"location\",\n                  formik: formik,\n                  error: Boolean(formik.touched.city && formik.errors.city),\n                  label: \"Your city in India\",\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: \"textPrimary\",\n                  children: \"Party Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Is this party a transporter?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: formik.values.transporter,\n                  color: \"secondary\",\n                  edge: \"start\",\n                  name: \"transporter\",\n                  onChange: formik.handleChange,\n                  value: formik.values.transporter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    type: \"submit\",\n                    disabled: formik.isSubmitting,\n                    children: \"Create Party\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: handleClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AddNewPartyFromAutocomplete;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-addnew-autocomplete.js"],"names":["React","useState","useEffect","useCallback","Yup","useFormik","Box","Button","Card","CardContent","Dialog","DialogTitle","Grid","Switch","TextField","Typography","useDispatch","GoogleMaps","partyApi","AddNewPartyFromAutocomplete","open","toggleOpen","dialogValue","setDialogValue","user","rest","handleClose","name","transporter","type","handleSubmit","event","preventDefault","setValue","createParty","replace","txt","charAt","toUpperCase","substr","toLowerCase","dispatch","setFieldValue","response","data","err","console","error","formik","initialValues","mobile","location","submit","validationSchema","object","shape","string","max","required","matches","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","log","axios","post","success","message","Boolean","touched","errors","handleBlur","target","value","city","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { partyApi } from \"../../../api/party-api\";\n\nconst AddNewPartyFromAutocomplete = ({\n  open,\n  toggleOpen,\n  dialogValue,\n  setDialogValue,\n  user,\n  ...rest\n}) => {\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false,\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      transporter: dialogValue.transporter,\n    });\n\n    try {\n      await partyApi.createParty(\n        {\n          name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }),\n          transporter: dialogValue.transporter,\n        },\n        dispatch\n      );\n      setFieldValue(type, response.data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    handleClose();\n  };\n\n  let formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null,\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string()\n        .matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\")\n        .required(\"Mobile is required\"),\n    }),\n    onSubmit: async (\n      values,\n      { resetForm, setErrors, setStatus, setSubmitting }\n    ) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        const response = await axios.post(`/api/parties/`, {\n          name: values.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }),\n          ...values,\n        });\n        setFieldValue(type, response.data);\n        // dispatch(updateParty(party, values));\n        resetForm();\n        setStatus({ success: true });\n        setSubmitting(false);\n        handleClose();\n      } catch (err) {\n        console.log(err);\n        setStatus({ success: false });\n        setErrors({ submit: err.message });\n        setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-name\"\n      >\n        <DialogTitle id=\"form-dialog-name\">Add a new party</DialogTitle>\n        <form onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.name && formik.errors.name)}\n                    fullWidth\n                    helperText={formik.touched.name && formik.errors.name}\n                    label=\"Main Contact Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(\n                        \"name\",\n                        event.target.value.replace(/\\w\\S*/g, function (txt) {\n                          return (\n                            txt.charAt(0).toUpperCase() +\n                            txt.substr(1).toLowerCase()\n                          );\n                        })\n                      );\n                    }}\n                    required\n                    value={formik.values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.mobile && formik.errors.mobile\n                    )}\n                    fullWidth\n                    helperText={formik.touched.mobile && formik.errors.mobile}\n                    label=\"Mobile\"\n                    name=\"mobile\"\n                    onBlur={handleBlur}\n                    onChange={(event) => {\n                      setFieldValue(\n                        \"mobile\",\n                        event.target.value.replace(/ /g, \"\")\n                      );\n                    }}\n                    value={formik.values.mobile}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <GoogleMaps\n                    name={\"location\"}\n                    field={\"location\"}\n                    formik={formik}\n                    error={Boolean(formik.touched.city && formik.errors.city)}\n                    label={\"Your city in India\"}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    values={formik.values}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    Party Type\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Is this party a transporter?\n                  </Typography>\n                  <Switch\n                    checked={formik.values.transporter}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"transporter\"\n                    onChange={formik.handleChange}\n                    value={formik.values.transporter}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Grid container spacing={3}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      type=\"submit\"\n                      disabled={formik.isSubmitting}\n                    >\n                      Create Party\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n};\nexport default AddNewPartyFromAutocomplete;\n"]},"metadata":{},"sourceType":"module"}