{"ast":null,"code":"import _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/grids/grid-columns.js\",\n    _this = this;\n\nimport { Avatar, Link } from \"@mui/material\";\nimport moment from \"moment\";\nvar name = {\n  type: \"string\"\n};\nexport var organisationTable = [{\n  field: \"initials\",\n  headerName: \"üè¢\",\n  headerAlign: \"center\",\n  width: 60,\n  editable: true,\n  renderCell: function renderCell(params) {\n    return /*#__PURE__*/_jsxDEV(Avatar, {\n      children: params.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }, _this);\n  }\n}, {\n  field: \"name\",\n  headerName: \"Business Name\",\n  editable: true,\n  width: 250\n}, {\n  field: \"city\",\n  headerName: \"City\",\n  width: 150,\n  editable: true\n}, {\n  field: \"gstin\",\n  headerName: \"GSTIN\",\n  width: 180,\n  editable: true\n}];\nexport var vehicleTable = [{\n  field: \"initials\",\n  headerName: \"üöö\",\n  headerAlign: \"center\",\n  sx: {\n    fontSize: 50\n  },\n  width: 20\n}, {\n  field: \"vehicleNumber\",\n  headerName: \"Vehicle Number\",\n  width: 250\n}, {\n  field: \"make\",\n  headerName: \"Make\",\n  width: 150\n}, {\n  field: \"model\",\n  headerName: \"Model\",\n  width: 180\n}];\nexport var branchTable = [{\n  field: \"initials\",\n  headerName: \"üè¢\",\n  headerAlign: \"center\",\n  width: 20\n}, {\n  field: \"branchName\",\n  headerName: \"Branch Name\",\n  width: 250\n}, {\n  field: \"city\",\n  headerName: \"City\",\n  width: 150,\n  valueGetter: function valueGetter(params) {\n    return \"\".concat(JSON.parse(params.row.city).structured_formatting.main_text);\n  }\n}];\nexport var partyTable = [{\n  field: \"name\",\n  headerName: \"Name\",\n  width: 250\n}, {\n  field: \"city\",\n  headerName: \"City\",\n  width: 250,\n  valueGetter: function valueGetter(params) {\n    return \"\".concat(JSON.parse(params.row.city).description);\n  }\n}, {\n  field: \"mobile\",\n  headerName: \"Mobile\",\n  width: 150\n}];\nexport var driverTable = [{\n  field: \"initials\",\n  headerName: \"üè¢\",\n  headerAlign: \"center\",\n  width: 20\n}, {\n  field: \"name\",\n  headerName: \"Name\",\n  width: 250\n}, {\n  field: \"mobile\",\n  headerName: \"Mobile\",\n  width: 150\n}];\nexport var orderTable = [{\n  field: \"initials\",\n  headerName: \"üöö\",\n  headerAlign: \"center\",\n  sx: {\n    fontSize: 50\n  },\n  width: 20\n}, {\n  field: \"orderNo\",\n  headerName: \"Order No\",\n  width: 130\n}, {\n  field: \"saleDate\",\n  headerName: \"Date\",\n  width: 130,\n  valueGetter: function valueGetter(params) {\n    if (params.value) {\n      return moment(params.value).format(\"DD/MM/YY\");\n    }\n  }\n}, {\n  field: \"customer\",\n  headerName: \"Customer\",\n  width: 250,\n  valueGetter: function valueGetter(params) {\n    if (params.value) {\n      return params.value.name;\n    }\n  }\n}, {\n  field: \"route\",\n  headerName: \"Route\",\n  width: 250,\n  valueGetter: function valueGetter(params) {\n    var deliveries = JSON.parse(params.row.deliveries);\n    var route = [];\n    var waypoints = [];\n    deliveries.map(function (delivery, index) {\n      if (index === 0) route[0] = delivery.loading.structured_formatting.main_text;\n      if (index === deliveries.length - 1) route[-1] = delivery.unloading.structured_formatting.main_text;\n      waypoints.push(delivery.loading.structured_formatting.main_text);\n      waypoints.push(delivery.unloading.structured_formatting.main_text);\n    });\n    waypoints = waypoints.filter(function (waypoint) {\n      return waypoint !== deliveries[0].loading.structured_formatting.main_text;\n    });\n    waypoints = waypoints.filter(function (waypoint) {\n      return waypoint !== deliveries[deliveries.length - 1].unloading.structured_formatting.main_text;\n    });\n    waypoints = _toConsumableArray(new Map(waypoints.map(function (item) {\n      return [item, item];\n    })).values());\n    return [route[0]].concat(_toConsumableArray(waypoints), [route[-1]]).join(\"-\");\n  }\n}, {\n  field: \"vehicleNumber\",\n  headerName: \"Vehicle Number\",\n  width: 250\n}];\nexport var deliveryDetailsTable = [{\n  field: \"lr\",\n  headerName: \"LR\",\n  width: 90,\n  renderCell: function renderCell() {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      color: \"secondary\",\n      href: \"/app/management/accounts/lr\",\n      variant: \"body\",\n      children: \"Make LR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, _this);\n  }\n}, {\n  field: \"loading\",\n  headerName: \"Loading\",\n  width: 120,\n  valueGetter: function valueGetter(params) {\n    if (params.value) {\n      return params.value.structured_formatting.main_text;\n    }\n  }\n}, {\n  field: \"unloading\",\n  headerName: \"Unloading\",\n  width: 120,\n  valueGetter: function valueGetter(params) {\n    if (params.value) {\n      return params.value.structured_formatting.main_text;\n    }\n  }\n}, {\n  field: \"billQuantity\",\n  headerName: \"Bill Wt\",\n  width: 90,\n  editable: true,\n  valueFormatter: function valueFormatter(params) {\n    return \"\".concat(params.value, \" \").concat(params.api.getRow(params.id).unit);\n  }\n}, {\n  field: \"unloadingQuantity\",\n  headerName: \"Unloading Wt\",\n  width: 120,\n  editable: true,\n  valueFormatter: function valueFormatter(params) {\n    if (params.value) {\n      return \"\".concat(params.value, \" \").concat(params.api.getRow(params.id).unit);\n    } else {\n      return \"0 \".concat(params.api.getRow(params.id).unit);\n    }\n  }\n}];","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/grids/grid-columns.js"],"names":["Avatar","Link","moment","name","type","organisationTable","field","headerName","headerAlign","width","editable","renderCell","params","value","vehicleTable","sx","fontSize","branchTable","valueGetter","JSON","parse","row","city","structured_formatting","main_text","partyTable","description","driverTable","orderTable","format","deliveries","route","waypoints","map","delivery","index","loading","length","unloading","push","filter","waypoint","Map","item","values","join","deliveryDetailsTable","valueFormatter","api","getRow","id","unit"],"mappings":"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","sourcesContent":["import { Avatar, Link } from \"@mui/material\";\nimport moment from \"moment\";\n\nconst name = {\n  type: \"string\",\n};\n\nexport const organisationTable = [\n  {\n    field: \"initials\",\n    headerName: \"üè¢\",\n    headerAlign: \"center\",\n    width: 60,\n    editable: true,\n    renderCell: (params) => {\n      return <Avatar>{params.value}</Avatar>;\n    },\n  },\n  {\n    field: \"name\",\n    headerName: \"Business Name\",\n    editable: true,\n    width: 250,\n  },\n  {\n    field: \"city\",\n    headerName: \"City\",\n    width: 150,\n    editable: true,\n  },\n  {\n    field: \"gstin\",\n    headerName: \"GSTIN\",\n    width: 180,\n    editable: true,\n  },\n];\n\nexport const vehicleTable = [\n  {\n    field: \"initials\",\n    headerName: \"üöö\",\n    headerAlign: \"center\",\n    sx: {\n      fontSize: 50,\n    },\n    width: 20,\n  },\n  {\n    field: \"vehicleNumber\",\n    headerName: \"Vehicle Number\",\n    width: 250,\n  },\n  {\n    field: \"make\",\n    headerName: \"Make\",\n    width: 150,\n  },\n  {\n    field: \"model\",\n    headerName: \"Model\",\n    width: 180,\n  },\n];\n\nexport const branchTable = [\n  {\n    field: \"initials\",\n    headerName: \"üè¢\",\n    headerAlign: \"center\",\n    width: 20,\n  },\n  {\n    field: \"branchName\",\n    headerName: \"Branch Name\",\n    width: 250,\n  },\n  {\n    field: \"city\",\n    headerName: \"City\",\n    width: 150,\n    valueGetter: (params) => {\n      return `${JSON.parse(params.row.city).structured_formatting.main_text}`;\n    },\n  },\n];\n\nexport const partyTable = [\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 250,\n  },\n  {\n    field: \"city\",\n    headerName: \"City\",\n    width: 250,\n    valueGetter: (params) => {\n      return `${JSON.parse(params.row.city).description}`;\n    },\n  },\n  {\n    field: \"mobile\",\n    headerName: \"Mobile\",\n    width: 150,\n  },\n];\n\nexport const driverTable = [\n  {\n    field: \"initials\",\n    headerName: \"üè¢\",\n    headerAlign: \"center\",\n    width: 20,\n  },\n  {\n    field: \"name\",\n    headerName: \"Name\",\n    width: 250,\n  },\n  {\n    field: \"mobile\",\n    headerName: \"Mobile\",\n    width: 150,\n  },\n];\n\nexport const orderTable = [\n  {\n    field: \"initials\",\n    headerName: \"üöö\",\n    headerAlign: \"center\",\n    sx: {\n      fontSize: 50,\n    },\n    width: 20,\n  },\n  {\n    field: \"orderNo\",\n    headerName: \"Order No\",\n    width: 130,\n  },\n  {\n    field: \"saleDate\",\n    headerName: \"Date\",\n    width: 130,\n    valueGetter: (params) => {\n      if (params.value) {\n        return moment(params.value).format(\"DD/MM/YY\");\n      }\n    },\n  },\n  {\n    field: \"customer\",\n    headerName: \"Customer\",\n    width: 250,\n    valueGetter: (params) => {\n      if (params.value) {\n        return params.value.name;\n      }\n    },\n  },\n  {\n    field: \"route\",\n    headerName: \"Route\",\n    width: 250,\n    valueGetter: (params) => {\n      let deliveries = JSON.parse(params.row.deliveries);\n      let route = [];\n      let waypoints = [];\n\n      deliveries.map((delivery, index) => {\n        if (index === 0)\n          route[0] = delivery.loading.structured_formatting.main_text;\n        if (index === deliveries.length - 1)\n          route[-1] = delivery.unloading.structured_formatting.main_text;\n        waypoints.push(delivery.loading.structured_formatting.main_text);\n        waypoints.push(delivery.unloading.structured_formatting.main_text);\n      });\n\n      waypoints = waypoints.filter(\n        (waypoint) =>\n          waypoint !== deliveries[0].loading.structured_formatting.main_text\n      );\n      waypoints = waypoints.filter(\n        (waypoint) =>\n          waypoint !==\n          deliveries[deliveries.length - 1].unloading.structured_formatting\n            .main_text\n      );\n\n      waypoints = [...new Map(waypoints.map((item) => [item, item])).values()];\n\n      return [route[0], ...waypoints, route[-1]].join(\"-\");\n    },\n  },\n  {\n    field: \"vehicleNumber\",\n    headerName: \"Vehicle Number\",\n    width: 250,\n  },\n];\n\nexport const deliveryDetailsTable = [\n  {\n    field: \"lr\",\n    headerName: \"LR\",\n    width: 90,\n    renderCell: () => (\n      <Link\n        color=\"secondary\"\n        href={`/app/management/accounts/lr`}\n        variant=\"body\"\n      >\n        Make LR\n      </Link>\n    ),\n  },\n  {\n    field: \"loading\",\n    headerName: \"Loading\",\n    width: 120,\n    valueGetter: (params) => {\n      if (params.value) {\n        return params.value.structured_formatting.main_text;\n      }\n    },\n  },\n  {\n    field: \"unloading\",\n    headerName: \"Unloading\",\n    width: 120,\n    valueGetter: (params) => {\n      if (params.value) {\n        return params.value.structured_formatting.main_text;\n      }\n    },\n  },\n  {\n    field: \"billQuantity\",\n    headerName: \"Bill Wt\",\n    width: 90,\n    editable: true,\n    valueFormatter: (params) => {\n      return `${params.value} ${params.api.getRow(params.id).unit}`;\n    },\n  },\n  {\n    field: \"unloadingQuantity\",\n    headerName: \"Unloading Wt\",\n    width: 120,\n    editable: true,\n    valueFormatter: (params) => {\n      if (params.value) {\n        return `${params.value} ${params.api.getRow(params.id).unit}`;\n      } else {\n        return `0 ${params.api.getRow(params.id).unit}`;\n      }\n    },\n  },\n];\n"]},"metadata":{},"sourceType":"module"}