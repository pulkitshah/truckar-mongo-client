{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-verify-code.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, FormHelperText, TextField, Typography } from \"@mui/material\";\nimport { useAuth } from \"../../hooks/use-auth\";\nimport { useMounted } from \"../../hooks/use-mounted\";\nexport const AmplifyVerifyCode = props => {\n  const isMounted = useMounted();\n  const router = useRouter();\n  const {\n    verifyCode\n  } = useAuth();\n  const itemsRef = useRef([]);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(props.email);\n  const formik = useFormik({\n    initialValues: {\n      email: username,\n      code: [\"\", \"\", \"\", \"\", \"\", \"\"],\n      submit: null\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\"),\n      code: Yup.array().of(Yup.string().required(\"Code is required\"))\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await verifyCode(values.email, values.code.join(\"\"));\n\n        if (isMounted()) {\n          router.push(\"/authentication/login\");\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (isMounted()) {\n          helpers.setStatus({\n            success: false\n          });\n          helpers.setErrors({\n            submit: err.message\n          });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, 6);\n    const storedUsername = sessionStorage.getItem(\"username\");\n\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    noValidate: true,\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textSecondary\",\n      sx: {\n        mb: 2,\n        mt: 3\n      },\n      variant: \"subtitle2\",\n      children: \"Verification code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        columnGap: \"16px\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(7, 1fr)\",\n        pt: 1\n      },\n      children: [1, 2, 3, 4, 5, 6].map((ref, i) => /*#__PURE__*/_jsxDEV(TextField, {\n        error: Boolean(Array.isArray(formik.touched.code) && formik.touched.code.length === 6 && formik.errors.code),\n        fullWidth: true,\n        inputRef: el => itemsRef.current[i] = el // eslint-disable-next-line react/no-array-index-key\n        ,\n        name: `code[${i}]`,\n        onBlur: formik.handleBlur,\n        onKeyDown: event => {\n          if (event.code === \"Enter\") {\n            if (formik.values.code[i]) {\n              formik.setFieldValue(`code[${i}]`, \"\");\n              return;\n            }\n\n            if (i > 0) {\n              formik.setFieldValue(`code[${i}]`, \"\");\n              itemsRef.current[i - 1].focus();\n              return;\n            }\n          }\n\n          if (Number.isInteger(parseInt(event.key, 10))) {\n            formik.setFieldValue(`code[${i}]`, event.key);\n\n            if (i < 5) {\n              itemsRef.current[i + 1].focus();\n            }\n          }\n        },\n        onPaste: event => {\n          const paste = event.clipboardData.getData(\"text\");\n          const pasteArray = paste.split(\"\");\n\n          if (pasteArray.length !== 6) {\n            return;\n          }\n\n          let valid = true;\n          pasteArray.forEach(x => {\n            if (!Number.isInteger(parseInt(x, 10))) {\n              valid = false;\n            }\n          });\n\n          if (valid) {\n            formik.setFieldValue(\"code\", pasteArray);\n            itemsRef.current[5].focus();\n          }\n        },\n        value: formik.values.code[i],\n        sx: {\n          display: \"inline-block\",\n          textAlign: \"center\",\n          \"& .MuiInputBase-input\": {\n            textAlign: \"center\"\n          }\n        }\n      }, `code-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), Boolean(Array.isArray(formik.touched.code) && formik.touched.code.length === 6 && formik.errors.code) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      sx: {\n        mx: \"14px\"\n      },\n      children: Array.isArray(formik.errors.code) && formik.errors.code.find(x => x !== undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: formik.errors.submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formik.isSubmitting,\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-verify-code.js"],"names":["useEffect","useRef","useState","useRouter","Yup","useFormik","Box","Button","FormHelperText","TextField","Typography","useAuth","useMounted","AmplifyVerifyCode","props","isMounted","router","verifyCode","itemsRef","username","setUsername","email","formik","initialValues","code","submit","validationSchema","object","string","max","required","array","of","onSubmit","values","helpers","join","push","err","console","error","setStatus","success","setErrors","message","setSubmitting","current","slice","storedUsername","sessionStorage","getItem","handleSubmit","mb","mt","columnGap","display","gridTemplateColumns","pt","map","ref","i","Boolean","Array","isArray","touched","length","errors","el","handleBlur","event","setFieldValue","focus","Number","isInteger","parseInt","key","paste","clipboardData","getData","pasteArray","split","valid","forEach","x","textAlign","mx","find","undefined","isSubmitting"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useAuth } from \"../../hooks/use-auth\";\nimport { useMounted } from \"../../hooks/use-mounted\";\n\nexport const AmplifyVerifyCode = (props) => {\n  const isMounted = useMounted();\n  const router = useRouter();\n  const { verifyCode } = useAuth();\n  const itemsRef = useRef([]);\n  const [username, setUsername] = useState(props.email);\n  const formik = useFormik({\n    initialValues: {\n      email: username,\n      code: [\"\", \"\", \"\", \"\", \"\", \"\"],\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(\"Must be a valid email\")\n        .max(255)\n        .required(\"Email is required\"),\n      code: Yup.array().of(Yup.string().required(\"Code is required\")),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await verifyCode(values.email, values.code.join(\"\"));\n\n        if (isMounted()) {\n          router.push(\"/authentication/login\");\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted()) {\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      }\n    },\n  });\n\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, 6);\n\n    const storedUsername = sessionStorage.getItem(\"username\");\n\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n  }, []);\n\n  return (\n    <form noValidate onSubmit={formik.handleSubmit} {...props}>\n      <Typography\n        color=\"textSecondary\"\n        sx={{\n          mb: 2,\n          mt: 3,\n        }}\n        variant=\"subtitle2\"\n      >\n        Verification code\n      </Typography>\n      <Box\n        sx={{\n          columnGap: \"16px\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(7, 1fr)\",\n          pt: 1,\n        }}\n      >\n        {[1, 2, 3, 4, 5, 6].map((ref, i) => (\n          <TextField\n            error={Boolean(\n              Array.isArray(formik.touched.code) &&\n                formik.touched.code.length === 6 &&\n                formik.errors.code\n            )}\n            fullWidth\n            inputRef={(el) => (itemsRef.current[i] = el)}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`code-${i}`}\n            name={`code[${i}]`}\n            onBlur={formik.handleBlur}\n            onKeyDown={(event) => {\n              if (event.code === \"Enter\") {\n                if (formik.values.code[i]) {\n                  formik.setFieldValue(`code[${i}]`, \"\");\n                  return;\n                }\n\n                if (i > 0) {\n                  formik.setFieldValue(`code[${i}]`, \"\");\n                  itemsRef.current[i - 1].focus();\n                  return;\n                }\n              }\n\n              if (Number.isInteger(parseInt(event.key, 10))) {\n                formik.setFieldValue(`code[${i}]`, event.key);\n\n                if (i < 5) {\n                  itemsRef.current[i + 1].focus();\n                }\n              }\n            }}\n            onPaste={(event) => {\n              const paste = event.clipboardData.getData(\"text\");\n              const pasteArray = paste.split(\"\");\n\n              if (pasteArray.length !== 6) {\n                return;\n              }\n\n              let valid = true;\n\n              pasteArray.forEach((x) => {\n                if (!Number.isInteger(parseInt(x, 10))) {\n                  valid = false;\n                }\n              });\n\n              if (valid) {\n                formik.setFieldValue(\"code\", pasteArray);\n                itemsRef.current[5].focus();\n              }\n            }}\n            value={formik.values.code[i]}\n            sx={{\n              display: \"inline-block\",\n              textAlign: \"center\",\n              \"& .MuiInputBase-input\": {\n                textAlign: \"center\",\n              },\n            }}\n          />\n        ))}\n      </Box>\n      {Boolean(\n        Array.isArray(formik.touched.code) &&\n          formik.touched.code.length === 6 &&\n          formik.errors.code\n      ) && (\n        <FormHelperText error sx={{ mx: \"14px\" }}>\n          {Array.isArray(formik.errors.code) &&\n            formik.errors.code.find((x) => x !== undefined)}\n        </FormHelperText>\n      )}\n      {formik.errors.submit && (\n        <Box sx={{ mt: 3 }}>\n          <FormHelperText error>{formik.errors.submit}</FormHelperText>\n        </Box>\n      )}\n      <Box sx={{ mt: 3 }}>\n        <Button\n          disabled={formik.isSubmitting}\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Verify\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}