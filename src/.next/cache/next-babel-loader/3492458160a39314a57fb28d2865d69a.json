{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-create-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nvar toBlob = require(\"canvas-to-blob\");\n\nimport { Box, Button, Card, CardContent, FormControlLabel, FormHelperText, Grid, MenuItem, Switch, TextField, Typography } from \"@mui/material\";\nimport { OrganisationLogoDropzone } from \"./organisation-logo-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { getInitials } from \"../../../utils/get-initials\";\nimport { API, Storage } from \"aws-amplify\";\nimport { createOrganisation } from \"../../../graphql/mutations\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Organisation } from \"../../../models\";\nimport { v4 as uuid } from \"uuid\";\nexport const OrganisationCreateForm = props => {\n  const router = useRouter();\n  const {\n    0: croppedImage,\n    1: setCroppedImage\n  } = useState();\n  const {\n    0: file,\n    1: setFile\n  } = useState();\n  const {\n    user\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      initials: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      pincode: \"\",\n      gstin: \"\",\n      pan: \"\",\n      invoiceTermsAndConditions: \"\",\n      logo: \"\",\n      bankName: \"\",\n      bankAccountNumber: \"\",\n      bankBranchName: \"\",\n      bankIFSC: \"\",\n      contact: \"\"\n    },\n    // validationSchema: Yup.object({\n    //   name: Yup.string().max(255).required(\"Name is required\"),\n    //   initials: Yup.string().max(255).required(\"Required\"),\n    //   addressLine1: Yup.string()\n    //     .max(255)\n    //     .required(\"Address Line 1 is required\"),\n    //   city: Yup.string().max(255).required(\"City is required\"),\n    //   pincode: Yup.string().max(255).required(\"Pincode is required\"),\n    //   gstin: Yup.string()\n    //     .trim()\n    //     .matches(\n    //       /^([0-9]){2}([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}([0-9]){1}([a-zA-Z]){1}([0-9]){1}?$/,\n    //       \"Invalid GST Number\"\n    //     ),\n    //   pan: Yup.string().max(255).required(\"PAN is required\"),\n    //   jurisdiction: Yup.string().max(255).required(\"Jurisdiction is required\"),\n    // }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        const id = uuid();\n        values.id = id;\n        values.user = user.id;\n\n        const blobToFile = (theBlob, fileName) => {\n          theBlob.lastModifiedDate = new Date();\n          theBlob.name = fileName;\n          return theBlob;\n        };\n\n        const blob = toBlob(values.logo, \"image/png\");\n        const filename = `${user.id}_organisationLogo_${id}`;\n        const logo = blobToFile(blob, fileName);\n        values.logo = filename;\n        console.log(values);\n        const response = await API.graphql({\n          query: createOrganisation,\n          variables: {\n            input: values\n          },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\"\n        });\n        await Storage.put(filename, logo);\n        toast.success(\"Organisation created!\"); // router.push(\"/dashboard/organisations\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  const handleDrop = newFile => {\n    newFile.length > 0 && setFile(Object.assign(newFile[0], {\n      preview: URL.createObjectURL(newFile[0])\n    }));\n  };\n\n  const handleRemove = file => {\n    setFile();\n    setCroppedImage(\"\");\n  };\n\n  const handleSaveCroppedImage = cropper => {\n    setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n    formik.setFieldValue(`logo`, cropper.getCroppedCanvas().toDataURL());\n    console.log(cropper.getCroppedCanvas().toDataURL());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Business details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 10,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.name && formik.errors.name),\n                  fullWidth: true,\n                  helperText: formik.touched.name && formik.errors.name,\n                  label: \"Business Name\",\n                  name: \"name\",\n                  onBlur: formik.handleBlur,\n                  onChange: event => {\n                    formik.setFieldValue(`initials`, `${getInitials(event.target.value)}`);\n                    formik.setFieldValue(`name`, event.target.value);\n                  },\n                  value: formik.values.name,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.initials && formik.errors.initials),\n                  fullWidth: true,\n                  helperText: formik.touched.initials && formik.errors.initials,\n                  label: \"Initials\",\n                  name: \"initials\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.initials,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.addressLine1 && formik.errors.addressLine1),\n                  fullWidth: true,\n                  helperText: formik.touched.addressLine1 && formik.errors.addressLine1,\n                  label: \"Address Line 1\",\n                  name: \"addressLine1\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.addressLine1,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.addressLine2 && formik.errors.addressLine2),\n                  fullWidth: true,\n                  helperText: formik.touched.addressLine2 && formik.errors.addressLine2,\n                  label: \"Address Line 2\",\n                  name: \"addressLine2\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.addressLine2,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.city && formik.errors.city),\n                  fullWidth: true,\n                  helperText: formik.touched.city && formik.errors.city,\n                  label: \"City (Jurisdication)\",\n                  name: \"city\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.city,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.pincode && formik.errors.pincode),\n                  fullWidth: true,\n                  helperText: formik.touched.pincode && formik.errors.pincode,\n                  label: \"Pincode\",\n                  name: \"pincode\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.pincode,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Bank details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.bankName && formik.errors.bankName),\n                  fullWidth: true,\n                  helperText: formik.touched.bankName && formik.errors.bankName,\n                  label: \"Bank name\",\n                  name: \"bankName\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.bankName,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.bankAccountNumber && formik.errors.bankAccountNumber),\n                  fullWidth: true,\n                  helperText: formik.touched.bankAccountNumber && formik.errors.bankAccountNumber,\n                  label: \"Bank Account Number\",\n                  name: \"bankAccountNumber\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.bankAccountNumber,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.bankBranchName && formik.errors.bankBranchName),\n                  fullWidth: true,\n                  helperText: formik.touched.bankBranchName && formik.errors.bankBranchName,\n                  label: \"Bank Branch Name\",\n                  name: \"bankBranchName\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.bankBranchName,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.bankIFSC && formik.errors.bankIFSC),\n                  fullWidth: true,\n                  helperText: formik.touched.bankIFSC && formik.errors.bankIFSC,\n                  label: \"Bank IFS Code\",\n                  name: \"bankIFSC\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.bankIFSC,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Billing details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.contact && formik.errors.contact),\n                  fullWidth: true,\n                  helperText: formik.touched.contact && formik.errors.contact,\n                  label: \"Contact\",\n                  name: \"contact\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.contact,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.email && formik.errors.email),\n                  fullWidth: true,\n                  helperText: formik.touched.email && formik.errors.email,\n                  label: \"Email\",\n                  name: \"email\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.email,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.gstin && formik.errors.gstin),\n                  fullWidth: true,\n                  helperText: formik.touched.gstin && formik.errors.gstin,\n                  label: \"GSTIN\",\n                  name: \"gstin\",\n                  onBlur: formik.handleBlur,\n                  onChange: event => {\n                    formik.setFieldValue(`gstin`, `${event.target.value}`);\n                    formik.setFieldValue(`pan`, `${event.target.value.substr(2, 11)}`);\n                  },\n                  value: formik.values.gstin,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.pan && formik.errors.pan),\n                  fullWidth: true,\n                  helperText: formik.touched.pan && formik.errors.pan,\n                  label: \"PAN\",\n                  name: \"pan\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.pan,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: true,\n                  error: Boolean(formik.touched.invoiceTermsAndConditions && formik.errors.invoiceTermsAndConditions),\n                  fullWidth: true,\n                  helperText: formik.touched.invoiceTermsAndConditions && formik.errors.invoiceTermsAndConditions,\n                  label: \"Bill Terms and Conditions\",\n                  name: \"invoiceTermsAndConditions\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.invoiceTermsAndConditions,\n                  variant: \"outlined\",\n                  rows: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Business Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              sx: {\n                mt: 1\n              },\n              children: \"Logo will appear on your LR, Bill and other documents.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(OrganisationLogoDropzone, {\n              accept: \"image/*\",\n              file: file,\n              croppedImage: croppedImage,\n              onDrop: handleDrop,\n              onRemove: handleRemove,\n              maxFiles: 1,\n              onSaveCroppedImage: handleSaveCroppedImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"675px\",\n                height: \"150px\"\n              },\n              src: croppedImage,\n              alt: \"cropped\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), croppedImage && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: \"flex\",\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleRemove,\n                size: \"small\",\n                type: \"button\",\n                children: \"Remove Logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-create-form.js"],"names":["useState","useRouter","toast","Yup","useFormik","toBlob","require","Box","Button","Card","CardContent","FormControlLabel","FormHelperText","Grid","MenuItem","Switch","TextField","Typography","OrganisationLogoDropzone","QuillEditor","useAuth","getInitials","API","Storage","createOrganisation","DataStore","Predicates","Organisation","v4","uuid","OrganisationCreateForm","props","router","croppedImage","setCroppedImage","file","setFile","user","formik","initialValues","name","initials","addressLine1","addressLine2","city","pincode","gstin","pan","invoiceTermsAndConditions","logo","bankName","bankAccountNumber","bankBranchName","bankIFSC","contact","onSubmit","values","helpers","console","log","id","blobToFile","theBlob","fileName","lastModifiedDate","Date","blob","filename","response","graphql","query","variables","input","authMode","put","success","err","error","setStatus","setErrors","submit","message","setSubmitting","handleDrop","newFile","length","Object","assign","preview","URL","createObjectURL","handleRemove","handleSaveCroppedImage","cropper","getCroppedCanvas","toDataURL","setFieldValue","handleSubmit","Boolean","touched","errors","handleBlur","event","target","value","handleChange","mt","email","substr","width","height","display","flexWrap","justifyContent","mx","mb","m","mr"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nvar toBlob = require(\"canvas-to-blob\");\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { OrganisationLogoDropzone } from \"./organisation-logo-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { getInitials } from \"../../../utils/get-initials\";\n\nimport { API, Storage } from \"aws-amplify\";\nimport { createOrganisation } from \"../../../graphql/mutations\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nimport { Organisation } from \"../../../models\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const OrganisationCreateForm = (props) => {\n  const router = useRouter();\n  const [croppedImage, setCroppedImage] = useState();\n  const [file, setFile] = useState();\n  const { user } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      initials: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      pincode: \"\",\n      gstin: \"\",\n      pan: \"\",\n      invoiceTermsAndConditions: \"\",\n      logo: \"\",\n      bankName: \"\",\n      bankAccountNumber: \"\",\n      bankBranchName: \"\",\n      bankIFSC: \"\",\n      contact: \"\",\n    },\n    // validationSchema: Yup.object({\n    //   name: Yup.string().max(255).required(\"Name is required\"),\n    //   initials: Yup.string().max(255).required(\"Required\"),\n    //   addressLine1: Yup.string()\n    //     .max(255)\n    //     .required(\"Address Line 1 is required\"),\n    //   city: Yup.string().max(255).required(\"City is required\"),\n    //   pincode: Yup.string().max(255).required(\"Pincode is required\"),\n    //   gstin: Yup.string()\n    //     .trim()\n    //     .matches(\n    //       /^([0-9]){2}([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}([0-9]){1}([a-zA-Z]){1}([0-9]){1}?$/,\n    //       \"Invalid GST Number\"\n    //     ),\n    //   pan: Yup.string().max(255).required(\"PAN is required\"),\n    //   jurisdiction: Yup.string().max(255).required(\"Jurisdiction is required\"),\n    // }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        const id = uuid();\n        values.id = id;\n        values.user = user.id;\n\n        const blobToFile = (theBlob, fileName) => {\n          theBlob.lastModifiedDate = new Date();\n          theBlob.name = fileName;\n          return theBlob;\n        };\n\n        const blob = toBlob(values.logo, \"image/png\");\n        const filename = `${user.id}_organisationLogo_${id}`;\n        const logo = blobToFile(blob, fileName);\n        values.logo = filename;\n        console.log(values);\n\n        const response = await API.graphql({\n          query: createOrganisation,\n          variables: { input: values },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\",\n        });\n\n        await Storage.put(filename, logo);\n\n        toast.success(\"Organisation created!\");\n        // router.push(\"/dashboard/organisations\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  const handleDrop = (newFile) => {\n    newFile.length > 0 &&\n      setFile(\n        Object.assign(newFile[0], {\n          preview: URL.createObjectURL(newFile[0]),\n        })\n      );\n  };\n\n  const handleRemove = (file) => {\n    setFile();\n    setCroppedImage(\"\");\n  };\n\n  const handleSaveCroppedImage = (cropper) => {\n    setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n    formik.setFieldValue(`logo`, cropper.getCroppedCanvas().toDataURL());\n    console.log(cropper.getCroppedCanvas().toDataURL());\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Business details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={10} xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.name && formik.errors.name)}\n                    fullWidth\n                    helperText={formik.touched.name && formik.errors.name}\n                    label=\"Business Name\"\n                    name=\"name\"\n                    onBlur={formik.handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(\n                        `initials`,\n                        `${getInitials(event.target.value)}`\n                      );\n                      formik.setFieldValue(`name`, event.target.value);\n                    }}\n                    value={formik.values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={2} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.initials && formik.errors.initials\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.initials && formik.errors.initials\n                    }\n                    label=\"Initials\"\n                    name=\"initials\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.initials}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.addressLine1 && formik.errors.addressLine1\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.addressLine1 && formik.errors.addressLine1\n                    }\n                    label=\"Address Line 1\"\n                    name=\"addressLine1\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.addressLine1}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.addressLine2 && formik.errors.addressLine2\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.addressLine2 && formik.errors.addressLine2\n                    }\n                    label=\"Address Line 2\"\n                    name=\"addressLine2\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.addressLine2}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.city && formik.errors.city)}\n                    fullWidth\n                    helperText={formik.touched.city && formik.errors.city}\n                    label=\"City (Jurisdication)\"\n                    name=\"city\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.city}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.pincode && formik.errors.pincode\n                    )}\n                    fullWidth\n                    helperText={formik.touched.pincode && formik.errors.pincode}\n                    label=\"Pincode\"\n                    name=\"pincode\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.pincode}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Bank details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.bankName && formik.errors.bankName\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.bankName && formik.errors.bankName\n                    }\n                    label=\"Bank name\"\n                    name=\"bankName\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.bankName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.bankAccountNumber &&\n                        formik.errors.bankAccountNumber\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.bankAccountNumber &&\n                      formik.errors.bankAccountNumber\n                    }\n                    label=\"Bank Account Number\"\n                    name=\"bankAccountNumber\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.bankAccountNumber}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.bankBranchName &&\n                        formik.errors.bankBranchName\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.bankBranchName &&\n                      formik.errors.bankBranchName\n                    }\n                    label=\"Bank Branch Name\"\n                    name=\"bankBranchName\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.bankBranchName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.bankIFSC && formik.errors.bankIFSC\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.bankIFSC && formik.errors.bankIFSC\n                    }\n                    label=\"Bank IFS Code\"\n                    name=\"bankIFSC\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.bankIFSC}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Billing details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.contact && formik.errors.contact\n                    )}\n                    fullWidth\n                    helperText={formik.touched.contact && formik.errors.contact}\n                    label=\"Contact\"\n                    name=\"contact\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.contact}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.email && formik.errors.email)}\n                    fullWidth\n                    helperText={formik.touched.email && formik.errors.email}\n                    label=\"Email\"\n                    name=\"email\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.gstin && formik.errors.gstin)}\n                    fullWidth\n                    helperText={formik.touched.gstin && formik.errors.gstin}\n                    label=\"GSTIN\"\n                    name=\"gstin\"\n                    onBlur={formik.handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(`gstin`, `${event.target.value}`);\n                      formik.setFieldValue(\n                        `pan`,\n                        `${event.target.value.substr(2, 11)}`\n                      );\n                    }}\n                    value={formik.values.gstin}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.pan && formik.errors.pan)}\n                    fullWidth\n                    helperText={formik.touched.pan && formik.errors.pan}\n                    label=\"PAN\"\n                    name=\"pan\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.pan}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    multiline\n                    error={Boolean(\n                      formik.touched.invoiceTermsAndConditions &&\n                        formik.errors.invoiceTermsAndConditions\n                    )}\n                    fullWidth\n                    helperText={\n                      formik.touched.invoiceTermsAndConditions &&\n                      formik.errors.invoiceTermsAndConditions\n                    }\n                    label=\"Bill Terms and Conditions\"\n                    name=\"invoiceTermsAndConditions\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.invoiceTermsAndConditions}\n                    variant=\"outlined\"\n                    rows={6}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Business Logo</Typography>\n              <Typography color=\"textSecondary\" variant=\"body2\" sx={{ mt: 1 }}>\n                Logo will appear on your LR, Bill and other documents.\n              </Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <OrganisationLogoDropzone\n                accept=\"image/*\"\n                file={file}\n                croppedImage={croppedImage}\n                onDrop={handleDrop}\n                onRemove={handleRemove}\n                maxFiles={1}\n                onSaveCroppedImage={handleSaveCroppedImage}\n              />\n              {croppedImage && (\n                <img\n                  style={{ width: \"675px\", height: \"150px\" }}\n                  src={croppedImage}\n                  alt=\"cropped\"\n                />\n              )}\n              {croppedImage && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n\n                    mt: 2,\n                  }}\n                >\n                  <Button onClick={handleRemove} size=\"small\" type=\"button\">\n                    Remove Logo\n                  </Button>\n                </Box>\n              )}\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}