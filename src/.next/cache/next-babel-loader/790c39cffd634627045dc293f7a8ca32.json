{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { useFormik, FormikProvider, FieldArray, getIn } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Box, Button, Card, CardContent, Checkbox, FormGroup, FormControlLabel, Grid, IconButton, TextField, Typography } from \"@mui/material\";\nexport var AccountOrderLRInvoiceSettings = function AccountOrderLRInvoiceSettings(props) {\n  _s();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [{\n        id: uuidv4(),\n        driverExpenseName: \"\",\n        showDefault: \"\"\n      }]\n    },\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var newOrder;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                newOrder = {\n                  deliveries: JSON.stringify(values.deliveryDetails)\n                };\n                _context.next = 4;\n                return orderApi.createOrder(newOrder, dispatch);\n\n              case 4:\n                toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n\n                _context.next = 14;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                toast.error(\"Something went wrong!\");\n                helpers.setStatus({\n                  success: false\n                });\n                helpers.setErrors({\n                  submit: _context.t0.message\n                });\n                helpers.setSubmitting(false);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"deliveryDetails\",\n        error: formik.errors,\n        children: function children(_ref) {\n          var remove = _ref.remove,\n              push = _ref.push;\n          return /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n            sx: {\n              mt: 4\n            }\n          }, props), {}, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: t(\"Truck Driver Expenses Categories\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      children: t(\"Expenses to store the purpose of giving money to driver of own vehicles \")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 8,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 8,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: t(\"Truck Driver Expenses Categories\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 79,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: t(\"Show Default\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 8,\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          sx: {\n                            display: \"flex\",\n                            alignItems: \"center\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            fullWidth: true,\n                            name: \"name\",\n                            size: \"small\",\n                            required: true,\n                            sx: {\n                              flexGrow: 1,\n                              mr: 3\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 95,\n                            columnNumber: 29\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 89,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 4,\n                        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          defaultChecked: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 108,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                      p: 2,\n                      display: \"flex\",\n                      justifyContent: \"flex-end\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"secondary\",\n                        disabled: isSubmitting,\n                        type: \"submit\",\n                        variant: \"contained\",\n                        children: \"Save Changes\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AccountOrderLRInvoiceSettings, \"eshX7EeVS5Od/tvlVZEmAguht+U=\", false, function () {\n  return [useAuth, useTranslation, useFormik];\n});\n\n_c = AccountOrderLRInvoiceSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountOrderLRInvoiceSettings\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js"],"names":["useRef","useState","v4","uuidv4","useTranslation","toast","useFormik","FormikProvider","FieldArray","getIn","Yup","useAuth","Box","Button","Card","CardContent","Checkbox","FormGroup","FormControlLabel","Grid","IconButton","TextField","Typography","AccountOrderLRInvoiceSettings","props","user","t","formik","initialValues","driverExpensesCategories","id","driverExpenseName","showDefault","onSubmit","values","helpers","newOrder","deliveries","JSON","stringify","deliveryDetails","orderApi","createOrder","dispatch","success","console","error","setStatus","setErrors","submit","message","setSubmitting","handleSubmit","errors","remove","push","mt","display","alignItems","flexGrow","mr","isSubmitting"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { useFormik, FormikProvider, FieldArray, getIn } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../../hooks/use-auth\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nexport const AccountOrderLRInvoiceSettings = (props) => {\n  const { user } = useAuth();\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [\n        {\n          id: uuidv4(),\n          driverExpenseName: \"\",\n          showDefault: \"\",\n        },\n      ],\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        const newOrder = {\n          deliveries: JSON.stringify(values.deliveryDetails),\n        };\n\n        await orderApi.createOrder(newOrder, dispatch);\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n          {({ remove, push }) => (\n            <Box sx={{ mt: 4 }} {...props}>\n              <Card>\n                <CardContent>\n                  <Grid container spacing={3}>\n                    <Grid item md={4} xs={12}>\n                      <Typography variant=\"h6\">\n                        {t(\"Truck Driver Expenses Categories\")}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {t(\n                          \"Expenses to store the purpose of giving money to driver of own vehicles \"\n                        )}\n                      </Typography>\n                    </Grid>\n                    <Grid item md={8} xs={12}>\n                      <Grid container spacing={3}>\n                        <Grid item xs={8}>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            {t(\"Truck Driver Expenses Categories\")}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            {t(\"Show Default\")}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={8}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <TextField\n                              fullWidth\n                              name=\"name\"\n                              size=\"small\"\n                              required\n                              sx={{\n                                flexGrow: 1,\n                                mr: 3,\n                              }}\n                            />\n                          </Box>\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Checkbox defaultChecked />\n                        </Grid>\n                      </Grid>\n\n                      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n                        <Button\n                          color=\"secondary\"\n                          disabled={isSubmitting}\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Save Changes\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Box>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}