{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button, Divider, TextField } from \"@mui/material\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = (_ref) => {\n  let {\n    formik\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n  const [googleResponse, setResponse] = React.useState([]);\n\n  let distanceCallback = response => {\n    if (response !== null) {\n      if (response.rows[0].elements[0].status === \"OK\") {\n        const index = googleResponse.findIndex(obj => obj.origin === response.originAddresses[0] && obj.destination === response.destinationAddresses[0]);\n\n        if (index < 0) {\n          console.log(response);\n          setResponse([...googleResponse, {\n            origin: response.originAddresses[0],\n            destination: response.destinationAddresses[0],\n            distance: response.rows[0].elements[0].distance.text,\n            duration: response.rows[0].elements[0].duration.text\n          }]);\n        }\n      }\n    }\n  };\n\n  let getDistance = (origin, destination) => {\n    let object = googleResponse.find(obj => obj.origin === origin && obj.destination === destination);\n    if (object) return object.distance;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"deliveryDetails\",\n        error: formik.errors,\n        children: ({\n          remove,\n          push\n        }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            sx: {\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"Total Deliveries: \", noOfDeliveries]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 32\n                }, this),\n                onClick: () => {\n                  setNoOfDeliveries(noOfDeliveries + 1);\n                  push({\n                    loading: \"\",\n                    unloading: \"\"\n                  });\n                },\n                children: \"Add Delivery\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), formik.values.deliveryDetails.length > 0 && formik.values.deliveryDetails.map((delivery, index) => {\n            const loading = `deliveryDetails[${index}].loading`;\n            const touchedLoading = getIn(formik.touched, loading);\n            const errorLoading = getIn(formik.errors, loading);\n            const unloading = `deliveryDetails[${index}].unloading`;\n            const touchedUnloading = getIn(formik.touched, unloading);\n            const errorUnloading = getIn(formik.errors, unloading);\n            const billQuantity = `deliveryDetails[${index}].billQuantity`;\n            const touchedBillQuantity = getIn(formik.touched, billQuantity);\n            const errorBillQuantity = getIn(formik.errors, billQuantity);\n            const unloadingQuantity = `deliveryDetails[${index}].unloadingQuantity`;\n            const touchedUnloadingQuantity = getIn(formik.touched, unloadingQuantity);\n            const errorUnloadingQuantity = getIn(formik.errors, unloadingQuantity);\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [index > 0 && /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                className: \"row\",\n                alignItems: \"center\",\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                    label: \"Loading\",\n                    error: errorLoading,\n                    touched: touchedLoading,\n                    name: loading,\n                    setFieldValue: formik.setFieldValue,\n                    handleBlur: formik.handleBlur,\n                    values: formik.values,\n                    index: index,\n                    type: \"loading\",\n                    formik: formik\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                    label: \"Unloading\",\n                    error: errorUnloading,\n                    touched: touchedUnloading,\n                    name: loading,\n                    setFieldValue: formik.setFieldValue,\n                    handleBlur: formik.handleBlur,\n                    values: formik.values,\n                    index: index,\n                    type: \"unloading\",\n                    formik: formik\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 2,\n                  xs: 12,\n                  className: \"col\",\n                  children: [delivery.loading.description && delivery.unloading.description && /*#__PURE__*/_jsxDEV(DistanceMatrixService, {\n                    options: {\n                      origins: [delivery.loading.description],\n                      destinations: [delivery.unloading.description],\n                      travelMode: \"DRIVING\"\n                    } // required\n                    ,\n                    callback: distanceCallback\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: getDistance(delivery.loading.description, delivery.unloading.description)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: index < 1,\n                    color: \"secondary\",\n                    onClick: () => {\n                      setNoOfDeliveries(noOfDeliveries - 1);\n                      remove(index);\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                className: \"row\",\n                alignItems: \"center\",\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    helperText: touchedBillQuantity && errorBillQuantity ? errorBillQuantity : \"\",\n                    error: Boolean(touchedBillQuantity && errorBillQuantity),\n                    variant: \"outlined\",\n                    onChange: event => {\n                      formik.setFieldValue(`deliveryDetails[${index}].billQuantity`, event.target.value);\n                    },\n                    onBlur: formik.handleBlur,\n                    id: \"billQuantity\",\n                    name: \"billQuantity\",\n                    label: \"Bill Quantity\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    helperText: touchedUnloadingQuantity && errorUnloadingQuantity ? errorUnloadingQuantity : \"\",\n                    error: Boolean(touchedUnloadingQuantity && errorUnloadingQuantity),\n                    variant: \"outlined\",\n                    onChange: event => {\n                      console.log(event.target.value);\n                      formik.setFieldValue(`deliveryDetails[${index}].unloadingQuantity`, event.target.value);\n                    },\n                    onBlur: formik.handleBlur,\n                    id: \"unloadingQuantity\",\n                    name: \"unloadingQuantity\",\n                    label: \"Unloading Quantity\",\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 25\n                }, this), console.log(formik.values), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 2,\n                  xs: 12,\n                  className: \"col\",\n                  children: [delivery.loading.description && delivery.unloading.description && /*#__PURE__*/_jsxDEV(DistanceMatrixService, {\n                    options: {\n                      origins: [delivery.loading.description],\n                      destinations: [delivery.unloading.description],\n                      travelMode: \"DRIVING\"\n                    } // required\n                    ,\n                    callback: distanceCallback\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: getDistance(delivery.loading.description, delivery.unloading.description)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: index < 1,\n                    color: \"secondary\",\n                    onClick: () => {\n                      setNoOfDeliveries(noOfDeliveries - 1);\n                      remove(index);\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 25\n                }, this)]\n              }, index + 1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DeliveryForm;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FormikProvider","FieldArray","getIn","Grid","Typography","Button","Divider","TextField","DistanceMatrixService","Plus","PlusIcon","GoogleMaps","DeliveryForm","formik","rest","noOfDeliveries","setNoOfDeliveries","useState","googleResponse","setResponse","distanceCallback","response","rows","elements","status","index","findIndex","obj","origin","originAddresses","destination","destinationAddresses","console","log","distance","text","duration","getDistance","object","find","errors","remove","push","mb","loading","unloading","values","deliveryDetails","length","map","delivery","touchedLoading","touched","errorLoading","touchedUnloading","errorUnloading","billQuantity","touchedBillQuantity","errorBillQuantity","unloadingQuantity","touchedUnloadingQuantity","errorUnloadingQuantity","setFieldValue","handleBlur","description","origins","destinations","travelMode","Boolean","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button, Divider, TextField } from \"@mui/material\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\n\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({ formik, ...rest }) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n  const [googleResponse, setResponse] = React.useState([]);\n\n  let distanceCallback = (response) => {\n    if (response !== null) {\n      if (response.rows[0].elements[0].status === \"OK\") {\n        const index = googleResponse.findIndex(\n          (obj) =>\n            obj.origin === response.originAddresses[0] &&\n            obj.destination === response.destinationAddresses[0]\n        );\n        if (index < 0) {\n          console.log(response);\n          setResponse([\n            ...googleResponse,\n            {\n              origin: response.originAddresses[0],\n              destination: response.destinationAddresses[0],\n              distance: response.rows[0].elements[0].distance.text,\n              duration: response.rows[0].elements[0].duration.text,\n            },\n          ]);\n        }\n      }\n    }\n  };\n\n  let getDistance = (origin, destination) => {\n    let object = googleResponse.find(\n      (obj) => obj.origin === origin && obj.destination === destination\n    );\n    if (object) return object.distance;\n  };\n\n  return (\n    <React.Fragment>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n          {({ remove, push }) => (\n            <React.Fragment>\n              <Grid\n                container\n                spacing={3}\n                justifyContent=\"space-between\"\n                alignItems={\"center\"}\n                sx={{ mb: 3 }}\n              >\n                <Grid item>\n                  <Typography variant=\"h6\">\n                    Total Deliveries: {noOfDeliveries}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<PlusIcon fontSize=\"small\" />}\n                    onClick={() => {\n                      setNoOfDeliveries(noOfDeliveries + 1);\n                      push({ loading: \"\", unloading: \"\" });\n                    }}\n                  >\n                    Add Delivery\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {formik.values.deliveryDetails.length > 0 &&\n                formik.values.deliveryDetails.map((delivery, index) => {\n                  const loading = `deliveryDetails[${index}].loading`;\n                  const touchedLoading = getIn(formik.touched, loading);\n                  const errorLoading = getIn(formik.errors, loading);\n\n                  const unloading = `deliveryDetails[${index}].unloading`;\n                  const touchedUnloading = getIn(formik.touched, unloading);\n                  const errorUnloading = getIn(formik.errors, unloading);\n\n                  const billQuantity = `deliveryDetails[${index}].billQuantity`;\n                  const touchedBillQuantity = getIn(\n                    formik.touched,\n                    billQuantity\n                  );\n                  const errorBillQuantity = getIn(formik.errors, billQuantity);\n\n                  const unloadingQuantity = `deliveryDetails[${index}].unloadingQuantity`;\n                  const touchedUnloadingQuantity = getIn(\n                    formik.touched,\n                    unloadingQuantity\n                  );\n                  const errorUnloadingQuantity = getIn(\n                    formik.errors,\n                    unloadingQuantity\n                  );\n                  return (\n                    <React.Fragment>\n                      {index > 0 && <Divider sx={{ mb: 2 }} />}\n\n                      <Grid\n                        container\n                        spacing={3}\n                        className=\"row\"\n                        key={index}\n                        alignItems={\"center\"}\n                        sx={{ mb: 2 }}\n                      >\n                        <Grid item md={4} xs={12} className=\"col\" key={index}>\n                          <GoogleMaps\n                            label={\"Loading\"}\n                            error={errorLoading}\n                            touched={touchedLoading}\n                            name={loading}\n                            setFieldValue={formik.setFieldValue}\n                            handleBlur={formik.handleBlur}\n                            values={formik.values}\n                            index={index}\n                            type=\"loading\"\n                            formik={formik}\n                          />\n                        </Grid>\n                        <Grid item md={4} xs={12} className=\"col\">\n                          <GoogleMaps\n                            label={\"Unloading\"}\n                            error={errorUnloading}\n                            touched={touchedUnloading}\n                            name={loading}\n                            setFieldValue={formik.setFieldValue}\n                            handleBlur={formik.handleBlur}\n                            values={formik.values}\n                            index={index}\n                            type=\"unloading\"\n                            formik={formik}\n                          />\n                        </Grid>\n                        <Grid item md={2} xs={12} className=\"col\">\n                          {delivery.loading.description &&\n                            delivery.unloading.description && (\n                              <DistanceMatrixService\n                                options={{\n                                  origins: [delivery.loading.description],\n                                  destinations: [\n                                    delivery.unloading.description,\n                                  ],\n                                  travelMode: \"DRIVING\",\n                                }}\n                                // required\n                                callback={distanceCallback}\n                              />\n                            )}\n                          <Typography variant=\"h6\">\n                            {getDistance(\n                              delivery.loading.description,\n                              delivery.unloading.description\n                            )}\n                          </Typography>\n                        </Grid>\n                        <Grid item className=\"col\">\n                          <Button\n                            disabled={index < 1}\n                            color=\"secondary\"\n                            onClick={() => {\n                              setNoOfDeliveries(noOfDeliveries - 1);\n                              remove(index);\n                            }}\n                          >\n                            Remove\n                          </Button>\n                        </Grid>\n                      </Grid>\n                      <Grid\n                        container\n                        spacing={3}\n                        className=\"row\"\n                        key={index + 1}\n                        alignItems={\"center\"}\n                        sx={{ mb: 2 }}\n                      >\n                        <Grid item md={4} xs={12} className=\"col\" key={index}>\n                          <TextField\n                            helperText={\n                              touchedBillQuantity && errorBillQuantity\n                                ? errorBillQuantity\n                                : \"\"\n                            }\n                            error={Boolean(\n                              touchedBillQuantity && errorBillQuantity\n                            )}\n                            variant=\"outlined\"\n                            onChange={(event) => {\n                              formik.setFieldValue(\n                                `deliveryDetails[${index}].billQuantity`,\n                                event.target.value\n                              );\n                            }}\n                            onBlur={formik.handleBlur}\n                            id=\"billQuantity\"\n                            name=\"billQuantity\"\n                            label=\"Bill Quantity\"\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item md={4} xs={12} className=\"col\">\n                          <TextField\n                            helperText={\n                              touchedUnloadingQuantity && errorUnloadingQuantity\n                                ? errorUnloadingQuantity\n                                : \"\"\n                            }\n                            error={Boolean(\n                              touchedUnloadingQuantity && errorUnloadingQuantity\n                            )}\n                            variant=\"outlined\"\n                            onChange={(event) => {\n                              console.log(event.target.value);\n                              formik.setFieldValue(\n                                `deliveryDetails[${index}].unloadingQuantity`,\n                                event.target.value\n                              );\n                            }}\n                            onBlur={formik.handleBlur}\n                            id=\"unloadingQuantity\"\n                            name=\"unloadingQuantity\"\n                            label=\"Unloading Quantity\"\n                            fullWidth\n                          />\n                        </Grid>\n                        {console.log(formik.values)}\n                        <Grid item md={2} xs={12} className=\"col\">\n                          {delivery.loading.description &&\n                            delivery.unloading.description && (\n                              <DistanceMatrixService\n                                options={{\n                                  origins: [delivery.loading.description],\n                                  destinations: [\n                                    delivery.unloading.description,\n                                  ],\n                                  travelMode: \"DRIVING\",\n                                }}\n                                // required\n                                callback={distanceCallback}\n                              />\n                            )}\n                          <Typography variant=\"h6\">\n                            {getDistance(\n                              delivery.loading.description,\n                              delivery.unloading.description\n                            )}\n                          </Typography>\n                        </Grid>\n                        <Grid item className=\"col\">\n                          <Button\n                            disabled={index < 1}\n                            color=\"secondary\"\n                            onClick={() => {\n                              setNoOfDeliveries(noOfDeliveries - 1);\n                              remove(index);\n                            }}\n                          >\n                            Remove\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </React.Fragment>\n                  );\n                })}\n            </React.Fragment>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}