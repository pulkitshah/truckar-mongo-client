{"ast":null,"code":"import { API } from \"aws-amplify\";\nimport { organisationsByUser } from \"../graphql/queries\";\nimport { createOrganisation, updateOrganisation } from \"../graphql/mutations\";\nimport { Organisation } from \"../models\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\nconst now = new Date();\n\nclass OrganisationApi {\n  async getOrganisationsByUser(user) {\n    const organisationesDB = await API.graphql({\n      query: organisationsByUser,\n      variables: {\n        user: user.id.toString()\n      }\n    });\n    return organisationesDB;\n  }\n\n  async createOrganisation(newOrganisation) {\n    const response = await DataStore.save(new Organisation(newOrganisation)); // const response = await API.graphql({\n    //   query: createOrganisation,\n    //   variables: { input: newOrganisation },\n    //   authMode: \"AMAZON_COGNITO_USER_POOLS\",\n    // });\n\n    return response;\n  }\n\n  async editOrganisation(editedOrganisation) {\n    const response = await API.graphql({\n      query: updateOrganisation,\n      variables: {\n        input: editedOrganisation\n      },\n      authMode: \"AMAZON_COGNITO_USER_POOLS\"\n    });\n    return response;\n  }\n\n}\n\nexport const organisationApi = new OrganisationApi();","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/api/organisation-api.js"],"names":["API","organisationsByUser","createOrganisation","updateOrganisation","Organisation","DataStore","Predicates","now","Date","OrganisationApi","getOrganisationsByUser","user","organisationesDB","graphql","query","variables","id","toString","newOrganisation","response","save","editOrganisation","editedOrganisation","input","authMode","organisationApi"],"mappings":"AAAA,SAASA,GAAT,QAAoB,aAApB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,sBAAvD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AAEA,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;;AAEA,MAAMC,eAAN,CAAsB;AACpB,QAAMC,sBAAN,CAA6BC,IAA7B,EAAmC;AACjC,UAAMC,gBAAgB,GAAG,MAAMZ,GAAG,CAACa,OAAJ,CAAY;AACzCC,MAAAA,KAAK,EAAEb,mBADkC;AAEzCc,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,IAAI,EAAEA,IAAI,CAACK,EAAL,CAAQC,QAAR;AAAR;AAF8B,KAAZ,CAA/B;AAIA,WAAOL,gBAAP;AACD;;AAED,QAAMV,kBAAN,CAAyBgB,eAAzB,EAA0C;AACxC,UAAMC,QAAQ,GAAG,MAAMd,SAAS,CAACe,IAAV,CAAe,IAAIhB,YAAJ,CAAiBc,eAAjB,CAAf,CAAvB,CADwC,CAExC;AACA;AACA;AACA;AACA;;AACA,WAAOC,QAAP;AACD;;AAED,QAAME,gBAAN,CAAuBC,kBAAvB,EAA2C;AACzC,UAAMH,QAAQ,GAAG,MAAMnB,GAAG,CAACa,OAAJ,CAAY;AACjCC,MAAAA,KAAK,EAAEX,kBAD0B;AAEjCY,MAAAA,SAAS,EAAE;AAAEQ,QAAAA,KAAK,EAAED;AAAT,OAFsB;AAGjCE,MAAAA,QAAQ,EAAE;AAHuB,KAAZ,CAAvB;AAKA,WAAOL,QAAP;AACD;;AA1BmB;;AA6BtB,OAAO,MAAMM,eAAe,GAAG,IAAIhB,eAAJ,EAAxB","sourcesContent":["import { API } from \"aws-amplify\";\nimport { organisationsByUser } from \"../graphql/queries\";\nimport { createOrganisation, updateOrganisation } from \"../graphql/mutations\";\nimport { Organisation } from \"../models\";\nimport { DataStore, Predicates } from \"@aws-amplify/datastore\";\n\nconst now = new Date();\n\nclass OrganisationApi {\n  async getOrganisationsByUser(user) {\n    const organisationesDB = await API.graphql({\n      query: organisationsByUser,\n      variables: { user: user.id.toString() },\n    });\n    return organisationesDB;\n  }\n\n  async createOrganisation(newOrganisation) {\n    const response = await DataStore.save(new Organisation(newOrganisation));\n    // const response = await API.graphql({\n    //   query: createOrganisation,\n    //   variables: { input: newOrganisation },\n    //   authMode: \"AMAZON_COGNITO_USER_POOLS\",\n    // });\n    return response;\n  }\n\n  async editOrganisation(editedOrganisation) {\n    const response = await API.graphql({\n      query: updateOrganisation,\n      variables: { input: editedOrganisation },\n      authMode: \"AMAZON_COGNITO_USER_POOLS\",\n    });\n    return response;\n  }\n}\n\nexport const organisationApi = new OrganisationApi();\n"]},"metadata":{},"sourceType":"module"}