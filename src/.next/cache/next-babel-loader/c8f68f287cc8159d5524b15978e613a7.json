{"ast":null,"code":"import _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/contexts/jwt-context.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useEffect, useState, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Realm from \"realm-web\";\nimport { authApi } from \"../api/auth-api\";\nimport axios from \"../utils/axios\";\nvar initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null\n};\nvar handlers = {\n  INITIALIZE: function INITIALIZE(state, action) {\n    var _action$payload = action.payload,\n        isAuthenticated = _action$payload.isAuthenticated,\n        user = _action$payload.user;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isAuthenticated: isAuthenticated,\n      isInitialized: true,\n      user: user\n    });\n  },\n  LOGIN: function LOGIN(state, action) {\n    var user = action.payload.user;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isAuthenticated: true,\n      user: user\n    });\n  },\n  LOGOUT: function LOGOUT(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isAuthenticated: false,\n      user: null\n    });\n  },\n  REGISTER: function REGISTER(state, action) {\n    var user = action.payload.user;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isAuthenticated: true,\n      user: user\n    });\n  }\n};\n\nvar setSession = function setSession(accessToken) {\n  if (accessToken) {\n    localStorage.setItem(\"accessToken\", accessToken);\n    axios.defaults.headers.common[\"x-auth-token\"] = accessToken;\n  } else {\n    localStorage.removeItem(\"accessToken\");\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nvar reducer = function reducer(state, action) {\n  return handlers[action.type] ? handlers[action.type](state, action) : state;\n};\n\nexport var AuthContext = /*#__PURE__*/createContext(_objectSpread(_objectSpread({}, initialState), {}, {\n  platform: \"JWT\",\n  login: function login() {\n    return Promise.resolve();\n  },\n  logout: function logout() {\n    return Promise.resolve();\n  },\n  register: function register() {\n    return Promise.resolve();\n  }\n}));\nexport var useRealmApp = function useRealmApp() {\n  _s();\n\n  var app = React.useContext(AuthContext);\n\n  if (!app) {\n    throw new Error(\"You must call useRealmApp() inside of a <RealmAppProvider />\");\n  }\n\n  return app;\n};\n\n_s(useRealmApp, \"uFC7OE0Ovf21bTG97qFM+KKhF48=\");\n\nexport var AuthProvider = function AuthProvider(props) {\n  _s2();\n\n  var appId = props.appId,\n      children = props.children;\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState = useState(new Realm.App(appId)),\n      app = _useState[0],\n      setApp = _useState[1];\n\n  useEffect(function () {\n    var initialize = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accessToken, response, user;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                accessToken = window.localStorage.getItem(\"accessToken\");\n\n                if (!accessToken) {\n                  _context.next = 12;\n                  break;\n                }\n\n                setSession(accessToken);\n                console.log(accessToken);\n                _context.next = 7;\n                return authApi.me(accessToken);\n\n              case 7:\n                response = _context.sent;\n                user = response.data;\n                dispatch({\n                  type: \"INITIALIZE\",\n                  payload: {\n                    isAuthenticated: true,\n                    user: user\n                  }\n                });\n                _context.next = 13;\n                break;\n\n              case 12:\n                dispatch({\n                  type: \"INITIALIZE\",\n                  payload: {\n                    isAuthenticated: false,\n                    user: null\n                  }\n                });\n\n              case 13:\n                _context.next = 19;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                dispatch({\n                  type: \"INITIALIZE\",\n                  payload: {\n                    isAuthenticated: false,\n                    user: null\n                  }\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 15]]);\n      }));\n\n      return function initialize() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    initialize();\n  }, []);\n  React.useEffect(function () {\n    setApp(new Realm.App(appId));\n  }, [appId]);\n\n  var _React$useState = React.useState(app.currentUser),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentUser = _React$useState2[0],\n      setCurrentUser = _React$useState2[1];\n\n  var login = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n      var response, _response$data, accessToken, user, jwt, userRealm;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return authApi.login({\n                email: email,\n                password: password\n              });\n\n            case 2:\n              response = _context2.sent;\n              _response$data = response.data, accessToken = _response$data.accessToken, user = _response$data.user;\n              setSession(accessToken);\n              jwt = Realm.Credentials.jwt(accessToken);\n              _context2.prev = 6;\n              _context2.next = 9;\n              return app.logIn(jwt);\n\n            case 9:\n              userRealm = _context2.sent;\n              // If successful, app.currentUser is the user that just logged in\n              setCurrentUser(app.currentUser);\n              console.log(\"Successfully logged in!\", userRealm.id);\n              console.log(userRealm);\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](6);\n              console.error(\"Failed to log in\", _context2.t0.message);\n\n            case 18:\n              console.log(user);\n              dispatch({\n                type: \"LOGIN\",\n                payload: {\n                  user: user\n                }\n              });\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 15]]);\n    }));\n\n    return function login(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var logout = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _app$currentUser;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              localStorage.removeItem(\"accessToken\");\n              dispatch({\n                type: \"LOGOUT\"\n              });\n              _context3.next = 4;\n              return (_app$currentUser = app.currentUser) === null || _app$currentUser === void 0 ? void 0 : _app$currentUser.logOut();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function logout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var register = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email, name, password) {\n      var accessToken, user;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return authApi.register({\n                email: email,\n                name: name,\n                password: password\n              });\n\n            case 2:\n              accessToken = _context4.sent;\n              _context4.next = 5;\n              return authApi.me(accessToken);\n\n            case 5:\n              user = _context4.sent;\n              localStorage.setItem(\"accessToken\", accessToken);\n              dispatch({\n                type: \"REGISTER\",\n                payload: {\n                  user: user\n                }\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function register(_x3, _x4, _x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: _objectSpread(_objectSpread(_objectSpread({}, app), {}, {\n      currentUser: currentUser\n    }, state), {}, {\n      platform: \"JWT\",\n      login: login,\n      logout: logout,\n      register: register\n    }),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(AuthProvider, \"nBon5HEV13fsfLJ6r1Mu7vlWkVk=\");\n\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport var AuthConsumer = AuthContext.Consumer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/contexts/jwt-context.js"],"names":["React","createContext","useEffect","useState","useReducer","PropTypes","Realm","authApi","axios","initialState","isAuthenticated","isInitialized","user","handlers","INITIALIZE","state","action","payload","LOGIN","LOGOUT","REGISTER","setSession","accessToken","localStorage","setItem","defaults","headers","common","removeItem","reducer","type","AuthContext","platform","login","Promise","resolve","logout","register","useRealmApp","app","useContext","Error","AuthProvider","props","appId","children","dispatch","App","setApp","initialize","window","getItem","console","log","me","response","data","error","currentUser","setCurrentUser","email","password","jwt","Credentials","logIn","userRealm","id","message","logOut","name","propTypes","node","isRequired","AuthConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState, useReducer } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Realm from \"realm-web\";\nimport { authApi } from \"../api/auth-api\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  isAuthenticated: false,\n  isInitialized: false,\n  user: null,\n};\n\nconst handlers = {\n  INITIALIZE: (state, action) => {\n    const { isAuthenticated, user } = action.payload;\n\n    return {\n      ...state,\n      isAuthenticated,\n      isInitialized: true,\n      user,\n    };\n  },\n  LOGIN: (state, action) => {\n    const { user } = action.payload;\n\n    return {\n      ...state,\n      isAuthenticated: true,\n      user,\n    };\n  },\n  LOGOUT: (state) => ({\n    ...state,\n    isAuthenticated: false,\n    user: null,\n  }),\n  REGISTER: (state, action) => {\n    const { user } = action.payload;\n\n    return {\n      ...state,\n      isAuthenticated: true,\n      user,\n    };\n  },\n};\n\nconst setSession = (accessToken) => {\n  if (accessToken) {\n    localStorage.setItem(\"accessToken\", accessToken);\n    axios.defaults.headers.common[\"x-auth-token\"] = accessToken;\n  } else {\n    localStorage.removeItem(\"accessToken\");\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nconst reducer = (state, action) =>\n  handlers[action.type] ? handlers[action.type](state, action) : state;\n\nexport const AuthContext = createContext({\n  ...initialState,\n  platform: \"JWT\",\n  login: () => Promise.resolve(),\n  logout: () => Promise.resolve(),\n  register: () => Promise.resolve(),\n});\n\nexport const useRealmApp = () => {\n  const app = React.useContext(AuthContext);\n  if (!app) {\n    throw new Error(\n      `You must call useRealmApp() inside of a <RealmAppProvider />`\n    );\n  }\n  return app;\n};\nexport const AuthProvider = (props) => {\n  const { appId, children } = props;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [app, setApp] = useState(new Realm.App(appId));\n\n  useEffect(() => {\n    const initialize = async () => {\n      try {\n        const accessToken = window.localStorage.getItem(\"accessToken\");\n\n        if (accessToken) {\n          setSession(accessToken);\n          console.log(accessToken)\n          const response = await authApi.me(accessToken);\n          const user = response.data;\n          dispatch({\n            type: \"INITIALIZE\",\n            payload: {\n              isAuthenticated: true,\n              user,\n            },\n          });\n        } else {\n          dispatch({\n            type: \"INITIALIZE\",\n            payload: {\n              isAuthenticated: false,\n              user: null,\n            },\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        dispatch({\n          type: \"INITIALIZE\",\n          payload: {\n            isAuthenticated: false,\n            user: null,\n          },\n        });\n      }\n    };\n    initialize();\n  }, []);\n\n  React.useEffect(() => {\n    setApp(new Realm.App(appId));\n  }, [appId]);\n\n  const [currentUser, setCurrentUser] = React.useState(app.currentUser);\n\n  const login = async (email, password) => {\n    const response = await authApi.login({ email, password });\n    const { accessToken, user } = response.data;\n    setSession(accessToken);\n\n    const jwt = Realm.Credentials.jwt(accessToken);\n\n    try {\n      const userRealm = await app.logIn(jwt);\n      // If successful, app.currentUser is the user that just logged in\n      setCurrentUser(app.currentUser);\n      console.log(\"Successfully logged in!\", userRealm.id);\n      console.log(userRealm);\n    } catch (err) {\n      console.error(\"Failed to log in\", err.message);\n    }\n    console.log(user);\n\n    dispatch({\n      type: \"LOGIN\",\n      payload: {\n        user,\n      },\n    });\n  };\n\n  const logout = async () => {\n    localStorage.removeItem(\"accessToken\");\n    dispatch({ type: \"LOGOUT\" });\n    await app.currentUser?.logOut();\n    // setCurrentUser(app.currentUser);\n  };\n\n  const register = async (email, name, password) => {\n    const accessToken = await authApi.register({ email, name, password });\n    const user = await authApi.me(accessToken);\n\n    localStorage.setItem(\"accessToken\", accessToken);\n\n    dispatch({\n      type: \"REGISTER\",\n      payload: {\n        user,\n      },\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        ...app,\n        currentUser,\n        ...state,\n        platform: \"JWT\",\n        login,\n        logout,\n        register,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport const AuthConsumer = AuthContext.Consumer;\n"]},"metadata":{},"sourceType":"module"}