{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/google-maps.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { GoogleMap, Marker, DirectionsService, DirectionsRenderer } from \"@react-google-maps/api\";\n\nvar GoogleMaps = function GoogleMaps(_ref) {\n  _s();\n\n  var formik = _ref.formik;\n  console.log(\"child component\");\n\n  var _useState = useState(null),\n      response = _useState[0],\n      setResponse = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      origin = _useState2[0],\n      setOrigin = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      destination = _useState3[0],\n      setDestination = _useState3[1];\n\n  var originRef = useRef(null);\n  var destinationRef = useRef(null);\n  var directionsServiceOptions = useMemo(function () {\n    return {\n      destination: destination,\n      origin: origin,\n      travelMode: \"DRIVING\"\n    };\n  }, []);\n  var directionsRendererOptions = useMemo(function () {\n    return {\n      directions: response\n    };\n  }, []);\n\n  var directionsCallback = function directionsCallback(response) {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        console.log(response);\n        setResponse(response);\n      } else {\n        console.log(\"response: \");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    options: {\n      mapTypeId: \"hybrid\",\n      disableDefaultUI: true\n    },\n    mapContainerStyle: {\n      width: \"90%\",\n      height: \"100%\",\n      minHeight: \"12rem\"\n    },\n    center: {\n      lat: 22.309425,\n      lng: 72.13623\n    },\n    zoom: 5,\n    children: [/*#__PURE__*/_jsxDEV(DirectionsService // required\n    , {\n      options: {\n        // origin: formik.values.deliveryDetails[0].loading.description,\n        origin: {\n          lat: 22.309425,\n          lng: 72.13623\n        },\n        destination: formik.values.deliveryDetails[0].unloading.description,\n        travelMode: \"DRIVING\"\n      } // required\n      ,\n      callback: directionsCallback // optional\n      ,\n      onLoad: function onLoad(directionsService) {\n        console.log(\"DirectionsService onLoad directionsService: \", directionsService);\n      } // optional\n      ,\n      onUnmount: function onUnmount(directionsService) {\n        console.log(\"DirectionsService onUnmount directionsService: \", directionsService);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(DirectionsRenderer // required\n    , {\n      options: {\n        // eslint-disable-line react-perf/jsx-no-new-object-as-prop\n        directions: response\n      } // optional\n      ,\n      onLoad: function onLoad(directionsRenderer) {\n        console.log(\"DirectionsRenderer onLoad directionsRenderer: \", directionsRenderer);\n      } // optional\n      ,\n      onUnmount: function onUnmount(directionsRenderer) {\n        console.log(\"DirectionsRenderer onUnmount directionsRenderer: \", directionsRenderer);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GoogleMaps, \"E106yF65e8XIm/JkRpkkEiBYvvs=\");\n\n_c = GoogleMaps;\nexport default GoogleMaps;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleMaps\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/google-maps.js"],"names":["React","useState","useRef","useMemo","useCallback","GoogleMap","Marker","DirectionsService","DirectionsRenderer","GoogleMaps","formik","console","log","response","setResponse","origin","setOrigin","destination","setDestination","originRef","destinationRef","directionsServiceOptions","travelMode","directionsRendererOptions","directions","directionsCallback","status","mapTypeId","disableDefaultUI","width","height","minHeight","lat","lng","values","deliveryDetails","unloading","description","directionsService","directionsRenderer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport {\n  GoogleMap,\n  Marker,\n  DirectionsService,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\n\nconst GoogleMaps = ({ formik }) => {\n  console.log(\"child component\");\n\n  const [response, setResponse] = useState(null);\n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const originRef = useRef(null);\n  const destinationRef = useRef(null);\n\n  const directionsServiceOptions = useMemo(() => {\n    return {\n      destination: destination,\n      origin: origin,\n      travelMode: \"DRIVING\",\n    };\n  }, []);\n\n  const directionsRendererOptions = useMemo(() => {\n    return {\n      directions: response,\n    };\n  }, []);\n\n  let directionsCallback = (response) => {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        console.log(response);\n        setResponse(response);\n      } else {\n        console.log(\"response: \");\n      }\n    }\n  };\n\n  return (\n    <GoogleMap\n      options={{ mapTypeId: \"hybrid\", disableDefaultUI: true }}\n      mapContainerStyle={{\n        width: \"90%\",\n        height: \"100%\",\n        minHeight: \"12rem\",\n      }}\n      center={{\n        lat: 22.309425,\n        lng: 72.13623,\n      }}\n      zoom={5}\n    >\n      {\n        <DirectionsService\n          // required\n          options={{\n            // origin: formik.values.deliveryDetails[0].loading.description,\n            origin: {\n              lat: 22.309425,\n              lng: 72.13623,\n            },\n\n            destination: formik.values.deliveryDetails[0].unloading.description,\n            travelMode: \"DRIVING\",\n          }}\n          // required\n          callback={directionsCallback}\n          // optional\n          onLoad={(directionsService) => {\n            console.log(\n              \"DirectionsService onLoad directionsService: \",\n              directionsService\n            );\n          }}\n          // optional\n          onUnmount={(directionsService) => {\n            console.log(\n              \"DirectionsService onUnmount directionsService: \",\n              directionsService\n            );\n          }}\n        />\n      }\n\n      {\n        <DirectionsRenderer\n          // required\n          options={{\n            // eslint-disable-line react-perf/jsx-no-new-object-as-prop\n            directions: response,\n          }}\n          // optional\n          onLoad={(directionsRenderer) => {\n            console.log(\n              \"DirectionsRenderer onLoad directionsRenderer: \",\n              directionsRenderer\n            );\n          }}\n          // optional\n          onUnmount={(directionsRenderer) => {\n            console.log(\n              \"DirectionsRenderer onUnmount directionsRenderer: \",\n              directionsRenderer\n            );\n          }}\n        />\n      }\n      {/* {formik.values.deliveryDetails.map((deliveries) => {\n        return (\n          <React.Fragment>\n            <Marker\n              key={deliveries.loading.place_id}\n              position={{\n                lat: deliveries.loading.latitude,\n                lng: deliveries.loading.longitude,\n              }}\n            />\n            <Marker\n              key={deliveries.unloading.place_id}\n              position={{\n                lat: deliveries.unloading.latitude,\n                lng: deliveries.unloading.longitude,\n              }}\n            />\n          </React.Fragment>\n        );\n      })} */}\n    </GoogleMap>\n  );\n};\n\nexport default GoogleMaps;\n"]},"metadata":{},"sourceType":"module"}