{"ast":null,"code":"import _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nvar DeliveryForm = function DeliveryForm(_ref) {\n  _s();\n\n  var formik = _ref.formik,\n      rest = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      noOfDeliveries = _React$useState2[0],\n      setNoOfDeliveries = _React$useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"deliveryDetails\",\n        error: formik.errors,\n        children: function children(_ref2) {\n          var remove = _ref2.remove,\n              push = _ref2.push;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"No of Deliveries: \", noOfDeliveries]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    mb: 3\n                  },\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: function onClick() {\n                    setNoOfDeliveries(noOfDeliveries + 1);\n                    push({\n                      loading: \"\",\n                      unloading: \"\"\n                    });\n                  },\n                  children: \"Add Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, _this), formik.values.deliveryDetails.length > 0 && formik.values.deliveryDetails.map(function (delivery, index) {\n              var loading = \"deliveryDetails[\".concat(index, \"].loading\");\n              var touchedLoading = getIn(formik.touched, loading);\n              var errorLoading = getIn(formik.errors, loading);\n              var unloading = \"deliveryDetails[\".concat(index, \"].unloading\");\n              var touchedUnloading = getIn(formik.touched, unloading);\n              var errorUnloading = getIn(formik.errors, unloading);\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                className: \"row\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                    error: errorLoading,\n                    touched: touchedLoading,\n                    name: loading,\n                    setFieldValue: formik.setFieldValue,\n                    handleBlur: formik.handleBlur,\n                    values: formik.values,\n                    index: index,\n                    type: \"loading\",\n                    formik: formik\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 25\n                  }, _this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                    error: errorUnloading,\n                    touched: touchedUnloading,\n                    name: loading,\n                    setFieldValue: formik.setFieldValue,\n                    handleBlur: formik.handleBlur,\n                    values: formik.values,\n                    index: index,\n                    type: \"unloading\",\n                    formik: formik\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"240 Kms\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  className: \"col\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    disabled: index < 1,\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: function onClick() {\n                      setNoOfDeliveries(noOfDeliveries - 1);\n                      remove(index);\n                    },\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DeliveryForm, \"ZTvxkYaLXWXNKkEQsk9o96DKDMc=\");\n\n_c = DeliveryForm;\nexport default DeliveryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FormikProvider","FieldArray","getIn","Grid","Typography","Button","GoogleMaps","DeliveryForm","formik","rest","useState","noOfDeliveries","setNoOfDeliveries","errors","remove","push","mb","loading","unloading","values","deliveryDetails","length","map","delivery","index","touchedLoading","touched","errorLoading","touchedUnloading","errorUnloading","setFieldValue","handleBlur"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({ formik, ...rest }) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n\n  return (\n    <React.Fragment>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n          {({ remove, push }) => (\n            <React.Fragment>\n              <Grid container spacing={3}>\n                <Grid item>\n                  <Typography variant=\"h6\">\n                    No of Deliveries: {noOfDeliveries}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Button\n                    sx={{ mb: 3 }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      setNoOfDeliveries(noOfDeliveries + 1);\n                      push({ loading: \"\", unloading: \"\" });\n                    }}\n                  >\n                    Add Delivery\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {formik.values.deliveryDetails.length > 0 &&\n                formik.values.deliveryDetails.map((delivery, index) => {\n                  const loading = `deliveryDetails[${index}].loading`;\n                  const touchedLoading = getIn(formik.touched, loading);\n                  const errorLoading = getIn(formik.errors, loading);\n\n                  const unloading = `deliveryDetails[${index}].unloading`;\n                  const touchedUnloading = getIn(formik.touched, unloading);\n                  const errorUnloading = getIn(formik.errors, unloading);\n\n                  return (\n                    <Grid\n                      container\n                      spacing={3}\n                      className=\"row\"\n                      key={index}\n                      alignItems={\"center\"}\n                    >\n                      <Grid item md={4} xs={12} className=\"col\" key={index}>\n                        <GoogleMaps\n                          error={errorLoading}\n                          touched={touchedLoading}\n                          name={loading}\n                          setFieldValue={formik.setFieldValue}\n                          handleBlur={formik.handleBlur}\n                          values={formik.values}\n                          index={index}\n                          type=\"loading\"\n                          formik={formik}\n                        />\n                      </Grid>\n                      <Grid item md={4} xs={12} className=\"col\">\n                        <GoogleMaps\n                          error={errorUnloading}\n                          touched={touchedUnloading}\n                          name={loading}\n                          setFieldValue={formik.setFieldValue}\n                          handleBlur={formik.handleBlur}\n                          values={formik.values}\n                          index={index}\n                          type=\"unloading\"\n                          formik={formik}\n                        />\n                      </Grid>\n                      <Grid item md={4} xs={12} className=\"col\">\n                        <Typography variant=\"h6\">240 Kms</Typography>\n                      </Grid>\n                      <Grid item className=\"col\">\n                        <Button\n                          disabled={index < 1}\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            setNoOfDeliveries(noOfDeliveries - 1);\n                            remove(index);\n                          }}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </React.Fragment>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}