{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { addressApi } from \"../api/address-api\";\nimport axios from \"../utils/axios\";\nconst initialState = {\n  addresses: [],\n  addressIds: [],\n  isNextPageLoading: true\n};\nexport const slice = createSlice({\n  name: \"address\",\n  initialState,\n  reducers: {\n    getAddresses(state, action) {\n      const addresses = action.payload;\n      state.addresses = addresses;\n      state.isNextPageLoading = false;\n    },\n\n    createAddress(state, action) {\n      const {\n        address\n      } = action.payload;\n      state.addresses = [...state.addresses, address];\n    },\n\n    selectAddress(state, action) {\n      const {\n        addressId = null\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedAddressId = addressId;\n    },\n\n    updateAddress(state, action) {\n      const {\n        address\n      } = action.payload;\n      state.addresses = _.map(state.addresses, _address => {\n        if (_address.id === address.id) {\n          return address;\n        }\n\n        return _address;\n      });\n    },\n\n    deleteAddress(state, action) {\n      const {\n        addressId\n      } = action.payload;\n      state.addresses = _.reject(state.addresses, {\n        id: addressId\n      });\n    },\n\n    selectRange(state, action) {\n      const {\n        start,\n        end\n      } = action.payload;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end\n      };\n    },\n\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedAddressId = null;\n      state.selectedRange = null;\n    }\n\n  }\n});\nexport const reducer = slice.reducer;\nexport const getAddresses = limit => async dispatch => {\n  const response = await addressApi.getAddressesByUser();\n  console.log(\"getAddresses = ()\");\n  dispatch(slice.actions.getAddresses(response.data));\n};\nexport const createAddress = data => async dispatch => {\n  const response = await axios.post(\"/api/calendar/addresses/new\", data);\n  dispatch(slice.actions.createAddress(response.data));\n};\nexport const selectAddress = addressId => async dispatch => {\n  dispatch(slice.actions.selectAddress({\n    addressId\n  }));\n};\nexport const updateAddress = (addressId, update) => async dispatch => {\n  const response = await axios.post(\"/api/calendar/addresses/update\", {\n    addressId,\n    update\n  });\n  dispatch(slice.actions.updateAddress(response.data));\n};\nexport const deleteAddress = addressId => async dispatch => {\n  await axios.post(\"/api/calendar/addresses/remove\", {\n    addressId\n  });\n  dispatch(slice.actions.deleteAddress({\n    addressId\n  }));\n};\nexport const selectRange = (start, end) => dispatch => {\n  dispatch(slice.actions.selectRange({\n    start: start.getTime(),\n    end: end.getTime()\n  }));\n};\nexport const openModal = () => dispatch => {\n  dispatch(slice.actions.openModal());\n};\nexport const closeModal = () => dispatch => {\n  dispatch(slice.actions.closeModal());\n};\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/addresses.js"],"names":["createSlice","_","addressApi","axios","initialState","addresses","addressIds","isNextPageLoading","slice","name","reducers","getAddresses","state","action","payload","createAddress","address","selectAddress","addressId","isModalOpen","selectedAddressId","updateAddress","map","_address","id","deleteAddress","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer","limit","dispatch","response","getAddressesByUser","console","log","actions","data","post","update","getTime"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { addressApi } from \"../api/address-api\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  addresses: [],\n  addressIds: [],\n  isNextPageLoading: true,\n};\n\nexport const slice = createSlice({\n  name: \"address\",\n  initialState,\n  reducers: {\n    getAddresses(state, action) {\n      const addresses = action.payload;\n      state.addresses = addresses;\n      state.isNextPageLoading = false;\n    },\n    createAddress(state, action) {\n      const { address } = action.payload;\n\n      state.addresses = [...state.addresses, address];\n    },\n    selectAddress(state, action) {\n      const { addressId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedAddressId = addressId;\n    },\n    updateAddress(state, action) {\n      const { address } = action.payload;\n\n      state.addresses = _.map(state.addresses, (_address) => {\n        if (_address.id === address.id) {\n          return address;\n        }\n\n        return _address;\n      });\n    },\n    deleteAddress(state, action) {\n      const { addressId } = action.payload;\n\n      state.addresses = _.reject(state.addresses, {\n        id: addressId,\n      });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedAddressId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport const getAddresses = (limit) => async (dispatch) => {\n  const response = await addressApi.getAddressesByUser();\n  console.log(\"getAddresses = ()\");\n  dispatch(slice.actions.getAddresses(response.data));\n};\n\nexport const createAddress = (data) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/addresses/new\", data);\n\n  dispatch(slice.actions.createAddress(response.data));\n};\n\nexport const selectAddress = (addressId) => async (dispatch) => {\n  dispatch(slice.actions.selectAddress({ addressId }));\n};\n\nexport const updateAddress = (addressId, update) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/addresses/update\", {\n    addressId,\n    update,\n  });\n\n  dispatch(slice.actions.updateAddress(response.data));\n};\n\nexport const deleteAddress = (addressId) => async (dispatch) => {\n  await axios.post(\"/api/calendar/addresses/remove\", {\n    addressId,\n  });\n\n  dispatch(slice.actions.deleteAddress({ addressId }));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(\n    slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime(),\n    })\n  );\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}