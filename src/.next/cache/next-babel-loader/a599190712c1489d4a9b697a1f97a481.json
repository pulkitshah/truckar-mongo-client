{"ast":null,"code":"import _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button, Divider, TextField } from \"@mui/material\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nvar DeliveryForm = function DeliveryForm(_ref) {\n  _s();\n\n  var formik = _ref.formik,\n      rest = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      noOfDeliveries = _React$useState2[0],\n      setNoOfDeliveries = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      googleResponse = _React$useState4[0],\n      setResponse = _React$useState4[1];\n\n  var distanceCallback = function distanceCallback(response) {\n    if (response !== null) {\n      if (response.rows[0].elements[0].status === \"OK\") {\n        var index = googleResponse.findIndex(function (obj) {\n          return obj.origin === response.originAddresses[0] && obj.destination === response.destinationAddresses[0];\n        });\n\n        if (index < 0) {\n          console.log(response);\n          setResponse([].concat(_toConsumableArray(googleResponse), [{\n            origin: response.originAddresses[0],\n            destination: response.destinationAddresses[0],\n            distance: response.rows[0].elements[0].distance.text,\n            duration: response.rows[0].elements[0].duration.text\n          }]));\n        }\n      }\n    }\n  };\n\n  var getDistance = function getDistance(origin, destination) {\n    var object = googleResponse.find(function (obj) {\n      return obj.origin === origin && obj.destination === destination;\n    });\n    if (object) return object.distance;\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"deliveryDetails\",\n        error: formik.errors,\n        children: function children(_ref2) {\n          var remove = _ref2.remove,\n              push = _ref2.push;\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: [\"Total Deliveries: \", noOfDeliveries]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                    fontSize: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 32\n                  }, _this),\n                  onClick: function onClick() {\n                    setNoOfDeliveries(noOfDeliveries + 1);\n                    push({\n                      loading: \"\",\n                      unloading: \"\"\n                    });\n                  },\n                  children: \"Add Delivery\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, _this), formik.values.deliveryDetails.length > 0 && formik.values.deliveryDetails.map(function (delivery, index) {\n              var loading = \"deliveryDetails[\".concat(index, \"].loading\");\n              var touchedLoading = getIn(formik.touched, loading);\n              var errorLoading = getIn(formik.errors, loading);\n              var unloading = \"deliveryDetails[\".concat(index, \"].unloading\");\n              var touchedUnloading = getIn(formik.touched, unloading);\n              var errorUnloading = getIn(formik.errors, unloading);\n              var billQuantity = \"deliveryDetails[\".concat(index, \"].billQuantity\");\n              var touchedBillQuantity = getIn(formik.touched, billQuantity);\n              var errorBillQuantity = getIn(formik.errors, billQuantity);\n              var unloadingQuantity = \"deliveryDetails[\".concat(index, \"].unloadingQuantity\");\n              var touchedUnloadingQuantity = getIn(formik.touched, unloadingQuantity);\n              var errorUnloadingQuantity = getIn(formik.errors, unloadingQuantity);\n              return /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [index > 0 && /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    mb: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  className: \"row\",\n                  alignItems: \"center\",\n                  sx: {\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 12,\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                      label: \"Loading\",\n                      error: errorLoading,\n                      touched: touchedLoading,\n                      name: loading,\n                      setFieldValue: formik.setFieldValue,\n                      handleBlur: formik.handleBlur,\n                      values: formik.values,\n                      index: index,\n                      type: \"loading\",\n                      formik: formik\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 27\n                    }, _this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 12,\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                      label: \"Unloading\",\n                      error: errorUnloading,\n                      touched: touchedUnloading,\n                      name: loading,\n                      setFieldValue: formik.setFieldValue,\n                      handleBlur: formik.handleBlur,\n                      values: formik.values,\n                      index: index,\n                      type: \"unloading\",\n                      formik: formik\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 2,\n                    xs: 12,\n                    className: \"col\",\n                    children: [delivery.loading.description && delivery.unloading.description && /*#__PURE__*/_jsxDEV(DistanceMatrixService, {\n                      options: {\n                        origins: [delivery.loading.description],\n                        destinations: [delivery.unloading.description],\n                        travelMode: \"DRIVING\"\n                      } // required\n                      ,\n                      callback: distanceCallback\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 31\n                    }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: getDistance(delivery.loading.description, delivery.unloading.description)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      disabled: index < 1,\n                      color: \"secondary\",\n                      onClick: function onClick() {\n                        setNoOfDeliveries(noOfDeliveries - 1);\n                        remove(index);\n                      },\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 25\n                  }, _this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  className: \"row\",\n                  alignItems: \"center\",\n                  sx: {\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 12,\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      helperText: touchedBillQuantity && errorBillQuantity ? errorBillQuantity : \"\",\n                      error: Boolean(touchedBillQuantity && errorBillQuantity),\n                      variant: \"outlined\",\n                      onChange: function onChange(event) {\n                        formik.setFieldValue(\"deliveryDetails[\".concat(index, \"].billQuantity\"), event.target.value);\n                      },\n                      onBlur: formik.handleBlur,\n                      id: \"billQuantity\",\n                      name: \"billQuantity\",\n                      label: \"Bill Quantity\",\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 27\n                    }, _this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 4,\n                    xs: 12,\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      helperText: touchedUnloadingQuantity && errorUnloadingQuantity ? errorUnloadingQuantity : \"\",\n                      error: Boolean(touchedUnloadingQuantity && errorUnloadingQuantity),\n                      variant: \"outlined\",\n                      onChange: function onChange(event) {\n                        console.log(event.target.value);\n                        formik.setFieldValue(\"deliveryDetails[\".concat(index, \"].unloadingQuantity\"), event.target.value);\n                      },\n                      onBlur: formik.handleBlur,\n                      id: \"unloadingQuantity\",\n                      name: \"unloadingQuantity\",\n                      label: \"Unloading Quantity\",\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, _this), console.log(formik.values), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    md: 2,\n                    xs: 12,\n                    className: \"col\",\n                    children: [delivery.loading.description && delivery.unloading.description && /*#__PURE__*/_jsxDEV(DistanceMatrixService, {\n                      options: {\n                        origins: [delivery.loading.description],\n                        destinations: [delivery.unloading.description],\n                        travelMode: \"DRIVING\"\n                      } // required\n                      ,\n                      callback: distanceCallback\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 31\n                    }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: getDistance(delivery.loading.description, delivery.unloading.description)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    className: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      disabled: index < 1,\n                      color: \"secondary\",\n                      onClick: function onClick() {\n                        setNoOfDeliveries(noOfDeliveries - 1);\n                        remove(index);\n                      },\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, _this)]\n                }, index + 1, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DeliveryForm, \"vY45o1FI64Zh9++ZPXsvGFDsvhw=\");\n\n_c = DeliveryForm;\nexport default DeliveryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FormikProvider","FieldArray","getIn","Grid","Typography","Button","Divider","TextField","DistanceMatrixService","Plus","PlusIcon","GoogleMaps","DeliveryForm","formik","rest","useState","noOfDeliveries","setNoOfDeliveries","googleResponse","setResponse","distanceCallback","response","rows","elements","status","index","findIndex","obj","origin","originAddresses","destination","destinationAddresses","console","log","distance","text","duration","getDistance","object","find","errors","remove","push","mb","loading","unloading","values","deliveryDetails","length","map","delivery","touchedLoading","touched","errorLoading","touchedUnloading","errorUnloading","billQuantity","touchedBillQuantity","errorBillQuantity","unloadingQuantity","touchedUnloadingQuantity","errorUnloadingQuantity","setFieldValue","handleBlur","description","origins","destinations","travelMode","Boolean","event","target","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,KAArC,QAAkD,QAAlD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4CC,SAA5C,QAA6D,eAA7D;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AAEA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,qBAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAyB;AAAA;;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAXC,IAAW;;AAAA,wBACAf,KAAK,CAACgB,QAAN,CAAe,CAAf,CADA;AAAA;AAAA,MACrCC,cADqC;AAAA,MACrBC,iBADqB;;AAAA,yBAENlB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAFM;AAAA;AAAA,MAErCG,cAFqC;AAAA,MAErBC,WAFqB;;AAI5C,MAAIC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AACnC,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAIA,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,MAA7B,KAAwC,IAA5C,EAAkD;AAChD,YAAMC,KAAK,GAAGP,cAAc,CAACQ,SAAf,CACZ,UAACC,GAAD;AAAA,iBACEA,GAAG,CAACC,MAAJ,KAAeP,QAAQ,CAACQ,eAAT,CAAyB,CAAzB,CAAf,IACAF,GAAG,CAACG,WAAJ,KAAoBT,QAAQ,CAACU,oBAAT,CAA8B,CAA9B,CAFtB;AAAA,SADY,CAAd;;AAKA,YAAIN,KAAK,GAAG,CAAZ,EAAe;AACbO,UAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAF,UAAAA,WAAW,8BACND,cADM,IAET;AACEU,YAAAA,MAAM,EAAEP,QAAQ,CAACQ,eAAT,CAAyB,CAAzB,CADV;AAEEC,YAAAA,WAAW,EAAET,QAAQ,CAACU,oBAAT,CAA8B,CAA9B,CAFf;AAGEG,YAAAA,QAAQ,EAAEb,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BW,QAA7B,CAAsCC,IAHlD;AAIEC,YAAAA,QAAQ,EAAEf,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6Ba,QAA7B,CAAsCD;AAJlD,WAFS,GAAX;AASD;AACF;AACF;AACF,GAtBD;;AAwBA,MAAIE,WAAW,GAAG,SAAdA,WAAc,CAACT,MAAD,EAASE,WAAT,EAAyB;AACzC,QAAIQ,MAAM,GAAGpB,cAAc,CAACqB,IAAf,CACX,UAACZ,GAAD;AAAA,aAASA,GAAG,CAACC,MAAJ,KAAeA,MAAf,IAAyBD,GAAG,CAACG,WAAJ,KAAoBA,WAAtD;AAAA,KADW,CAAb;AAGA,QAAIQ,MAAJ,EAAY,OAAOA,MAAM,CAACJ,QAAd;AACb,GALD;;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAErB,MAAvB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,iBAAjB;AAAmC,QAAA,KAAK,EAAEA,MAAM,CAAC2B,MAAjD;AAAA,kBACG;AAAA,cAAGC,MAAH,SAAGA,MAAH;AAAA,cAAWC,IAAX,SAAWA,IAAX;AAAA,8BACC,QAAC,KAAD,CAAO,QAAP;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,OAAO,EAAE,CAFX;AAGE,cAAA,cAAc,EAAC,eAHjB;AAIE,cAAA,UAAU,EAAE,QAJd;AAKE,cAAA,EAAE,EAAE;AAAEC,gBAAAA,EAAE,EAAE;AAAN,eALN;AAAA,sCAOE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAA,mDACqB3B,cADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAPF,eAYE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAC,WADV;AAEE,kBAAA,KAAK,EAAC,WAFR;AAGE,kBAAA,SAAS,eAAE,QAAC,QAAD;AAAU,oBAAA,QAAQ,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,2BAHb;AAIE,kBAAA,OAAO,EAAE,mBAAM;AACbC,oBAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACA0B,oBAAAA,IAAI,CAAC;AAAEE,sBAAAA,OAAO,EAAE,EAAX;AAAeC,sBAAAA,SAAS,EAAE;AAA1B,qBAAD,CAAJ;AACD,mBAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EA4BGhC,MAAM,CAACiC,MAAP,CAAcC,eAAd,CAA8BC,MAA9B,GAAuC,CAAvC,IACCnC,MAAM,CAACiC,MAAP,CAAcC,eAAd,CAA8BE,GAA9B,CAAkC,UAACC,QAAD,EAAWzB,KAAX,EAAqB;AACrD,kBAAMmB,OAAO,6BAAsBnB,KAAtB,cAAb;AACA,kBAAM0B,cAAc,GAAGjD,KAAK,CAACW,MAAM,CAACuC,OAAR,EAAiBR,OAAjB,CAA5B;AACA,kBAAMS,YAAY,GAAGnD,KAAK,CAACW,MAAM,CAAC2B,MAAR,EAAgBI,OAAhB,CAA1B;AAEA,kBAAMC,SAAS,6BAAsBpB,KAAtB,gBAAf;AACA,kBAAM6B,gBAAgB,GAAGpD,KAAK,CAACW,MAAM,CAACuC,OAAR,EAAiBP,SAAjB,CAA9B;AACA,kBAAMU,cAAc,GAAGrD,KAAK,CAACW,MAAM,CAAC2B,MAAR,EAAgBK,SAAhB,CAA5B;AAEA,kBAAMW,YAAY,6BAAsB/B,KAAtB,mBAAlB;AACA,kBAAMgC,mBAAmB,GAAGvD,KAAK,CAC/BW,MAAM,CAACuC,OADwB,EAE/BI,YAF+B,CAAjC;AAIA,kBAAME,iBAAiB,GAAGxD,KAAK,CAACW,MAAM,CAAC2B,MAAR,EAAgBgB,YAAhB,CAA/B;AAEA,kBAAMG,iBAAiB,6BAAsBlC,KAAtB,wBAAvB;AACA,kBAAMmC,wBAAwB,GAAG1D,KAAK,CACpCW,MAAM,CAACuC,OAD6B,EAEpCO,iBAFoC,CAAtC;AAIA,kBAAME,sBAAsB,GAAG3D,KAAK,CAClCW,MAAM,CAAC2B,MAD2B,EAElCmB,iBAFkC,CAApC;AAIA,kCACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACGlC,KAAK,GAAG,CAAR,iBAAa,QAAC,OAAD;AAAS,kBAAA,EAAE,EAAE;AAAEkB,oBAAAA,EAAE,EAAE;AAAN;AAAb;AAAA;AAAA;AAAA;AAAA,yBADhB,eAGE,QAAC,IAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,OAAO,EAAE,CAFX;AAGE,kBAAA,SAAS,EAAC,KAHZ;AAKE,kBAAA,UAAU,EAAE,QALd;AAME,kBAAA,EAAE,EAAE;AAAEA,oBAAAA,EAAE,EAAE;AAAN,mBANN;AAAA,0CAQE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,EAAtB;AAA0B,oBAAA,SAAS,EAAC,KAApC;AAAA,2CACE,QAAC,UAAD;AACE,sBAAA,KAAK,EAAE,SADT;AAEE,sBAAA,KAAK,EAAEU,YAFT;AAGE,sBAAA,OAAO,EAAEF,cAHX;AAIE,sBAAA,IAAI,EAAEP,OAJR;AAKE,sBAAA,aAAa,EAAE/B,MAAM,CAACiD,aALxB;AAME,sBAAA,UAAU,EAAEjD,MAAM,CAACkD,UANrB;AAOE,sBAAA,MAAM,EAAElD,MAAM,CAACiC,MAPjB;AAQE,sBAAA,KAAK,EAAErB,KART;AASE,sBAAA,IAAI,EAAC,SATP;AAUE,sBAAA,MAAM,EAAEZ;AAVV;AAAA;AAAA;AAAA;AAAA;AADF,qBAA+CY,KAA/C;AAAA;AAAA;AAAA;AAAA,2BARF,eAsBE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,EAAtB;AAA0B,oBAAA,SAAS,EAAC,KAApC;AAAA,2CACE,QAAC,UAAD;AACE,sBAAA,KAAK,EAAE,WADT;AAEE,sBAAA,KAAK,EAAE8B,cAFT;AAGE,sBAAA,OAAO,EAAED,gBAHX;AAIE,sBAAA,IAAI,EAAEV,OAJR;AAKE,sBAAA,aAAa,EAAE/B,MAAM,CAACiD,aALxB;AAME,sBAAA,UAAU,EAAEjD,MAAM,CAACkD,UANrB;AAOE,sBAAA,MAAM,EAAElD,MAAM,CAACiC,MAPjB;AAQE,sBAAA,KAAK,EAAErB,KART;AASE,sBAAA,IAAI,EAAC,WATP;AAUE,sBAAA,MAAM,EAAEZ;AAVV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAtBF,eAoCE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,EAAtB;AAA0B,oBAAA,SAAS,EAAC,KAApC;AAAA,+BACGqC,QAAQ,CAACN,OAAT,CAAiBoB,WAAjB,IACCd,QAAQ,CAACL,SAAT,CAAmBmB,WADpB,iBAEG,QAAC,qBAAD;AACE,sBAAA,OAAO,EAAE;AACPC,wBAAAA,OAAO,EAAE,CAACf,QAAQ,CAACN,OAAT,CAAiBoB,WAAlB,CADF;AAEPE,wBAAAA,YAAY,EAAE,CACZhB,QAAQ,CAACL,SAAT,CAAmBmB,WADP,CAFP;AAKPG,wBAAAA,UAAU,EAAE;AALL,uBADX,CAQE;AARF;AASE,sBAAA,QAAQ,EAAE/C;AATZ;AAAA;AAAA;AAAA;AAAA,6BAHN,eAeE,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,IAApB;AAAA,gCACGiB,WAAW,CACVa,QAAQ,CAACN,OAAT,CAAiBoB,WADP,EAEVd,QAAQ,CAACL,SAAT,CAAmBmB,WAFT;AADd;AAAA;AAAA;AAAA;AAAA,6BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,2BApCF,eA0DE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,SAAS,EAAC,KAArB;AAAA,2CACE,QAAC,MAAD;AACE,sBAAA,QAAQ,EAAEvC,KAAK,GAAG,CADpB;AAEE,sBAAA,KAAK,EAAC,WAFR;AAGE,sBAAA,OAAO,EAAE,mBAAM;AACbR,wBAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACAyB,wBAAAA,MAAM,CAAChB,KAAD,CAAN;AACD,uBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BA1DF;AAAA,mBAIOA,KAJP;AAAA;AAAA;AAAA;AAAA,yBAHF,eA0EE,QAAC,IAAD;AACE,kBAAA,SAAS,MADX;AAEE,kBAAA,OAAO,EAAE,CAFX;AAGE,kBAAA,SAAS,EAAC,KAHZ;AAKE,kBAAA,UAAU,EAAE,QALd;AAME,kBAAA,EAAE,EAAE;AAAEkB,oBAAAA,EAAE,EAAE;AAAN,mBANN;AAAA,0CAQE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,EAAtB;AAA0B,oBAAA,SAAS,EAAC,KAApC;AAAA,2CACE,QAAC,SAAD;AACE,sBAAA,UAAU,EACRc,mBAAmB,IAAIC,iBAAvB,GACIA,iBADJ,GAEI,EAJR;AAME,sBAAA,KAAK,EAAEU,OAAO,CACZX,mBAAmB,IAAIC,iBADX,CANhB;AASE,sBAAA,OAAO,EAAC,UATV;AAUE,sBAAA,QAAQ,EAAE,kBAACW,KAAD,EAAW;AACnBxD,wBAAAA,MAAM,CAACiD,aAAP,2BACqBrC,KADrB,qBAEE4C,KAAK,CAACC,MAAN,CAAaC,KAFf;AAID,uBAfH;AAgBE,sBAAA,MAAM,EAAE1D,MAAM,CAACkD,UAhBjB;AAiBE,sBAAA,EAAE,EAAC,cAjBL;AAkBE,sBAAA,IAAI,EAAC,cAlBP;AAmBE,sBAAA,KAAK,EAAC,eAnBR;AAoBE,sBAAA,SAAS;AApBX;AAAA;AAAA;AAAA;AAAA;AADF,qBAA+CtC,KAA/C;AAAA;AAAA;AAAA;AAAA,2BARF,eAgCE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,EAAtB;AAA0B,oBAAA,SAAS,EAAC,KAApC;AAAA,2CACE,QAAC,SAAD;AACE,sBAAA,UAAU,EACRmC,wBAAwB,IAAIC,sBAA5B,GACIA,sBADJ,GAEI,EAJR;AAME,sBAAA,KAAK,EAAEO,OAAO,CACZR,wBAAwB,IAAIC,sBADhB,CANhB;AASE,sBAAA,OAAO,EAAC,UATV;AAUE,sBAAA,QAAQ,EAAE,kBAACQ,KAAD,EAAW;AACnBrC,wBAAAA,OAAO,CAACC,GAAR,CAAYoC,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACA1D,wBAAAA,MAAM,CAACiD,aAAP,2BACqBrC,KADrB,0BAEE4C,KAAK,CAACC,MAAN,CAAaC,KAFf;AAID,uBAhBH;AAiBE,sBAAA,MAAM,EAAE1D,MAAM,CAACkD,UAjBjB;AAkBE,sBAAA,EAAE,EAAC,mBAlBL;AAmBE,sBAAA,IAAI,EAAC,mBAnBP;AAoBE,sBAAA,KAAK,EAAC,oBApBR;AAqBE,sBAAA,SAAS;AArBX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAhCF,EAyDG/B,OAAO,CAACC,GAAR,CAAYpB,MAAM,CAACiC,MAAnB,CAzDH,eA0DE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,EAAE,EAAE,CAAf;AAAkB,oBAAA,EAAE,EAAE,EAAtB;AAA0B,oBAAA,SAAS,EAAC,KAApC;AAAA,+BACGI,QAAQ,CAACN,OAAT,CAAiBoB,WAAjB,IACCd,QAAQ,CAACL,SAAT,CAAmBmB,WADpB,iBAEG,QAAC,qBAAD;AACE,sBAAA,OAAO,EAAE;AACPC,wBAAAA,OAAO,EAAE,CAACf,QAAQ,CAACN,OAAT,CAAiBoB,WAAlB,CADF;AAEPE,wBAAAA,YAAY,EAAE,CACZhB,QAAQ,CAACL,SAAT,CAAmBmB,WADP,CAFP;AAKPG,wBAAAA,UAAU,EAAE;AALL,uBADX,CAQE;AARF;AASE,sBAAA,QAAQ,EAAE/C;AATZ;AAAA;AAAA;AAAA;AAAA,6BAHN,eAeE,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,IAApB;AAAA,gCACGiB,WAAW,CACVa,QAAQ,CAACN,OAAT,CAAiBoB,WADP,EAEVd,QAAQ,CAACL,SAAT,CAAmBmB,WAFT;AADd;AAAA;AAAA;AAAA;AAAA,6BAfF;AAAA;AAAA;AAAA;AAAA;AAAA,2BA1DF,eAgFE,QAAC,IAAD;AAAM,oBAAA,IAAI,MAAV;AAAW,oBAAA,SAAS,EAAC,KAArB;AAAA,2CACE,QAAC,MAAD;AACE,sBAAA,QAAQ,EAAEvC,KAAK,GAAG,CADpB;AAEE,sBAAA,KAAK,EAAC,WAFR;AAGE,sBAAA,OAAO,EAAE,mBAAM;AACbR,wBAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACAyB,wBAAAA,MAAM,CAAChB,KAAD,CAAN;AACD,uBANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAhFF;AAAA,mBAIOA,KAAK,GAAG,CAJf;AAAA;AAAA;AAAA;AAAA,yBA1EF;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF;AA0KD,aAnMD,CA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA4OD,CA/QD;;GAAMb,Y;;KAAAA,Y;AAiRN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button, Divider, TextField } from \"@mui/material\";\nimport { DistanceMatrixService } from \"@react-google-maps/api\";\n\nimport { Plus as PlusIcon } from \"../../../icons/plus\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({ formik, ...rest }) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n  const [googleResponse, setResponse] = React.useState([]);\n\n  let distanceCallback = (response) => {\n    if (response !== null) {\n      if (response.rows[0].elements[0].status === \"OK\") {\n        const index = googleResponse.findIndex(\n          (obj) =>\n            obj.origin === response.originAddresses[0] &&\n            obj.destination === response.destinationAddresses[0]\n        );\n        if (index < 0) {\n          console.log(response);\n          setResponse([\n            ...googleResponse,\n            {\n              origin: response.originAddresses[0],\n              destination: response.destinationAddresses[0],\n              distance: response.rows[0].elements[0].distance.text,\n              duration: response.rows[0].elements[0].duration.text,\n            },\n          ]);\n        }\n      }\n    }\n  };\n\n  let getDistance = (origin, destination) => {\n    let object = googleResponse.find(\n      (obj) => obj.origin === origin && obj.destination === destination\n    );\n    if (object) return object.distance;\n  };\n\n  return (\n    <React.Fragment>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n          {({ remove, push }) => (\n            <React.Fragment>\n              <Grid\n                container\n                spacing={3}\n                justifyContent=\"space-between\"\n                alignItems={\"center\"}\n                sx={{ mb: 3 }}\n              >\n                <Grid item>\n                  <Typography variant=\"h6\">\n                    Total Deliveries: {noOfDeliveries}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    startIcon={<PlusIcon fontSize=\"small\" />}\n                    onClick={() => {\n                      setNoOfDeliveries(noOfDeliveries + 1);\n                      push({ loading: \"\", unloading: \"\" });\n                    }}\n                  >\n                    Add Delivery\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {formik.values.deliveryDetails.length > 0 &&\n                formik.values.deliveryDetails.map((delivery, index) => {\n                  const loading = `deliveryDetails[${index}].loading`;\n                  const touchedLoading = getIn(formik.touched, loading);\n                  const errorLoading = getIn(formik.errors, loading);\n\n                  const unloading = `deliveryDetails[${index}].unloading`;\n                  const touchedUnloading = getIn(formik.touched, unloading);\n                  const errorUnloading = getIn(formik.errors, unloading);\n\n                  const billQuantity = `deliveryDetails[${index}].billQuantity`;\n                  const touchedBillQuantity = getIn(\n                    formik.touched,\n                    billQuantity\n                  );\n                  const errorBillQuantity = getIn(formik.errors, billQuantity);\n\n                  const unloadingQuantity = `deliveryDetails[${index}].unloadingQuantity`;\n                  const touchedUnloadingQuantity = getIn(\n                    formik.touched,\n                    unloadingQuantity\n                  );\n                  const errorUnloadingQuantity = getIn(\n                    formik.errors,\n                    unloadingQuantity\n                  );\n                  return (\n                    <React.Fragment>\n                      {index > 0 && <Divider sx={{ mb: 2 }} />}\n\n                      <Grid\n                        container\n                        spacing={3}\n                        className=\"row\"\n                        key={index}\n                        alignItems={\"center\"}\n                        sx={{ mb: 2 }}\n                      >\n                        <Grid item md={4} xs={12} className=\"col\" key={index}>\n                          <GoogleMaps\n                            label={\"Loading\"}\n                            error={errorLoading}\n                            touched={touchedLoading}\n                            name={loading}\n                            setFieldValue={formik.setFieldValue}\n                            handleBlur={formik.handleBlur}\n                            values={formik.values}\n                            index={index}\n                            type=\"loading\"\n                            formik={formik}\n                          />\n                        </Grid>\n                        <Grid item md={4} xs={12} className=\"col\">\n                          <GoogleMaps\n                            label={\"Unloading\"}\n                            error={errorUnloading}\n                            touched={touchedUnloading}\n                            name={loading}\n                            setFieldValue={formik.setFieldValue}\n                            handleBlur={formik.handleBlur}\n                            values={formik.values}\n                            index={index}\n                            type=\"unloading\"\n                            formik={formik}\n                          />\n                        </Grid>\n                        <Grid item md={2} xs={12} className=\"col\">\n                          {delivery.loading.description &&\n                            delivery.unloading.description && (\n                              <DistanceMatrixService\n                                options={{\n                                  origins: [delivery.loading.description],\n                                  destinations: [\n                                    delivery.unloading.description,\n                                  ],\n                                  travelMode: \"DRIVING\",\n                                }}\n                                // required\n                                callback={distanceCallback}\n                              />\n                            )}\n                          <Typography variant=\"h6\">\n                            {getDistance(\n                              delivery.loading.description,\n                              delivery.unloading.description\n                            )}\n                          </Typography>\n                        </Grid>\n                        <Grid item className=\"col\">\n                          <Button\n                            disabled={index < 1}\n                            color=\"secondary\"\n                            onClick={() => {\n                              setNoOfDeliveries(noOfDeliveries - 1);\n                              remove(index);\n                            }}\n                          >\n                            Remove\n                          </Button>\n                        </Grid>\n                      </Grid>\n                      <Grid\n                        container\n                        spacing={3}\n                        className=\"row\"\n                        key={index + 1}\n                        alignItems={\"center\"}\n                        sx={{ mb: 2 }}\n                      >\n                        <Grid item md={4} xs={12} className=\"col\" key={index}>\n                          <TextField\n                            helperText={\n                              touchedBillQuantity && errorBillQuantity\n                                ? errorBillQuantity\n                                : \"\"\n                            }\n                            error={Boolean(\n                              touchedBillQuantity && errorBillQuantity\n                            )}\n                            variant=\"outlined\"\n                            onChange={(event) => {\n                              formik.setFieldValue(\n                                `deliveryDetails[${index}].billQuantity`,\n                                event.target.value\n                              );\n                            }}\n                            onBlur={formik.handleBlur}\n                            id=\"billQuantity\"\n                            name=\"billQuantity\"\n                            label=\"Bill Quantity\"\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item md={4} xs={12} className=\"col\">\n                          <TextField\n                            helperText={\n                              touchedUnloadingQuantity && errorUnloadingQuantity\n                                ? errorUnloadingQuantity\n                                : \"\"\n                            }\n                            error={Boolean(\n                              touchedUnloadingQuantity && errorUnloadingQuantity\n                            )}\n                            variant=\"outlined\"\n                            onChange={(event) => {\n                              console.log(event.target.value);\n                              formik.setFieldValue(\n                                `deliveryDetails[${index}].unloadingQuantity`,\n                                event.target.value\n                              );\n                            }}\n                            onBlur={formik.handleBlur}\n                            id=\"unloadingQuantity\"\n                            name=\"unloadingQuantity\"\n                            label=\"Unloading Quantity\"\n                            fullWidth\n                          />\n                        </Grid>\n                        {console.log(formik.values)}\n                        <Grid item md={2} xs={12} className=\"col\">\n                          {delivery.loading.description &&\n                            delivery.unloading.description && (\n                              <DistanceMatrixService\n                                options={{\n                                  origins: [delivery.loading.description],\n                                  destinations: [\n                                    delivery.unloading.description,\n                                  ],\n                                  travelMode: \"DRIVING\",\n                                }}\n                                // required\n                                callback={distanceCallback}\n                              />\n                            )}\n                          <Typography variant=\"h6\">\n                            {getDistance(\n                              delivery.loading.description,\n                              delivery.unloading.description\n                            )}\n                          </Typography>\n                        </Grid>\n                        <Grid item className=\"col\">\n                          <Button\n                            disabled={index < 1}\n                            color=\"secondary\"\n                            onClick={() => {\n                              setNoOfDeliveries(noOfDeliveries - 1);\n                              remove(index);\n                            }}\n                          >\n                            Remove\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </React.Fragment>\n                  );\n                })}\n            </React.Fragment>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}