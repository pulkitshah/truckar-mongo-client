{"ast":null,"code":"import _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nvar DeliveryForm = function DeliveryForm(_ref) {\n  _s();\n\n  var formik = _ref.formik,\n      rest = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      noOfDeliveries = _React$useState2[0],\n      setNoOfDeliveries = _React$useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DeliveryForm, \"ZTvxkYaLXWXNKkEQsk9o96DKDMc=\");\n\n_c = DeliveryForm;\nexport default DeliveryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FieldArray","getIn","Grid","Typography","Button","GoogleMaps","DeliveryForm","formik","rest","useState","noOfDeliveries","setNoOfDeliveries"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,KAArB,QAAkC,QAAlC;AAEA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,QAAyC,eAAzC;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAyB;AAAA;;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAXC,IAAW;;AAAA,wBACAT,KAAK,CAACU,QAAN,CAAe,CAAf,CADA;AAAA;AAAA,MACrCC,cADqC;AAAA,MACrBC,iBADqB;;AAG5C,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,WADF;AAqFD,CAxFD;;GAAML,Y;;KAAAA,Y;AA0FN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { FieldArray, getIn } from \"formik\";\n\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({ formik, ...rest }) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n\n  return (\n    <React.Fragment>\n      {/* <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n        {({ remove, push }) => (\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item>\n                <Typography variant=\"h6\">\n                  No of Deliveries: {noOfDeliveries}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Button\n                  sx={{ mb: 3 }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    setNoOfDeliveries(noOfDeliveries + 1);\n                    push({ loading: \"\", unloading: \"\" });\n                  }}\n                >\n                  Add Delivery\n                </Button>\n              </Grid>\n            </Grid>\n\n            {formik.values.deliveryDetails.length > 0 &&\n              formik.values.deliveryDetails.map((delivery, index) => {\n                const loading = `deliveryDetails[${index}].loading`;\n                const touchedLoading = getIn(formik.touched, loading);\n                const errorLoading = getIn(formik.errors, loading);\n\n                const unloading = `deliveryDetails[${index}].unloading`;\n                const touchedUnloading = getIn(formik.touched, unloading);\n                const errorUnloading = getIn(formik.errors, unloading);\n\n                return (\n                  <Grid container spacing={3} className=\"row\" key={index}>\n                    <Grid item md={4} xs={12} className=\"col\" key={index}>\n                      <GoogleMaps\n                        error={errorLoading}\n                        touched={touchedLoading}\n                        name={loading}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        values={formik.values}\n                        index={index}\n                        type=\"loading\"\n                        formik={formik}\n                      />\n                    </Grid>\n                    <Grid item md={4} xs={12} className=\"col\">\n                      <GoogleMaps\n                        error={errorUnloading}\n                        touched={touchedUnloading}\n                        name={loading}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        values={formik.values}\n                        index={index}\n                        type=\"unloading\"\n                        formik={formik}\n                      />\n                    </Grid>\n                    <Grid item className=\"col\">\n                      <Button\n                        disabled={index < 1}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => {\n                          setNoOfDeliveries(noOfDeliveries - 1);\n                          remove(index);\n                        }}\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n          </React.Fragment>\n        )}\n      </FieldArray> */}\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}