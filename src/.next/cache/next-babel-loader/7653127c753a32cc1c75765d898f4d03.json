{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/settings-drawer.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport { Box, Button, Checkbox, Drawer, FormControlLabel, IconButton, Typography } from '@mui/material';\nimport { useSettings } from '../hooks/use-settings';\nimport { X as XIcon } from '../icons/x';\nimport LightThemeIcon from '../components/light-theme.svg';\nimport DarkThemeIcon from '../components/dark-theme.svg';\nimport PropTypes from 'prop-types';\nvar themes = [{\n  label: 'Light',\n  value: 'light',\n  icon: LightThemeIcon\n}, {\n  label: 'Dark',\n  value: 'dark',\n  icon: DarkThemeIcon\n}];\n\nvar getValues = function getValues(settings) {\n  return {\n    direction: settings.direction,\n    responsiveFontSizes: settings.responsiveFontSizes,\n    theme: settings.theme\n  };\n};\n\nexport var SettingsDrawer = function SettingsDrawer(props) {\n  _s();\n\n  var open = props.open,\n      onClose = props.onClose,\n      other = _objectWithoutProperties(props, [\"open\", \"onClose\"]);\n\n  var _useSettings = useSettings(),\n      settings = _useSettings.settings,\n      saveSettings = _useSettings.saveSettings;\n\n  var _useState = useState(getValues(settings)),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  useEffect(function () {\n    setValues(getValues(settings));\n  }, [settings]);\n\n  var handleChange = function handleChange(field, value) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, field, value)));\n  };\n\n  var handleSave = function handleSave() {\n    saveSettings(values);\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, _objectSpread(_objectSpread({\n    anchor: \"right\",\n    onClose: onClose,\n    open: open,\n    ModalProps: {\n      sx: {\n        zIndex: 2000\n      }\n    },\n    PaperProps: {\n      sx: {\n        width: 320\n      }\n    }\n  }, other), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: 'center',\n        backgroundColor: 'primary.main',\n        color: 'primary.contrastText',\n        display: 'flex',\n        justifyContent: 'space-between',\n        px: 3,\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        variant: \"h6\",\n        children: \"Theme settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(XIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4,\n        px: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        sx: {\n          display: 'block',\n          mb: 1\n        },\n        variant: \"overline\",\n        children: \"Color Scheme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: 'center',\n          display: 'flex',\n          m: -1\n        },\n        children: themes.map(function (theme) {\n          var label = theme.label,\n              Icon = theme.icon,\n              value = theme.value;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              onClick: function onClick() {\n                return handleChange('theme', value);\n              },\n              sx: {\n                borderColor: values.theme === value ? 'primary.main' : 'divider',\n                borderRadius: 1,\n                borderStyle: 'solid',\n                borderWidth: 2,\n                cursor: 'pointer',\n                flexGrow: 1,\n                fontSize: 0,\n                m: 1,\n                overflow: 'hidden',\n                p: 1,\n                '& svg': {\n                  height: 'auto',\n                  width: '100%'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              sx: {\n                mt: 1\n              },\n              variant: \"subtitle2\",\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, _this)]\n          }, value, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textSecondary\",\n        sx: {\n          display: 'block',\n          mb: 1,\n          mt: 4\n        },\n        variant: \"overline\",\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: values.direction === 'rtl',\n            name: \"direction\",\n            onChange: function onChange(event) {\n              return handleChange('direction', event.target.checked ? 'rtl' : 'ltr');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, _this),\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Activate RTL content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: values.responsiveFontSizes,\n            name: \"direction\",\n            onChange: function onChange(event) {\n              return handleChange('responsiveFontSizes', event.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, _this),\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Responsive font sizes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        fullWidth: true,\n        onClick: handleSave,\n        sx: {\n          mt: 3\n        },\n        variant: \"contained\",\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SettingsDrawer, \"nxYkwLwE956eLogYNF4yd+wr4lM=\", false, function () {\n  return [useSettings];\n});\n\n_c = SettingsDrawer;\nSettingsDrawer.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsDrawer\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/settings-drawer.js"],"names":["useEffect","useState","Box","Button","Checkbox","Drawer","FormControlLabel","IconButton","Typography","useSettings","X","XIcon","LightThemeIcon","DarkThemeIcon","PropTypes","themes","label","value","icon","getValues","settings","direction","responsiveFontSizes","theme","SettingsDrawer","props","open","onClose","other","saveSettings","values","setValues","handleChange","field","handleSave","sx","zIndex","width","alignItems","backgroundColor","color","display","justifyContent","px","py","mb","m","map","Icon","borderColor","borderRadius","borderStyle","borderWidth","cursor","flexGrow","fontSize","overflow","p","height","mt","event","target","checked","propTypes","func","bool"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Drawer,\n  FormControlLabel,\n  IconButton,\n  Typography\n} from '@mui/material';\nimport { useSettings } from '../hooks/use-settings';\nimport { X as XIcon } from '../icons/x';\nimport LightThemeIcon from '../components/light-theme.svg';\nimport DarkThemeIcon from '../components/dark-theme.svg';\nimport PropTypes from 'prop-types';\n\nconst themes = [\n  {\n    label: 'Light',\n    value: 'light',\n    icon: LightThemeIcon\n  },\n  {\n    label: 'Dark',\n    value: 'dark',\n    icon: DarkThemeIcon\n  }\n];\n\nconst getValues = (settings) => ({\n  direction: settings.direction,\n  responsiveFontSizes: settings.responsiveFontSizes,\n  theme: settings.theme\n});\n\nexport const SettingsDrawer = (props) => {\n  const { open, onClose, ...other } = props;\n  const { settings, saveSettings } = useSettings();\n  const [values, setValues] = useState(getValues(settings));\n\n  useEffect(() => {\n    setValues(getValues(settings));\n  }, [settings]);\n\n  const handleChange = (field, value) => {\n    setValues({\n      ...values,\n      [field]: value\n    });\n  };\n\n  const handleSave = () => {\n    saveSettings(values);\n    onClose?.();\n  };\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      onClose={onClose}\n      open={open}\n      ModalProps={{ sx: { zIndex: 2000 } }}\n      PaperProps={{ sx: { width: 320 } }}\n      {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          backgroundColor: 'primary.main',\n          color: 'primary.contrastText',\n          display: 'flex',\n          justifyContent: 'space-between',\n          px: 3,\n          py: 2\n        }}\n      >\n        <Typography\n          color=\"inherit\"\n          variant=\"h6\"\n        >\n          Theme settings\n        </Typography>\n        <IconButton\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <XIcon fontSize=\"small\" />\n        </IconButton>\n      </Box>\n      <Box\n        sx={{\n          py: 4,\n          px: 3\n        }}\n      >\n        <Typography\n          color=\"textSecondary\"\n          sx={{\n            display: 'block',\n            mb: 1\n          }}\n          variant=\"overline\"\n        >\n          Color Scheme\n        </Typography>\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            m: -1\n          }}\n        >\n          {themes.map((theme) => {\n            const { label, icon: Icon, value } = theme;\n\n            return (\n              <div key={value}>\n                <Box\n                  onClick={() => handleChange('theme', value)}\n                  sx={{\n                    borderColor: values.theme === value ? 'primary.main' : 'divider',\n                    borderRadius: 1,\n                    borderStyle: 'solid',\n                    borderWidth: 2,\n                    cursor: 'pointer',\n                    flexGrow: 1,\n                    fontSize: 0,\n                    m: 1,\n                    overflow: 'hidden',\n                    p: 1,\n                    '& svg': {\n                      height: 'auto',\n                      width: '100%'\n                    }\n                  }}\n                >\n                  <Icon />\n                </Box>\n                <Typography\n                  align=\"center\"\n                  sx={{ mt: 1 }}\n                  variant=\"subtitle2\"\n                >\n                  {label}\n                </Typography>\n              </div>\n            );\n          })}\n        </Box>\n        <Typography\n          color=\"textSecondary\"\n          sx={{\n            display: 'block',\n            mb: 1,\n            mt: 4\n          }}\n          variant=\"overline\"\n        >\n          Settings\n        </Typography>\n        <div>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={values.direction === 'rtl'}\n                name=\"direction\"\n                onChange={(event) => handleChange('direction', event.target.checked\n                  ? 'rtl'\n                  : 'ltr')}\n              />\n            )}\n            label={(\n              <Typography variant=\"subtitle2\">\n                Activate RTL content\n              </Typography>\n            )}\n          />\n        </div>\n        <div>\n          <FormControlLabel\n            control={(\n              <Checkbox\n                checked={values.responsiveFontSizes}\n                name=\"direction\"\n                onChange={(event) => handleChange('responsiveFontSizes', event.target.checked)}\n              />\n            )}\n            label={(\n              <Typography variant=\"subtitle2\">\n                Responsive font sizes\n              </Typography>\n            )}\n          />\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          onClick={handleSave}\n          sx={{ mt: 3 }}\n          variant=\"contained\"\n        >\n          Save Settings\n        </Button>\n      </Box>\n    </Drawer>\n  );\n};\n\nSettingsDrawer.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}