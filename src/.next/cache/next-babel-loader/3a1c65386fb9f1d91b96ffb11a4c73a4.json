{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-autocomplete/party-addnew-autocomplete.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Formik } from \"formik\";\nimport toast from \"react-hot-toast\";\nimport { v4 as uuid } from \"uuid\";\nimport * as Yup from \"yup\";\nimport { Box, Button, Card, CardContent, Dialog, DialogTitle, Grid, Switch, TextField, Typography } from \"@mui/material\";\nimport GooglePlaces from \"./google-places-autocomplete\";\nimport { partyApi } from \"../../../../api/party-api\";\nimport { useDispatch } from \"../../../../store\";\n\nvar AddNewPartyFromAutocomplete = function AddNewPartyFromAutocomplete(_ref) {\n  _s();\n\n  var open = _ref.open,\n      dialogValue = _ref.dialogValue,\n      setDialogValue = _ref.setDialogValue,\n      setFieldValue = _ref.setFieldValue,\n      toggleOpen = _ref.toggleOpen,\n      type = _ref.type,\n      user = _ref.user,\n      rest = _objectWithoutProperties(_ref, [\"open\", \"dialogValue\", \"setDialogValue\", \"setFieldValue\", \"toggleOpen\", \"type\", \"user\"]);\n\n  var dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: function onClose() {\n        return toggleOpen(false);\n      },\n      \"aria-labelledby\": \"form-dialog-name\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-name\",\n        children: \"Add a new party\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          name: dialogValue.name || \"\",\n          mobile: dialogValue.mobile || \"\",\n          city: dialogValue.location || \"\",\n          isTransporter: dialogValue.isTransporter || false,\n          submit: null\n        },\n        validationSchema: YYup.object().shape({\n          name: Yup.string().max(255).required(\"Name is required\").test(\"Unique Name\", \"A party already exists with this name\",\n          /*#__PURE__*/\n          // <- key, message\n          function () {\n            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value) {\n              var response;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return partyApi.validateDuplicateName(value, user);\n\n                    case 3:\n                      response = _context.sent;\n                      return _context.abrupt(\"return\", response);\n\n                    case 7:\n                      _context.prev = 7;\n                      _context.t0 = _context[\"catch\"](0);\n\n                    case 9:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[0, 7]]);\n            }));\n\n            return function (_x) {\n              return _ref2.apply(this, arguments);\n            };\n          }()),\n          mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Mobile is not valid\").required(\"Mobile is required\").test(\"Unique Mobile\", \"Mobile already in use\",\n          /*#__PURE__*/\n          // <- key, message\n          function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n              var response;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.prev = 0;\n                      _context2.next = 3;\n                      return partyApi.validateDuplicateMobile(value, user);\n\n                    case 3:\n                      response = _context2.sent;\n                      return _context2.abrupt(\"return\", response);\n\n                    case 7:\n                      _context2.prev = 7;\n                      _context2.t0 = _context2[\"catch\"](0);\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2, null, [[0, 7]]);\n            }));\n\n            return function (_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }())\n        }),\n        onSubmit: /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, _ref4) {\n            var setErrors, setStatus, setSubmitting, newParty, response;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    setErrors = _ref4.setErrors, setStatus = _ref4.setStatus, setSubmitting = _ref4.setSubmitting;\n                    _context3.prev = 1;\n                    newParty = {\n                      id: uuid(),\n                      name: values.name,\n                      mobile: values.mobile,\n                      city: JSON.stringify(values.city),\n                      user: user.id,\n                      isTransporter: values.isTransporter\n                    };\n                    _context3.next = 5;\n                    return partyApi.createParty(newParty, dispatch);\n\n                  case 5:\n                    response = _context3.sent;\n                    toast.success(\"Party created!\");\n                    setFieldValue(type, response);\n                    toggleOpen(false);\n                    _context3.next = 17;\n                    break;\n\n                  case 11:\n                    _context3.prev = 11;\n                    _context3.t0 = _context3[\"catch\"](1);\n                    console.log(_context3.t0);\n                    setStatus({\n                      success: false\n                    });\n                    setErrors({\n                      submit: _context3.t0.message\n                    });\n                    setSubmitting(false);\n\n                  case 17:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, null, [[1, 11]]);\n          }));\n\n          return function (_x3, _x4) {\n            return _ref5.apply(this, arguments);\n          };\n        }(),\n        children: function children(_ref6) {\n          var errors = _ref6.errors,\n              handleBlur = _ref6.handleBlur,\n              handleChange = _ref6.handleChange,\n              handleSubmit = _ref6.handleSubmit,\n              isSubmitting = _ref6.isSubmitting,\n              setFieldValue = _ref6.setFieldValue,\n              touched = _ref6.touched,\n              values = _ref6.values;\n          return /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.name && errors.name),\n                      fullWidth: true,\n                      helperText: touched.name && errors.name,\n                      label: \"Main Contact Name\",\n                      name: \"name\",\n                      onBlur: handleBlur,\n                      onChange: function onChange(event) {\n                        setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                        }));\n                      },\n                      required: true,\n                      value: values.name,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.mobile && errors.mobile),\n                      fullWidth: true,\n                      helperText: touched.mobile && errors.mobile,\n                      label: \"Mobile\",\n                      name: \"mobile\",\n                      onBlur: handleBlur,\n                      onChange: function onChange(event) {\n                        setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                      },\n                      value: values.mobile,\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(GooglePlaces, {\n                      error: Boolean(touched.mobile && errors.mobile),\n                      name: \"City\",\n                      field: \"city\",\n                      setFieldValue: setFieldValue,\n                      handleBlur: handleBlur,\n                      values: values\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h5\",\n                      color: \"textPrimary\",\n                      children: \"Party Type\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      children: \"Is this party a transporter?\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n                      checked: values.isTransporter,\n                      color: \"secondary\",\n                      edge: \"start\",\n                      name: \"isTransporter\",\n                      onChange: handleChange,\n                      value: values.isTransporter\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                  mt: 2,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        color: \"secondary\",\n                        type: \"submit\",\n                        disabled: isSubmitting,\n                        children: \"Create Party\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"contained\",\n                        color: \"secondary\",\n                        onClick: function onClick() {\n                          return toggleOpen(false);\n                        },\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddNewPartyFromAutocomplete, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddNewPartyFromAutocomplete;\nexport default AddNewPartyFromAutocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewPartyFromAutocomplete\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-autocomplete/party-addnew-autocomplete.js"],"names":["React","useState","useEffect","useCallback","Formik","toast","v4","uuid","Yup","Box","Button","Card","CardContent","Dialog","DialogTitle","Grid","Switch","TextField","Typography","GooglePlaces","partyApi","useDispatch","AddNewPartyFromAutocomplete","open","dialogValue","setDialogValue","setFieldValue","toggleOpen","type","user","rest","dispatch","name","mobile","city","location","isTransporter","submit","YYup","object","shape","string","max","required","test","value","validateDuplicateName","response","matches","validateDuplicateMobile","values","setErrors","setStatus","setSubmitting","newParty","id","JSON","stringify","createParty","success","console","log","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","event","target","replace","txt","charAt","toUpperCase","substr","toLowerCase"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Formik } from \"formik\";\nimport toast from \"react-hot-toast\";\nimport { v4 as uuid } from \"uuid\";\nimport * as Yup from \"yup\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport GooglePlaces from \"./google-places-autocomplete\";\nimport { partyApi } from \"../../../../api/party-api\";\nimport { useDispatch } from \"../../../../store\";\nconst AddNewPartyFromAutocomplete = ({\n  open,\n  dialogValue,\n  setDialogValue,\n  setFieldValue,\n  toggleOpen,\n  type,\n  user,\n  ...rest\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={() => toggleOpen(false)}\n        aria-labelledby=\"form-dialog-name\"\n      >\n        <DialogTitle id=\"form-dialog-name\">Add a new party</DialogTitle>\n        <Formik\n          initialValues={{\n            name: dialogValue.name || \"\",\n            mobile: dialogValue.mobile || \"\",\n            city: dialogValue.location || \"\",\n            isTransporter: dialogValue.isTransporter || false,\n            submit: null,\n          }}\n          validationSchema={YYup.object().shape({\n            name: Yup.string()\n              .max(255)\n              .required(\"Name is required\")\n              .test(\n                \"Unique Name\",\n                \"A party already exists with this name\", // <- key, message\n                async function (value) {\n                  try {\n                    const response = await partyApi.validateDuplicateName(\n                      value,\n                      user\n                    );\n                    return response;\n                  } catch (error) {}\n                }\n              ),\n            mobile: Yup.string()\n              .matches(/^[6-9]\\d{9}$/, \"Mobile is not valid\")\n              .required(\"Mobile is required\")\n              .test(\n                \"Unique Mobile\",\n                \"Mobile already in use\", // <- key, message\n                async function (value) {\n                  try {\n                    const response = await partyApi.validateDuplicateMobile(\n                      value,\n                      user\n                    );\n                    return response;\n                  } catch (error) {}\n                }\n              ),\n          })}\n          onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n            try {\n              const newParty = {\n                id: uuid(),\n                name: values.name,\n                mobile: values.mobile,\n                city: JSON.stringify(values.city),\n                user: user.id,\n                isTransporter: values.isTransporter,\n              };\n              const response = await partyApi.createParty(newParty, dispatch);\n              toast.success(\"Party created!\");\n              setFieldValue(type, response);\n              toggleOpen(false);\n            } catch (err) {\n              console.log(err);\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            setFieldValue,\n            touched,\n            values,\n          }) => (\n            <form onSubmit={handleSubmit}>\n              <Card>\n                <CardContent>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Main Contact Name\"\n                        name=\"name\"\n                        onBlur={handleBlur}\n                        onChange={(event) => {\n                          setFieldValue(\n                            \"name\",\n                            event.target.value.replace(\n                              /\\w\\S*/g,\n                              function (txt) {\n                                return (\n                                  txt.charAt(0).toUpperCase() +\n                                  txt.substr(1).toLowerCase()\n                                );\n                              }\n                            )\n                          );\n                        }}\n                        required\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        error={Boolean(touched.mobile && errors.mobile)}\n                        fullWidth\n                        helperText={touched.mobile && errors.mobile}\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        onBlur={handleBlur}\n                        onChange={(event) => {\n                          setFieldValue(\n                            \"mobile\",\n                            event.target.value.replace(/ /g, \"\")\n                          );\n                        }}\n                        value={values.mobile}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <GooglePlaces\n                        error={Boolean(touched.mobile && errors.mobile)}\n                        name={\"City\"}\n                        field={\"city\"}\n                        setFieldValue={setFieldValue}\n                        handleBlur={handleBlur}\n                        values={values}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h5\" color=\"textPrimary\">\n                        Party Type\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Is this party a transporter?\n                      </Typography>\n                      <Switch\n                        checked={values.isTransporter}\n                        color=\"secondary\"\n                        edge=\"start\"\n                        name=\"isTransporter\"\n                        onChange={handleChange}\n                        value={values.isTransporter}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Box mt={2}>\n                    <Grid container spacing={3}>\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          type=\"submit\"\n                          disabled={isSubmitting}\n                        >\n                          Create Party\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => toggleOpen(false)}\n                        >\n                          Cancel\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </CardContent>\n              </Card>\n            </form>\n          )}\n        </Formik>\n      </Dialog>\n    </React.Fragment>\n  );\n};\nexport default AddNewPartyFromAutocomplete;\n"]},"metadata":{},"sourceType":"module"}