{"ast":null,"code":"import _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nvar DeliveryForm = function DeliveryForm(_ref) {\n  _s();\n\n  var formik = _ref.formik,\n      rest = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      noOfDeliveries = _React$useState2[0],\n      setNoOfDeliveries = _React$useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"deliveryDetails\",\n      error: formik.errors,\n      children: function children(_ref2) {\n        var remove = _ref2.remove,\n            push = _ref2.push;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: formik.values.deliveryDetails.length > 0 && formik.values.deliveryDetails.map(function (delivery, index) {\n            var loading = \"deliveryDetails[\".concat(index, \"].loading\");\n            var touchedLoading = getIn(formik.touched, loading);\n            var errorLoading = getIn(formik.errors, loading);\n            var unloading = \"deliveryDetails[\".concat(index, \"].unloading\");\n            var touchedUnloading = getIn(formik.touched, unloading);\n            var errorUnloading = getIn(formik.errors, unloading);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                className: \"col\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                className: \"col\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: index < 1,\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: function onClick() {\n                    setNoOfDeliveries(noOfDeliveries - 1);\n                    remove(index);\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DeliveryForm, \"ZTvxkYaLXWXNKkEQsk9o96DKDMc=\");\n\n_c = DeliveryForm;\nexport default DeliveryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FieldArray","getIn","Grid","Typography","Button","GoogleMaps","DeliveryForm","formik","rest","useState","noOfDeliveries","setNoOfDeliveries","errors","remove","push","values","deliveryDetails","length","map","delivery","index","loading","touchedLoading","touched","errorLoading","unloading","touchedUnloading","errorUnloading"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FieldArray, getIn } from \"formik\";\n\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({ formik, ...rest }) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n\n  return (\n    <React.Fragment>\n      <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n        {({ remove, push }) => (\n          <React.Fragment>\n            {/* <Grid container spacing={3}>\n              <Grid item>\n                <Typography variant=\"h6\">\n                  No of Deliveries: {noOfDeliveries}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Button\n                  sx={{ mb: 3 }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    setNoOfDeliveries(noOfDeliveries + 1);\n                    push({ loading: \"\", unloading: \"\" });\n                  }}\n                >\n                  Add Delivery\n                </Button>\n              </Grid>\n            </Grid> */}\n\n            {formik.values.deliveryDetails.length > 0 &&\n              formik.values.deliveryDetails.map((delivery, index) => {\n                const loading = `deliveryDetails[${index}].loading`;\n                const touchedLoading = getIn(formik.touched, loading);\n                const errorLoading = getIn(formik.errors, loading);\n\n                const unloading = `deliveryDetails[${index}].unloading`;\n                const touchedUnloading = getIn(formik.touched, unloading);\n                const errorUnloading = getIn(formik.errors, unloading);\n\n                return (\n                  <Grid container spacing={3} className=\"row\" key={index}>\n                    <Grid item md={4} xs={12} className=\"col\" key={index}>\n                      {/* <GoogleMaps\n                        error={errorLoading}\n                        touched={touchedLoading}\n                        name={loading}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        values={formik.values}\n                        index={index}\n                        type=\"loading\"\n                        formik={formik}\n                      /> */}\n                    </Grid>\n                    <Grid item md={4} xs={12} className=\"col\">\n                      {/* <GoogleMaps\n                        error={errorUnloading}\n                        touched={touchedUnloading}\n                        name={loading}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        values={formik.values}\n                        index={index}\n                        type=\"unloading\"\n                        formik={formik}\n                      /> */}\n                    </Grid>\n                    <Grid item className=\"col\">\n                      <Button\n                        disabled={index < 1}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => {\n                          setNoOfDeliveries(noOfDeliveries - 1);\n                          remove(index);\n                        }}\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n          </React.Fragment>\n        )}\n      </FieldArray>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}