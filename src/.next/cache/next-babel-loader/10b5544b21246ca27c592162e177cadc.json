{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/party/party-list-table.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nimport NextLink from 'next/link';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, Button, Checkbox, IconButton, Link, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography } from '@mui/material';\nimport { ArrowRight as ArrowRightIcon } from '../../../icons/arrow-right';\nimport { PencilAlt as PencilAltIcon } from '../../../icons/pencil-alt';\nimport { getInitials } from '../../../utils/get-initials';\nimport { Scrollbar } from '../../scrollbar';\nexport var CustomerListTable = function CustomerListTable(props) {\n  _s();\n\n  var customers = props.customers,\n      customersCount = props.customersCount,\n      onPageChange = props.onPageChange,\n      onRowsPerPageChange = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"customers\", \"customersCount\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var _useState = useState([]),\n      selectedCustomers = _useState[0],\n      setSelectedCustomers = _useState[1]; // Reset selected customers when customers change\n\n\n  useEffect(function () {\n    if (selectedCustomers.length) {\n      setSelectedCustomers([]);\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [customers]);\n\n  var handleSelectAllCustomers = function handleSelectAllCustomers(event) {\n    setSelectedCustomers(event.target.checked ? customers.map(function (customer) {\n      return customer.id;\n    }) : []);\n  };\n\n  var handleSelectOneCustomer = function handleSelectOneCustomer(event, customerId) {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers(function (prevSelected) {\n        return [].concat(_toConsumableArray(prevSelected), [customerId]);\n      });\n    } else {\n      setSelectedCustomers(function (prevSelected) {\n        return prevSelected.filter(function (id) {\n          return id !== customerId;\n        });\n      });\n    }\n  };\n\n  var enableBulkActions = selectedCustomers.length > 0;\n  var selectedSomeCustomers = selectedCustomers.length > 0 && selectedCustomers.length < customers.length;\n  var selectedAllCustomers = selectedCustomers.length === customers.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, other), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'neutral.100',\n        display: !enableBulkActions && 'none',\n        px: 2,\n        py: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: selectedAllCustomers,\n        indeterminate: selectedSomeCustomers,\n        onChange: handleSelectAllCustomers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        sx: {\n          ml: 2\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        sx: {\n          ml: 2\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 700\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          sx: {\n            visibility: enableBulkActions ? 'collapse' : 'visible'\n          },\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedAllCustomers,\n                indeterminate: selectedSomeCustomers,\n                onChange: handleSelectAllCustomers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Orders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Spent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: customers.map(function (customer) {\n            var isCustomerSelected = selectedCustomers.includes(customer.id);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              selected: isCustomerSelected,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isCustomerSelected,\n                  onChange: function onChange(event) {\n                    return handleSelectOneCustomer(event, customer.id);\n                  },\n                  value: isCustomerSelected\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    alignItems: 'center',\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                    src: customer.avatar,\n                    sx: {\n                      height: 42,\n                      width: 42\n                    },\n                    children: getInitials(customer.name)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      ml: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(NextLink, {\n                      href: \"/dashboard/customers/1\",\n                      passHref: true,\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        color: \"inherit\",\n                        variant: \"subtitle2\",\n                        children: customer.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 27\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                      color: \"textSecondary\",\n                      variant: \"body2\",\n                      children: customer.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 25\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"\".concat(customer.city, \", \").concat(customer.state, \", \").concat(customer.country)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: customer.totalOrders\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"success.main\",\n                  variant: \"subtitle2\",\n                  children: numeral(customer.totalAmountSpent).format(\"\".concat(customer.currency, \"0,0.00\"))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(NextLink, {\n                  href: \"/dashboard/customers/1/edit\",\n                  passHref: true,\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    component: \"a\",\n                    children: /*#__PURE__*/_jsxDEV(PencilAltIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(NextLink, {\n                  href: \"/dashboard/customers/1\",\n                  passHref: true,\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    component: \"a\",\n                    children: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, _this)]\n            }, customer.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: customersCount,\n      onPageChange: onPageChange,\n      onRowsPerPageChange: onRowsPerPageChange,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      rowsPerPageOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomerListTable, \"as/B/CMNieokKBAW9L4H7lvIffg=\");\n\n_c = CustomerListTable;\nCustomerListTable.propTypes = {\n  customers: PropTypes.array.isRequired,\n  customersCount: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func,\n  onRowsPerPageChange: PropTypes.func,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerListTable\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/party/party-list-table.js"],"names":["useEffect","useState","NextLink","numeral","PropTypes","Avatar","Box","Button","Checkbox","IconButton","Link","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","ArrowRight","ArrowRightIcon","PencilAlt","PencilAltIcon","getInitials","Scrollbar","CustomerListTable","props","customers","customersCount","onPageChange","onRowsPerPageChange","page","rowsPerPage","other","selectedCustomers","setSelectedCustomers","length","handleSelectAllCustomers","event","target","checked","map","customer","id","handleSelectOneCustomer","customerId","includes","prevSelected","filter","enableBulkActions","selectedSomeCustomers","selectedAllCustomers","backgroundColor","display","px","py","ml","minWidth","visibility","isCustomerSelected","alignItems","avatar","height","width","name","email","city","state","country","totalOrders","totalAmountSpent","format","currency","propTypes","array","isRequired","number","func"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport NextLink from 'next/link';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Checkbox,\n  IconButton,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@mui/material';\nimport { ArrowRight as ArrowRightIcon } from '../../../icons/arrow-right';\nimport { PencilAlt as PencilAltIcon } from '../../../icons/pencil-alt';\nimport { getInitials } from '../../../utils/get-initials';\nimport { Scrollbar } from '../../scrollbar';\n\nexport const CustomerListTable = (props) => {\n  const {\n    customers,\n    customersCount,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    ...other\n  } = props;\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n\n  // Reset selected customers when customers change\n  useEffect(() => {\n      if (selectedCustomers.length) {\n        setSelectedCustomers([]);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [customers]);\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  const handleSelectOneCustomer = (event, customerId) => {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n    } else {\n      setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n    }\n  };\n\n  const enableBulkActions = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0\n    && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <div {...other}>\n      <Box\n        sx={{\n          backgroundColor: 'neutral.100',\n          display: !enableBulkActions && 'none',\n          px: 2,\n          py: 0.5\n        }}\n      >\n        <Checkbox\n          checked={selectedAllCustomers}\n          indeterminate={selectedSomeCustomers}\n          onChange={handleSelectAllCustomers}\n        />\n        <Button\n          size=\"small\"\n          sx={{ ml: 2 }}\n        >\n          Delete\n        </Button>\n        <Button\n          size=\"small\"\n          sx={{ ml: 2 }}\n        >\n          Edit\n        </Button>\n      </Box>\n      <Scrollbar>\n        <Table sx={{ minWidth: 700 }}>\n          <TableHead sx={{ visibility: enableBulkActions ? 'collapse' : 'visible' }}>\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={selectedAllCustomers}\n                  indeterminate={selectedSomeCustomers}\n                  onChange={handleSelectAllCustomers}\n                />\n              </TableCell>\n              <TableCell>\n                Name\n              </TableCell>\n              <TableCell>\n                Location\n              </TableCell>\n              <TableCell>\n                Orders\n              </TableCell>\n              <TableCell>\n                Spent\n              </TableCell>\n              <TableCell align=\"right\">\n                Actions\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers.map((customer) => {\n              const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n              return (\n                <TableRow\n                  hover\n                  key={customer.id}\n                  selected={isCustomerSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={isCustomerSelected}\n                      onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                      value={isCustomerSelected}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Avatar\n                        src={customer.avatar}\n                        sx={{\n                          height: 42,\n                          width: 42\n                        }}\n                      >\n                        {getInitials(customer.name)}\n                      </Avatar>\n                      <Box sx={{ ml: 1 }}>\n                        <NextLink\n                          href=\"/dashboard/customers/1\"\n                          passHref\n                        >\n                          <Link\n                            color=\"inherit\"\n                            variant=\"subtitle2\"\n                          >\n                            {customer.name}\n                          </Link>\n                        </NextLink>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {customer.email}\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {`${customer.city}, ${customer.state}, ${customer.country}`}\n                  </TableCell>\n                  <TableCell>\n                    {customer.totalOrders}\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"success.main\"\n                      variant=\"subtitle2\"\n                    >\n                      {numeral(customer.totalAmountSpent).format(`${customer.currency}0,0.00`)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <NextLink\n                      href=\"/dashboard/customers/1/edit\"\n                      passHref\n                    >\n                      <IconButton component=\"a\">\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                    </NextLink>\n                    <NextLink\n                      href=\"/dashboard/customers/1\"\n                      passHref\n                    >\n                      <IconButton component=\"a\">\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </NextLink>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={customersCount}\n        onPageChange={onPageChange}\n        onRowsPerPageChange={onRowsPerPageChange}\n        page={page}\n        rowsPerPage={rowsPerPage}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </div>\n  );\n};\n\nCustomerListTable.propTypes = {\n  customers: PropTypes.array.isRequired,\n  customersCount: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func,\n  onRowsPerPageChange: PropTypes.func,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}