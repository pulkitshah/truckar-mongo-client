{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/party/party-address-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { partyApi } from \"../../../api/party-api\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nexport const PartyAddressForm = props => {\n  const {\n    party,\n    address,\n    toggleStatus,\n    type\n  } = props;\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      name: address.name || \"\",\n      gstin: address.gstin || \"\",\n      pan: address.pan || \"\",\n      billingAddressLine1: address.billingAddressLine1 || \"\",\n      billingAddressLine2: address.billingAddressLine2 || \"\",\n      city: address.city || \"\",\n      user: user.id,\n      submit: null\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        type === \"new\" ? await partyApi.createPartyAddress(values, dispatch) : await partyApi.updatePartyAddress(values, dispatch);\n        toggleStatus();\n        toast.success(\"Party updated!\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n      onSubmit: formik.handleSubmit\n    }, props), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: \"center\",\n          backgroundColor: theme => theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n          bpartyRadius: 1,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          px: 3,\n          py: 2.5,\n          my: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          sx: {\n            mr: 2\n          },\n          color: \"textSecondary\",\n          children: \"Party Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            display: \"flex\",\n            m: -1,\n            \"& > button\": {\n              m: 1\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            size: \"small\",\n            variant: \"contained\",\n            children: \"Save Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleStatus,\n            size: \"small\",\n            variant: \"outlined\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 3\n        },\n        variant: \"h6\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.name && formik.errors.name),\n        fullWidth: true,\n        helperText: formik.touched.name && formik.errors.name,\n        label: \"Name\",\n        name: \"name\",\n        onBlur: formik.handleBlur,\n        onChange: event => {\n          formik.setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }));\n        },\n        value: formik.values.name,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.gstin && formik.errors.gstin),\n        fullWidth: true,\n        helperText: formik.touched.gstin && formik.rrors.gstin,\n        label: \"GSTIN\",\n        name: \"gstin\",\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange,\n        value: formik.values.gstin,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.pan && formik.errors.pan),\n        fullWidth: true,\n        helperText: formik.touched.pan && eformik.rrors.pan,\n        label: \"PAN\",\n        name: \"pan\",\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange,\n        value: formik.values.pan,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.billingaddressline1 && formik.errors.billingaddressline1),\n        fullWidth: true,\n        helperText: formik.touched.billingaddressline1 && formik.errors.billingaddressline1,\n        label: \"Billing Address Line 1\",\n        name: \"billingaddressline1\",\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange,\n        value: formik.values.billingAddressLine1,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.billingaddressline2 && formik.errors.billingaddressline2),\n        fullWidth: true,\n        helperText: formik.touched.billingaddressline2 && formik.errors.billingaddressline2,\n        label: \"Billing Address Line 2\",\n        name: \"billingaddressline2\",\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange,\n        value: formik.values.billingAddressLine2,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMaps, {\n        formik: formik,\n        error: Boolean(formik.touched.city && formik.errors.city),\n        label: \"City\",\n        field: \"city\",\n        setFieldValue: formik.setFieldValue,\n        handleBlur: formik.handleBlur,\n        values: formik.values\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: 10\n          },\n          variant: \"contained\",\n          color: \"secondary\",\n          type: \"submit\",\n          children: type === \"new\" ? \"Create Party\" : \"Update Party\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: toggleStatus,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/party/party-address-form.js"],"names":["useRouter","toast","Yup","useFormik","Box","Button","TextField","Typography","useAuth","partyApi","useDispatch","GoogleMaps","PartyAddressForm","props","party","address","toggleStatus","type","router","dispatch","user","formik","initialValues","name","gstin","pan","billingAddressLine1","billingAddressLine2","city","id","submit","onSubmit","values","helpers","createPartyAddress","updatePartyAddress","success","err","console","error","setStatus","setErrors","message","setSubmitting","handleSubmit","alignItems","backgroundColor","theme","palette","mode","bpartyRadius","display","flexWrap","justifyContent","px","py","my","mr","m","mt","Boolean","touched","errors","handleBlur","event","setFieldValue","target","value","replace","txt","charAt","toUpperCase","substr","toLowerCase","rrors","handleChange","eformik","billingaddressline1","billingaddressline2","marginRight"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, TextField, Typography } from \"@mui/material\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { partyApi } from \"../../../api/party-api\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nexport const PartyAddressForm = (props) => {\n  const { party, address, toggleStatus, type } = props;\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  const formik = useFormik({\n    initialValues: {\n      name: address.name || \"\",\n      gstin: address.gstin || \"\",\n      pan: address.pan || \"\",\n      billingAddressLine1: address.billingAddressLine1 || \"\",\n      billingAddressLine2: address.billingAddressLine2 || \"\",\n      city: address.city || \"\",\n      user: user.id,\n      submit: null,\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        type === \"new\"\n          ? await partyApi.createPartyAddress(values, dispatch)\n          : await partyApi.updatePartyAddress(values, dispatch);\n        toggleStatus();\n        toast.success(\"Party updated!\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit} {...props}>\n        <Box\n          sx={{\n            alignItems: \"center\",\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n            bpartyRadius: 1,\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            px: 3,\n            py: 2.5,\n            my: 2.5,\n          }}\n        >\n          <Typography variant=\"overline\" sx={{ mr: 2 }} color=\"textSecondary\">\n            Party Address\n          </Typography>\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              m: -1,\n              \"& > button\": {\n                m: 1,\n              },\n            }}\n          >\n            <Button\n              color=\"primary\"\n              type=\"submit\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Save Address\n            </Button>\n            <Button onClick={toggleStatus} size=\"small\" variant=\"outlined\">\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n\n        <Typography sx={{ mt: 3 }} variant=\"h6\">\n          Details\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          error={Boolean(formik.touched.name && formik.errors.name)}\n          fullWidth\n          helperText={formik.touched.name && formik.errors.name}\n          label=\"Name\"\n          name=\"name\"\n          onBlur={formik.handleBlur}\n          onChange={(event) => {\n            formik.setFieldValue(\n              \"name\",\n              event.target.value.replace(/\\w\\S*/g, function (txt) {\n                return (\n                  txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                );\n              })\n            );\n          }}\n          value={formik.values.name}\n          variant=\"outlined\"\n        />\n        <TextField\n          margin=\"normal\"\n          error={Boolean(formik.touched.gstin && formik.errors.gstin)}\n          fullWidth\n          helperText={formik.touched.gstin && formik.rrors.gstin}\n          label=\"GSTIN\"\n          name=\"gstin\"\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n          value={formik.values.gstin}\n          variant=\"outlined\"\n        />\n        <TextField\n          margin=\"normal\"\n          error={Boolean(formik.touched.pan && formik.errors.pan)}\n          fullWidth\n          helperText={formik.touched.pan && eformik.rrors.pan}\n          label=\"PAN\"\n          name=\"pan\"\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n          value={formik.values.pan}\n          variant=\"outlined\"\n        />\n        <TextField\n          margin=\"normal\"\n          error={Boolean(\n            formik.touched.billingaddressline1 &&\n              formik.errors.billingaddressline1\n          )}\n          fullWidth\n          helperText={\n            formik.touched.billingaddressline1 &&\n            formik.errors.billingaddressline1\n          }\n          label=\"Billing Address Line 1\"\n          name=\"billingaddressline1\"\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n          value={formik.values.billingAddressLine1}\n          variant=\"outlined\"\n        />\n        <TextField\n          margin=\"normal\"\n          error={Boolean(\n            formik.touched.billingaddressline2 &&\n              formik.errors.billingaddressline2\n          )}\n          fullWidth\n          helperText={\n            formik.touched.billingaddressline2 &&\n            formik.errors.billingaddressline2\n          }\n          label=\"Billing Address Line 2\"\n          name=\"billingaddressline2\"\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n          value={formik.values.billingAddressLine2}\n          variant=\"outlined\"\n        />\n        <GoogleMaps\n          formik={formik}\n          error={Boolean(formik.touched.city && formik.errors.city)}\n          label={\"City\"}\n          field={\"city\"}\n          setFieldValue={formik.setFieldValue}\n          handleBlur={formik.handleBlur}\n          values={formik.values}\n        />\n        <Box mt={2}>\n          <Button\n            style={{ marginRight: 10 }}\n            variant=\"contained\"\n            color=\"secondary\"\n            type=\"submit\"\n          >\n            {type === \"new\" ? \"Create Party\" : \"Update Party\"}\n          </Button>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={toggleStatus}>\n            Cancel\n          </Button>\n        </Box>\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}