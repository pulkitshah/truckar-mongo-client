{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, FormControlLabel, FormHelperText, Grid, MenuItem, Switch, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete\";\nimport moment from \"moment\";\nimport { API } from \"aws-amplify\";\nimport { createOrder } from \"../../../graphql/mutations\"; // import { v4 as uuid } from \"uuid\";\n\nconst categoryOptions = [{\n  label: \"Healthcare\",\n  value: \"healthcare\"\n}, {\n  label: \"Makeup\",\n  value: \"makeup\"\n}, {\n  label: \"Dress\",\n  value: \"dress\"\n}, {\n  label: \"Skincare\",\n  value: \"skincare\"\n}, {\n  label: \"Jewelry\",\n  value: \"jewelry\"\n}, {\n  label: \"Blouse\",\n  value: \"blouse\"\n}];\nexport const OrderCreateForm = props => {\n  const router = useRouter();\n  const {\n    user\n  } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      barcode: \"925487986526\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      name: \"\",\n      newPrice: 0,\n      oldPrice: 0,\n      sku: \"IYV-8745\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n      category: Yup.string().max(255),\n      description: Yup.string().max(5000),\n      images: Yup.array(),\n      //   name: Yup.string().max(255).required(),\n      //   newPrice: Yup.number().min(0).required(),\n      oldPrice: Yup.number().min(0),\n      sku: Yup.string().max(255)\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        console.log(user);\n        const newOrder = {\n          //   id: uuid(),\n          orderNo: parseInt(values.orderNo),\n          user: user.id,\n          saleDate: values.saleDate.format()\n        };\n        const response = await API.graphql({\n          query: createOrder,\n          variables: {\n            input: newOrder\n          },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\"\n        });\n        console.log(response); // await DataStore.save(\n        //   new Order({\n        //     id: uuid(),\n        //     orderNo: parseInt(values.orderNo),\n        //     user: auth.user._id,\n        //     saleDate: values.saleDate.format(),\n        //   })\n        // );\n\n        toast.success(\"Order created!\");\n        router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: () => setFieldTouched(\"end\"),\n                  onChange: date => formik.setFieldValue(\"saleDate\", moment(date)),\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                    fullWidth: true\n                  }, params), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 6,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"customer\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["useState","useRouter","toast","Yup","useFormik","Box","Button","Card","CardContent","FormControlLabel","FormHelperText","Grid","MenuItem","Switch","TextField","Typography","DatePicker","useAuth","PartyAutocomplete","moment","API","createOrder","categoryOptions","label","value","OrderCreateForm","props","router","user","formik","initialValues","saleDate","barcode","category","description","images","name","newPrice","oldPrice","sku","submit","validationSchema","object","string","max","array","number","min","onSubmit","values","helpers","console","log","newOrder","orderNo","parseInt","id","format","response","graphql","query","variables","input","authMode","success","push","err","error","setStatus","setErrors","message","setSubmitting","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","setFieldTouched","date","setFieldValue","params","display","flexWrap","justifyContent","mx","mb","mt","m","mr"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete\";\nimport moment from \"moment\";\n\nimport { API } from \"aws-amplify\";\nimport { createOrder } from \"../../../graphql/mutations\";\n// import { v4 as uuid } from \"uuid\";\n\nconst categoryOptions = [\n  {\n    label: \"Healthcare\",\n    value: \"healthcare\",\n  },\n  {\n    label: \"Makeup\",\n    value: \"makeup\",\n  },\n  {\n    label: \"Dress\",\n    value: \"dress\",\n  },\n  {\n    label: \"Skincare\",\n    value: \"skincare\",\n  },\n  {\n    label: \"Jewelry\",\n    value: \"jewelry\",\n  },\n  {\n    label: \"Blouse\",\n    value: \"blouse\",\n  },\n];\n\nexport const OrderCreateForm = (props) => {\n  const router = useRouter();\n  const { user } = useAuth();\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n      barcode: \"925487986526\",\n      category: \"\",\n      description: \"\",\n      images: [],\n      name: \"\",\n      newPrice: 0,\n      oldPrice: 0,\n      sku: \"IYV-8745\",\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n      category: Yup.string().max(255),\n      description: Yup.string().max(5000),\n      images: Yup.array(),\n      //   name: Yup.string().max(255).required(),\n      //   newPrice: Yup.number().min(0).required(),\n      oldPrice: Yup.number().min(0),\n      sku: Yup.string().max(255),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        console.log(user);\n\n        const newOrder = {\n          //   id: uuid(),\n          orderNo: parseInt(values.orderNo),\n          user: user.id,\n          saleDate: values.saleDate.format(),\n        };\n\n        const response = await API.graphql({\n          query: createOrder,\n          variables: { input: newOrder },\n          authMode: \"AMAZON_COGNITO_USER_POOLS\",\n        });\n\n        console.log(response);\n        // await DataStore.save(\n        //   new Order({\n        //     id: uuid(),\n        //     orderNo: parseInt(values.orderNo),\n        //     user: auth.user._id,\n        //     saleDate: values.saleDate.format(),\n        //   })\n        // );\n        toast.success(\"Order created!\");\n        router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <PartyAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    type=\"customer\"\n                    user={user}\n                    formik={formik}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}