{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-password-recovery.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRouter } from 'next/router';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Box, Button, FormHelperText, TextField } from '@mui/material';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\nexport var AmplifyPasswordRecovery = function AmplifyPasswordRecovery(props) {\n  _s();\n\n  var isMounted = useMounted();\n\n  var _useAuth = useAuth(),\n      passwordRecovery = _useAuth.passwordRecovery;\n\n  var router = useRouter();\n  var formik = useFormik({\n    initialValues: {\n      email: '',\n      submit: null\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return passwordRecovery(values.email);\n\n              case 3:\n                if (isMounted()) {\n                  sessionStorage.setItem('username', values.email);\n                  router.push('/authentication/password-reset');\n                }\n\n                _context.next = 10;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n                if (isMounted()) {\n                  helpers.setStatus({\n                    success: false\n                  });\n                  helpers.setErrors({\n                    submit: _context.t0.message\n                  });\n                  helpers.setSubmitting(false);\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    noValidate: true,\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      autoFocus: true,\n      error: Boolean(formik.touched.email && formik.errors.email),\n      fullWidth: true,\n      helperText: formik.touched.email && formik.errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      type: \"email\",\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, _this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: formik.errors.submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formik.isSubmitting,\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Recover Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AmplifyPasswordRecovery, \"RzQK8kfqMRoniowiX7cvNcyVafs=\", false, function () {\n  return [useMounted, useAuth, useRouter, useFormik];\n});\n\n_c = AmplifyPasswordRecovery;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmplifyPasswordRecovery\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-password-recovery.js"],"names":["useRouter","Yup","useFormik","Box","Button","FormHelperText","TextField","useAuth","useMounted","AmplifyPasswordRecovery","props","isMounted","passwordRecovery","router","formik","initialValues","email","submit","validationSchema","object","string","max","required","onSubmit","values","helpers","sessionStorage","setItem","push","console","error","setStatus","success","setErrors","message","setSubmitting","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","mt","isSubmitting"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Box, Button, FormHelperText, TextField } from '@mui/material';\nimport { useAuth } from '../../hooks/use-auth';\nimport { useMounted } from '../../hooks/use-mounted';\n\nexport const AmplifyPasswordRecovery = (props) => {\n  const isMounted = useMounted();\n  const { passwordRecovery } = useAuth();\n  const router = useRouter();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      submit: null\n    },\n    validationSchema: Yup.object({\n      email: Yup\n        .string()\n        .email('Must be a valid email')\n        .max(255)\n        .required('Email is required')\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await passwordRecovery(values.email);\n\n        if (isMounted()) {\n          sessionStorage.setItem('username', values.email);\n          router.push('/authentication/password-reset');\n        }\n      } catch (err) {\n        console.error(err);\n\n        if (isMounted()) {\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  return (\n    <form\n      noValidate\n      onSubmit={formik.handleSubmit}\n      {...props}>\n      <TextField\n        autoFocus\n        error={Boolean(formik.touched.email && formik.errors.email)}\n        fullWidth\n        helperText={formik.touched.email && formik.errors.email}\n        label=\"Email Address\"\n        margin=\"normal\"\n        name=\"email\"\n        onBlur={formik.handleBlur}\n        onChange={formik.handleChange}\n        type=\"email\"\n        value={formik.values.email}\n      />\n      {formik.errors.submit && (\n        <Box sx={{ mt: 3 }}>\n          <FormHelperText error>\n            {formik.errors.submit}\n          </FormHelperText>\n        </Box>\n      )}\n      <Box sx={{ mt: 3 }}>\n        <Button\n          disabled={formik.isSubmitting}\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Recover Password\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}