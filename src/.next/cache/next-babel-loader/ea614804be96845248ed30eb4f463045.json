{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport PropTypes from \"prop-types\";\nimport { useAuth } from \"../../hooks/use-auth\";\nexport const AuthGuard = props => {\n  const {\n    children\n  } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  console.log(auth.user);\n  useEffect(() => {\n    // if (!router.isReady) {\n    //   return;\n    // }\n    if (!auth.isAuthenticated) {\n      console.log(router.asPath);\n      router.push({\n        pathname: \"/authentication/login\",\n        query: {\n          returnUrl: router.asPath\n        }\n      });\n\n      if (auth.user.onBoardingRequired === true) {\n        router.push({\n          pathname: \"/dashboard/welcome\"\n        });\n      }\n    } else {\n      setChecked(true);\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n\n  if (!checked) {\n    return null;\n  } // If got here, it means that the redirect did not occur, and that tells us that the user is\n  // authenticated / authorized.\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\nAuthGuard.propTypes = {\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/auth-guard.js"],"names":["useEffect","useState","useRouter","PropTypes","useAuth","AuthGuard","props","children","auth","router","checked","setChecked","console","log","user","isAuthenticated","asPath","push","pathname","query","returnUrl","onBoardingRequired","propTypes","node"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,IAAI,GAAGJ,OAAO,EAApB;AACA,QAAMK,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,IAAjB;AACAd,EAAAA,SAAS,CACP,MAAM;AACJ;AACA;AACA;AACA,QAAI,CAACQ,IAAI,CAACO,eAAV,EAA2B;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACO,MAAnB;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY;AACVC,QAAAA,QAAQ,EAAE,uBADA;AAEVC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAEX,MAAM,CAACO;AAApB;AAFG,OAAZ;;AAIA,UAAIR,IAAI,CAACM,IAAL,CAAUO,kBAAV,KAAiC,IAArC,EAA2C;AACzCZ,QAAAA,MAAM,CAACQ,IAAP,CAAY;AACVC,UAAAA,QAAQ,EAAE;AADA,SAAZ;AAGD;AACF,KAXD,MAWO;AACLP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAnBM,EAoBP;AACA,IArBO,CAAT;;AAwBA,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO,IAAP;AACD,GAjCiC,CAmClC;AACA;;;AAEA,sBAAO;AAAA,cAAGH;AAAH,mBAAP;AACD,CAvCM;AAyCPF,SAAS,CAACiB,SAAV,GAAsB;AACpBf,EAAAA,QAAQ,EAAEJ,SAAS,CAACoB;AADA,CAAtB","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport PropTypes from \"prop-types\";\nimport { useAuth } from \"../../hooks/use-auth\";\n\nexport const AuthGuard = (props) => {\n  const { children } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const [checked, setChecked] = useState(false);\n\n  console.log(auth.user);\n  useEffect(\n    () => {\n      // if (!router.isReady) {\n      //   return;\n      // }\n      if (!auth.isAuthenticated) {\n        console.log(router.asPath);\n        router.push({\n          pathname: \"/authentication/login\",\n          query: { returnUrl: router.asPath },\n        });\n        if (auth.user.onBoardingRequired === true) {\n          router.push({\n            pathname: \"/dashboard/welcome\",\n          });\n        }\n      } else {\n        setChecked(true);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  if (!checked) {\n    return null;\n  }\n\n  // If got here, it means that the redirect did not occur, and that tells us that the user is\n  // authenticated / authorized.\n\n  return <>{children}</>;\n};\n\nAuthGuard.propTypes = {\n  children: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}