{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/branch-create-form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Divider, FormControlLabel, FormHelperText, Grid, MenuItem, Switch, TextField, Typography } from \"@mui/material\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nconst categoryOptions = [{\n  label: \"Healthcare\",\n  value: \"healthcare\"\n}, {\n  label: \"Makeup\",\n  value: \"makeup\"\n}, {\n  label: \"Dress\",\n  value: \"dress\"\n}, {\n  label: \"Skincare\",\n  value: \"skincare\"\n}, {\n  label: \"Jewelry\",\n  value: \"jewelry\"\n}, {\n  label: \"Blouse\",\n  value: \"blouse\"\n}];\nexport const BranchCreateForm = props => {\n  const router = useRouter();\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      addressLine1: Yup.string().max(255).required(\"Address Line 1 is required\"),\n      city: Yup.object().required(\"City is required\")\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        toast.success(\"Branch created!\"); // router.push(\"/dashboard/branches\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  const handleDrop = newFiles => {\n    setFiles(prevFiles => [...prevFiles, ...newFiles]);\n  };\n\n  const handleRemove = file => {\n    setFiles(prevFiles => prevFiles.filter(_file => _file.path !== file.path));\n  };\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          alignItems: \"center\",\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Tell us your city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n              formik: formik,\n              error: Boolean(formik.touched.city && formik.errors.city),\n              label: \"Your city in India\",\n              field: \"city\",\n              setFieldValue: formik.setFieldValue,\n              handleBlur: formik.handleBlur,\n              values: formik.values\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          alignItems: \"center\",\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Tell us your city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n              formik: formik,\n              error: Boolean(formik.touched.city && formik.errors.city),\n              label: \"Your city in India\",\n              field: \"city\",\n              setFieldValue: formik.setFieldValue,\n              handleBlur: formik.handleBlur,\n              values: formik.values\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Tell us your city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n              formik: formik,\n              error: Boolean(formik.touched.city && formik.errors.city),\n              label: \"Your city in India\",\n              field: \"city\",\n              setFieldValue: formik.setFieldValue,\n              handleBlur: formik.handleBlur,\n              values: formik.values\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              sx: {\n                mt: 1\n              },\n              children: \"Images will appear in the store front of your website.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FileDropzone, {\n              accept: \"image/*\",\n              files: files,\n              onDrop: handleDrop,\n              onRemove: handleRemove,\n              onRemoveAll: handleRemoveAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Pricing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(formik.touched.oldPrice && formik.errors.oldPrice),\n              fullWidth: true,\n              label: \"Old price\",\n              name: \"oldPrice\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              type: \"number\",\n              value: formik.values.oldPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(formik.touched.newPrice && formik.errors.newPrice),\n              fullWidth: true,\n              label: \"New Price\",\n              name: \"newPrice\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              sx: {\n                mt: 2\n              },\n              type: \"number\",\n              value: formik.values.newPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 28\n                }, this),\n                label: \"Keep selling when stock is empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(formik.touched.category && formik.errors.category),\n              fullWidth: true,\n              label: \"Category\",\n              name: \"category\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              select: true,\n              value: formik.values.category,\n              children: categoryOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: true,\n              error: Boolean(formik.touched.barcode && formik.errors.barcode),\n              fullWidth: true,\n              label: \"Barcode\",\n              name: \"barcode\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              sx: {\n                mt: 2\n              },\n              value: formik.values.barcode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              disabled: true,\n              error: Boolean(formik.touched.sku && formik.errors.sku),\n              fullWidth: true,\n              label: \"SKU\",\n              name: \"sku\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              sx: {\n                mt: 2\n              },\n              value: formik.values.sku\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/branch-create-form.js"],"names":["useState","useRouter","toast","Yup","useFormik","Box","Button","Card","CardContent","Divider","FormControlLabel","FormHelperText","Grid","MenuItem","Switch","TextField","Typography","FileDropzone","QuillEditor","GoogleMaps","categoryOptions","label","value","BranchCreateForm","props","router","files","setFiles","formik","initialValues","name","addressLine1","addressLine2","city","submit","validationSchema","object","string","max","required","onSubmit","values","helpers","success","err","console","error","setStatus","setErrors","message","setSubmitting","handleDrop","newFiles","prevFiles","handleRemove","file","filter","_file","path","handleRemoveAll","handleSubmit","mb","Boolean","touched","errors","setFieldValue","handleBlur","mt","oldPrice","handleChange","newPrice","category","map","option","barcode","sku","display","flexWrap","justifyContent","mx","m","mr"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nconst categoryOptions = [\n  {\n    label: \"Healthcare\",\n    value: \"healthcare\",\n  },\n  {\n    label: \"Makeup\",\n    value: \"makeup\",\n  },\n  {\n    label: \"Dress\",\n    value: \"dress\",\n  },\n  {\n    label: \"Skincare\",\n    value: \"skincare\",\n  },\n  {\n    label: \"Jewelry\",\n    value: \"jewelry\",\n  },\n  {\n    label: \"Blouse\",\n    value: \"blouse\",\n  },\n];\n\nexport const BranchCreateForm = (props) => {\n  const router = useRouter();\n  const [files, setFiles] = useState([]);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      addressLine1: Yup.string()\n        .max(255)\n        .required(\"Address Line 1 is required\"),\n      city: Yup.object().required(\"City is required\"),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        toast.success(\"Branch created!\");\n        // router.push(\"/dashboard/branches\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  const handleDrop = (newFiles) => {\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n  };\n\n  const handleRemove = (file) => {\n    setFiles((prevFiles) =>\n      prevFiles.filter((_file) => _file.path !== file.path)\n    );\n  };\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 4 }}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Tell us your city</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              {/* <TextField\n                error={Boolean(formik.touched.name && formik.errors.name)}\n                fullWidth\n                helperText={formik.touched.name && formik.errors.name}\n                label=\"Branch Name\"\n                name=\"name\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                value={formik.values.name}\n              /> */}\n              <GoogleMaps\n                formik={formik}\n                error={Boolean(formik.touched.city && formik.errors.city)}\n                label={\"Your city in India\"}\n                field={\"city\"}\n                setFieldValue={formik.setFieldValue}\n                handleBlur={formik.handleBlur}\n                values={formik.values}\n              />\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 4 }}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Tell us your city</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              {/* <TextField\n                error={Boolean(formik.touched.name && formik.errors.name)}\n                fullWidth\n                helperText={formik.touched.name && formik.errors.name}\n                label=\"Branch Name\"\n                name=\"name\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                value={formik.values.name}\n              /> */}\n              <GoogleMaps\n                formik={formik}\n                error={Boolean(formik.touched.city && formik.errors.city)}\n                label={\"Your city in India\"}\n                field={\"city\"}\n                setFieldValue={formik.setFieldValue}\n                handleBlur={formik.handleBlur}\n                values={formik.values}\n              />\n            </Grid>\n          </Grid>\n          <Divider />\n        </CardContent>\n      </Card>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3} alignItems=\"center\">\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Tell us your city</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              {/* <TextField\n                error={Boolean(formik.touched.name && formik.errors.name)}\n                fullWidth\n                helperText={formik.touched.name && formik.errors.name}\n                label=\"Branch Name\"\n                name=\"name\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                value={formik.values.name}\n              /> */}\n              <GoogleMaps\n                formik={formik}\n                error={Boolean(formik.touched.city && formik.errors.city)}\n                label={\"Your city in India\"}\n                field={\"city\"}\n                setFieldValue={formik.setFieldValue}\n                handleBlur={formik.handleBlur}\n                values={formik.values}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Images</Typography>\n              <Typography color=\"textSecondary\" variant=\"body2\" sx={{ mt: 1 }}>\n                Images will appear in the store front of your website.\n              </Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <FileDropzone\n                accept=\"image/*\"\n                files={files}\n                onDrop={handleDrop}\n                onRemove={handleRemove}\n                onRemoveAll={handleRemoveAll}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Pricing</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <TextField\n                error={Boolean(\n                  formik.touched.oldPrice && formik.errors.oldPrice\n                )}\n                fullWidth\n                label=\"Old price\"\n                name=\"oldPrice\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                type=\"number\"\n                value={formik.values.oldPrice}\n              />\n              <TextField\n                error={Boolean(\n                  formik.touched.newPrice && formik.errors.newPrice\n                )}\n                fullWidth\n                label=\"New Price\"\n                name=\"newPrice\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                sx={{ mt: 2 }}\n                type=\"number\"\n                value={formik.values.newPrice}\n              />\n              <Box sx={{ mt: 2 }}>\n                <FormControlLabel\n                  control={<Switch />}\n                  label=\"Keep selling when stock is empty\"\n                />\n              </Box>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Category</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <TextField\n                error={Boolean(\n                  formik.touched.category && formik.errors.category\n                )}\n                fullWidth\n                label=\"Category\"\n                name=\"category\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                select\n                value={formik.values.category}\n              >\n                {categoryOptions.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                disabled\n                error={Boolean(formik.touched.barcode && formik.errors.barcode)}\n                fullWidth\n                label=\"Barcode\"\n                name=\"barcode\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                sx={{ mt: 2 }}\n                value={formik.values.barcode}\n              />\n              <TextField\n                disabled\n                error={Boolean(formik.touched.sku && formik.errors.sku)}\n                fullWidth\n                label=\"SKU\"\n                name=\"sku\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                sx={{ mt: 2 }}\n                value={formik.values.sku}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}