{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/file-dropzone.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport { Box, Button, IconButton, Link, List, ListItem, ListItemIcon, ListItemText, Tooltip, Typography } from '@mui/material';\nimport { Duplicate as DuplicateIcon } from '../icons/duplicate';\nimport { X as XIcon } from '../icons/x';\nimport { bytesToSize } from '../utils/bytes-to-size';\nexport const FileDropzone = props => {\n  const {\n    accept,\n    disabled,\n    files,\n    getFilesFromEvent,\n    maxFiles,\n    maxSize,\n    minSize,\n    noClick,\n    noDrag,\n    noDragEventsBubbling,\n    noKeyboard,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onRemove,\n    onRemoveAll,\n    onUpload,\n    preventDropOnDocument\n  } = props,\n        other = _objectWithoutProperties(props, [\"accept\", \"disabled\", \"files\", \"getFilesFromEvent\", \"maxFiles\", \"maxSize\", \"minSize\", \"noClick\", \"noDrag\", \"noDragEventsBubbling\", \"noKeyboard\", \"onDrop\", \"onDropAccepted\", \"onDropRejected\", \"onFileDialogCancel\", \"onRemove\", \"onRemoveAll\", \"onUpload\", \"preventDropOnDocument\"]); // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, other), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n      sx: _objectSpread(_objectSpread({\n        alignItems: 'center',\n        border: 1,\n        borderRadius: 1,\n        borderStyle: 'dashed',\n        borderColor: 'divider',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        outline: 'none',\n        p: 6\n      }, isDragActive && {\n        backgroundColor: 'action.active',\n        opacity: 0.5\n      }), {}, {\n        '&:hover': {\n          backgroundColor: 'action.hover',\n          cursor: 'pointer',\n          opacity: 0.5\n        }\n      })\n    }, getRootProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          '& img': {\n            width: 100\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Select file\",\n          src: \"/static/undraw_add_file2_gvbb.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: `Select file${maxFiles && maxFiles === 1 ? '' : 's'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [`Drop file${maxFiles && maxFiles === 1 ? '' : 's'}`, ' ', /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"always\",\n              children: \"browse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), ' ', \"thorough your machine\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        children: files.map(file => /*#__PURE__*/_jsxDEV(ListItem, {\n          sx: {\n            border: 1,\n            borderColor: 'divider',\n            borderRadius: 1,\n            '& + &': {\n              mt: 1\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(DuplicateIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: file.name,\n            primaryTypographyProps: {\n              color: 'textPrimary',\n              variant: 'subtitle2'\n            },\n            secondary: bytesToSize(file.size)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Remove\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => onRemove && onRemove(file),\n              children: /*#__PURE__*/_jsxDEV(XIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, file.path, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onRemoveAll,\n          size: \"small\",\n          type: \"button\",\n          children: \"Remove All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onUpload,\n          size: \"small\",\n          sx: {\n            ml: 2\n          },\n          type: \"button\",\n          variant: \"contained\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\nFileDropzone.propTypes = {\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  disabled: PropTypes.bool,\n  files: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool\n};\nFileDropzone.defaultProps = {\n  files: []\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/file-dropzone.js"],"names":["PropTypes","useDropzone","Box","Button","IconButton","Link","List","ListItem","ListItemIcon","ListItemText","Tooltip","Typography","Duplicate","DuplicateIcon","X","XIcon","bytesToSize","FileDropzone","props","accept","disabled","files","getFilesFromEvent","maxFiles","maxSize","minSize","noClick","noDrag","noDragEventsBubbling","noKeyboard","onDrop","onDropAccepted","onDropRejected","onFileDialogCancel","onRemove","onRemoveAll","onUpload","preventDropOnDocument","other","getRootProps","getInputProps","isDragActive","alignItems","border","borderRadius","borderStyle","borderColor","display","flexWrap","justifyContent","outline","p","backgroundColor","opacity","cursor","width","mt","length","map","file","name","color","variant","size","path","ml","propTypes","oneOfType","string","arrayOf","bool","array","func","number","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,QANF,EAOEC,YAPF,EAQEC,YARF,EASEC,OATF,EAUEC,UAVF,QAWO,eAXP;AAYA,SAASC,SAAS,IAAIC,aAAtB,QAA2C,oBAA3C;AACA,SAASC,CAAC,IAAIC,KAAd,QAA2B,YAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AACrC,QAAM;AACJC,IAAAA,MADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,iBAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,OAPI;AAQJC,IAAAA,OARI;AASJC,IAAAA,MATI;AAUJC,IAAAA,oBAVI;AAWJC,IAAAA,UAXI;AAYJC,IAAAA,MAZI;AAaJC,IAAAA,cAbI;AAcJC,IAAAA,cAdI;AAeJC,IAAAA,kBAfI;AAgBJC,IAAAA,QAhBI;AAiBJC,IAAAA,WAjBI;AAkBJC,IAAAA,QAlBI;AAmBJC,IAAAA;AAnBI,MAqBFnB,KArBJ;AAAA,QAoBKoB,KApBL,4BAqBIpB,KArBJ,yRADqC,CAwBrC;AACA;;;AACA,QAAM;AAAEqB,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDxC,WAAW,CAAC;AAChEkB,IAAAA,MADgE;AAEhEI,IAAAA,QAFgE;AAGhEC,IAAAA,OAHgE;AAIhEC,IAAAA,OAJgE;AAKhEK,IAAAA;AALgE,GAAD,CAAjE;AAQA,sBACE,+CAASQ,KAAT;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,EAAE;AACAI,QAAAA,UAAU,EAAE,QADZ;AAEAC,QAAAA,MAAM,EAAE,CAFR;AAGAC,QAAAA,YAAY,EAAE,CAHd;AAIAC,QAAAA,WAAW,EAAE,QAJb;AAKAC,QAAAA,WAAW,EAAE,SALb;AAMAC,QAAAA,OAAO,EAAE,MANT;AAOAC,QAAAA,QAAQ,EAAE,MAPV;AAQAC,QAAAA,cAAc,EAAE,QARhB;AASAC,QAAAA,OAAO,EAAE,MATT;AAUAC,QAAAA,CAAC,EAAE;AAVH,SAWIV,YAAY,IAAI;AAClBW,QAAAA,eAAe,EAAE,eADC;AAElBC,QAAAA,OAAO,EAAE;AAFS,OAXpB;AAeA,mBAAW;AACTD,UAAAA,eAAe,EAAE,cADR;AAETE,UAAAA,MAAM,EAAE,SAFC;AAGTD,UAAAA,OAAO,EAAE;AAHA;AAfX;AADJ,OAsBMd,YAAY,EAtBlB;AAAA,8BAuBE,mCAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA,cAvBF,eAwBE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACF,mBAAS;AACPe,YAAAA,KAAK,EAAE;AADA;AADP,SADN;AAAA,+BAOE;AACE,UAAA,GAAG,EAAC,aADN;AAEE,UAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,cAxBF,eAoCE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEJ,UAAAA,CAAC,EAAE;AAAL,SAAT;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBACI,cAAc5B,QAAQ,IAAIA,QAAQ,KAAK,CAA1B,GAA+B,EAA/B,GAAoC,GAAI;AADzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEiC,YAAAA,EAAE,EAAE;AAAN,WAAT;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,uBACI,YAAYjC,QAAQ,IAAIA,QAAQ,KAAK,CAA1B,GAA+B,EAA/B,GAAoC,GAAI,EADvD,EAEG,GAFH,eAGE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAMG,GANH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAsDGF,KAAK,CAACoC,MAAN,GAAe,CAAf,iBACC,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAED,QAAAA,EAAE,EAAE;AAAN,OAAT;AAAA,8BACE,QAAC,IAAD;AAAA,kBACGnC,KAAK,CAACqC,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,UAAA,EAAE,EAAE;AACFhB,YAAAA,MAAM,EAAE,CADN;AAEFG,YAAAA,WAAW,EAAE,SAFX;AAGFF,YAAAA,YAAY,EAAE,CAHZ;AAIF,qBAAS;AACPY,cAAAA,EAAE,EAAE;AADG;AAJP,WAFN;AAAA,kCAWE,QAAC,YAAD;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,QAAQ,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF,eAcE,QAAC,YAAD;AACE,YAAA,OAAO,EAAEG,IAAI,CAACC,IADhB;AAEE,YAAA,sBAAsB,EAAE;AACtBC,cAAAA,KAAK,EAAE,aADe;AAEtBC,cAAAA,OAAO,EAAE;AAFa,aAF1B;AAME,YAAA,SAAS,EAAE9C,WAAW,CAAC2C,IAAI,CAACI,IAAN;AANxB;AAAA;AAAA;AAAA;AAAA,kBAdF,eAsBE,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,QAAf;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,KADP;AAEE,cAAA,OAAO,EAAE,MAAM7B,QAAQ,IAAIA,QAAQ,CAACyB,IAAD,CAFrC;AAAA,qCAIE,QAAC,KAAD;AAAO,gBAAA,QAAQ,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtBF;AAAA,WACOA,IAAI,CAACK,IADZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAoCE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFjB,UAAAA,OAAO,EAAE,MADP;AAEFE,UAAAA,cAAc,EAAE,UAFd;AAGFO,UAAAA,EAAE,EAAE;AAHF,SADN;AAAA,gCAOE,QAAC,MAAD;AACE,UAAA,OAAO,EAAErB,WADX;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAcE,QAAC,MAAD;AACE,UAAA,OAAO,EAAEC,QADX;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,EAAE,EAAE;AAAE6B,YAAAA,EAAE,EAAE;AAAN,WAHN;AAIE,UAAA,IAAI,EAAC,QAJP;AAKE,UAAA,OAAO,EAAC,WALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwHD,CA1JM;AA4JPhD,YAAY,CAACiD,SAAb,GAAyB;AACvB/C,EAAAA,MAAM,EAAEnB,SAAS,CAACmE,SAAV,CAAoB,CAC1BnE,SAAS,CAACoE,MADgB,EAE1BpE,SAAS,CAACqE,OAAV,CAAkBrE,SAAS,CAACoE,MAA5B,CAF0B,CAApB,CADe;AAKvBhD,EAAAA,QAAQ,EAAEpB,SAAS,CAACsE,IALG;AAMvBjD,EAAAA,KAAK,EAAErB,SAAS,CAACuE,KANM;AAOvBjD,EAAAA,iBAAiB,EAAEtB,SAAS,CAACwE,IAPN;AAQvBjD,EAAAA,QAAQ,EAAEvB,SAAS,CAACyE,MARG;AASvBjD,EAAAA,OAAO,EAAExB,SAAS,CAACyE,MATI;AAUvBhD,EAAAA,OAAO,EAAEzB,SAAS,CAACyE,MAVI;AAWvB/C,EAAAA,OAAO,EAAE1B,SAAS,CAACsE,IAXI;AAYvB3C,EAAAA,MAAM,EAAE3B,SAAS,CAACsE,IAZK;AAavB1C,EAAAA,oBAAoB,EAAE5B,SAAS,CAACsE,IAbT;AAcvBzC,EAAAA,UAAU,EAAE7B,SAAS,CAACsE,IAdC;AAevBxC,EAAAA,MAAM,EAAE9B,SAAS,CAACwE,IAfK;AAgBvBzC,EAAAA,cAAc,EAAE/B,SAAS,CAACwE,IAhBH;AAiBvBxC,EAAAA,cAAc,EAAEhC,SAAS,CAACwE,IAjBH;AAkBvBvC,EAAAA,kBAAkB,EAAEjC,SAAS,CAACwE,IAlBP;AAmBvBtC,EAAAA,QAAQ,EAAElC,SAAS,CAACwE,IAnBG;AAoBvBrC,EAAAA,WAAW,EAAEnC,SAAS,CAACwE,IApBA;AAqBvBpC,EAAAA,QAAQ,EAAEpC,SAAS,CAACwE,IArBG;AAsBvBnC,EAAAA,qBAAqB,EAAErC,SAAS,CAACsE;AAtBV,CAAzB;AAyBArD,YAAY,CAACyD,YAAb,GAA4B;AAC1BrD,EAAAA,KAAK,EAAE;AADmB,CAA5B","sourcesContent":["import PropTypes from 'prop-types';\nimport { useDropzone } from 'react-dropzone';\nimport {\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography\n} from '@mui/material';\nimport { Duplicate as DuplicateIcon } from '../icons/duplicate';\nimport { X as XIcon } from '../icons/x';\nimport { bytesToSize } from '../utils/bytes-to-size';\n\nexport const FileDropzone = (props) => {\n  const {\n    accept,\n    disabled,\n    files,\n    getFilesFromEvent,\n    maxFiles,\n    maxSize,\n    minSize,\n    noClick,\n    noDrag,\n    noDragEventsBubbling,\n    noKeyboard,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onRemove,\n    onRemoveAll,\n    onUpload,\n    preventDropOnDocument,\n    ...other\n  } = props;\n\n  // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop\n  });\n\n  return (\n    <div {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          border: 1,\n          borderRadius: 1,\n          borderStyle: 'dashed',\n          borderColor: 'divider',\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          outline: 'none',\n          p: 6,\n          ...(isDragActive && {\n            backgroundColor: 'action.active',\n            opacity: 0.5\n          }),\n          '&:hover': {\n            backgroundColor: 'action.hover',\n            cursor: 'pointer',\n            opacity: 0.5\n          }\n        }}\n        {...getRootProps()}>\n        <input {...getInputProps()} />\n        <Box\n          sx={{\n            '& img': {\n              width: 100\n            }\n          }}\n        >\n          <img\n            alt=\"Select file\"\n            src=\"/static/undraw_add_file2_gvbb.svg\"\n          />\n        </Box>\n        <Box sx={{ p: 2 }}>\n          <Typography variant=\"h6\">\n            {`Select file${(maxFiles && maxFiles === 1) ? '' : 's'}`}\n          </Typography>\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"body1\">\n              {`Drop file${(maxFiles && maxFiles === 1) ? '' : 's'}`}\n              {' '}\n              <Link underline=\"always\">\n                browse\n              </Link>\n              {' '}\n              thorough your machine\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      {files.length > 0 && (\n        <Box sx={{ mt: 2 }}>\n          <List>\n            {files.map((file) => (\n              <ListItem\n                key={file.path}\n                sx={{\n                  border: 1,\n                  borderColor: 'divider',\n                  borderRadius: 1,\n                  '& + &': {\n                    mt: 1\n                  }\n                }}\n              >\n                <ListItemIcon>\n                  <DuplicateIcon fontSize=\"small\" />\n                </ListItemIcon>\n                <ListItemText\n                  primary={file.name}\n                  primaryTypographyProps={{\n                    color: 'textPrimary',\n                    variant: 'subtitle2'\n                  }}\n                  secondary={bytesToSize(file.size)}\n                />\n                <Tooltip title=\"Remove\">\n                  <IconButton\n                    edge=\"end\"\n                    onClick={() => onRemove && onRemove(file)}\n                  >\n                    <XIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </ListItem>\n            ))}\n          </List>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              mt: 2\n            }}\n          >\n            <Button\n              onClick={onRemoveAll}\n              size=\"small\"\n              type=\"button\"\n            >\n              Remove All\n            </Button>\n            <Button\n              onClick={onUpload}\n              size=\"small\"\n              sx={{ ml: 2 }}\n              type=\"button\"\n              variant=\"contained\"\n            >\n              Upload\n            </Button>\n          </Box>\n        </Box>\n      )}\n    </div>\n  );\n};\n\nFileDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  disabled: PropTypes.bool,\n  files: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool\n};\n\nFileDropzone.defaultProps = {\n  files: []\n};\n"]},"metadata":{},"sourceType":"module"}