{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = (_ref) => {\n  let {\n    formik\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"formik\"]);\n\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"deliveryDetails\",\n        error: formik.errors,\n        children: ({\n          remove,\n          push\n        }) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"No of Deliveries: \", noOfDeliveries]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: () => {\n                  setNoOfDeliveries(noOfDeliveries + 1);\n                  push({\n                    loading: \"\",\n                    unloading: \"\"\n                  });\n                },\n                children: \"Add Delivery\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this), formik.values.deliveryDetails.length > 0 && formik.values.deliveryDetails.map((delivery, index) => {\n            const loading = `deliveryDetails[${index}].loading`;\n            const touchedLoading = getIn(formik.touched, loading);\n            const errorLoading = getIn(formik.errors, loading);\n            const unloading = `deliveryDetails[${index}].unloading`;\n            const touchedUnloading = getIn(formik.touched, unloading);\n            const errorUnloading = getIn(formik.errors, unloading);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              className: \"row\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  error: errorLoading,\n                  touched: touchedLoading,\n                  name: loading,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  values: formik.values,\n                  index: index,\n                  type: \"loading\",\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  error: errorUnloading,\n                  touched: touchedUnloading,\n                  name: loading,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  values: formik.values,\n                  index: index,\n                  type: \"unloading\",\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 2,\n                xs: 12,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"240 Kms\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: index < 1,\n                  color: \"secondary\",\n                  onClick: () => {\n                    setNoOfDeliveries(noOfDeliveries - 1);\n                    remove(index);\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DeliveryForm;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FormikProvider","FieldArray","getIn","Grid","Typography","Button","GoogleMaps","DeliveryForm","formik","rest","noOfDeliveries","setNoOfDeliveries","useState","errors","remove","push","loading","unloading","values","deliveryDetails","length","map","delivery","index","touchedLoading","touched","errorLoading","touchedUnloading","errorUnloading","setFieldValue","handleBlur"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FormikProvider, FieldArray, getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport GoogleMaps from \"./google-places-autocomplete\";\n\nconst DeliveryForm = ({ formik, ...rest }) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n  return (\n    <React.Fragment>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n          {({ remove, push }) => (\n            <React.Fragment>\n              <Grid\n                container\n                spacing={3}\n                justifyContent=\"space-between\"\n                alignItems={\"center\"}\n              >\n                <Grid item>\n                  <Typography variant=\"h6\">\n                    No of Deliveries: {noOfDeliveries}\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={() => {\n                      setNoOfDeliveries(noOfDeliveries + 1);\n                      push({ loading: \"\", unloading: \"\" });\n                    }}\n                  >\n                    Add Delivery\n                  </Button>\n                </Grid>\n              </Grid>\n\n              {formik.values.deliveryDetails.length > 0 &&\n                formik.values.deliveryDetails.map((delivery, index) => {\n                  const loading = `deliveryDetails[${index}].loading`;\n                  const touchedLoading = getIn(formik.touched, loading);\n                  const errorLoading = getIn(formik.errors, loading);\n\n                  const unloading = `deliveryDetails[${index}].unloading`;\n                  const touchedUnloading = getIn(formik.touched, unloading);\n                  const errorUnloading = getIn(formik.errors, unloading);\n\n                  return (\n                    <Grid\n                      container\n                      spacing={3}\n                      className=\"row\"\n                      key={index}\n                      alignItems={\"center\"}\n                    >\n                      <Grid item md={4} xs={12} className=\"col\" key={index}>\n                        <GoogleMaps\n                          error={errorLoading}\n                          touched={touchedLoading}\n                          name={loading}\n                          setFieldValue={formik.setFieldValue}\n                          handleBlur={formik.handleBlur}\n                          values={formik.values}\n                          index={index}\n                          type=\"loading\"\n                          formik={formik}\n                        />\n                      </Grid>\n                      <Grid item md={4} xs={12} className=\"col\">\n                        <GoogleMaps\n                          error={errorUnloading}\n                          touched={touchedUnloading}\n                          name={loading}\n                          setFieldValue={formik.setFieldValue}\n                          handleBlur={formik.handleBlur}\n                          values={formik.values}\n                          index={index}\n                          type=\"unloading\"\n                          formik={formik}\n                        />\n                      </Grid>\n                      <Grid item md={2} xs={12} className=\"col\">\n                        <Typography variant=\"h6\">240 Kms</Typography>\n                      </Grid>\n                      <Grid item className=\"col\">\n                        <Button\n                          disabled={index < 1}\n                          color=\"secondary\"\n                          onClick={() => {\n                            setNoOfDeliveries(noOfDeliveries - 1);\n                            remove(index);\n                          }}\n                        >\n                          Remove\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  );\n                })}\n            </React.Fragment>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}