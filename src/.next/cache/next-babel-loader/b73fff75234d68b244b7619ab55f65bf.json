{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-addnew-autocomplete.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Box, Button, Card, CardContent, Dialog, DialogTitle, Grid, Switch, TextField, Typography } from \"@mui/material\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\n\nvar AddNewPartyFromAutocomplete = function AddNewPartyFromAutocomplete(_ref) {\n  var open = _ref.open,\n      dialogValue = _ref.dialogValue,\n      setDialogValue = _ref.setDialogValue,\n      setFieldValue = _ref.setFieldValue,\n      toggleOpen = _ref.toggleOpen,\n      type = _ref.type,\n      user = _ref.user,\n      rest = _objectWithoutProperties(_ref, [\"open\", \"dialogValue\", \"setDialogValue\", \"setFieldValue\", \"toggleOpen\", \"type\", \"user\"]);\n\n  console.log(open);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        onClose: toggleOpen,\n        open: open,\n        \"aria-labelledby\": \"form-dialog-name\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-name\",\n          children: \"Add a new party\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: dialogValue.name || \"\",\n            mobile: dialogValue.mobile || \"\",\n            location: dialogValue.location || \"\",\n            transporter: dialogValue.transporter || \"\",\n            submit: null\n          },\n          validationSchema: Yup.object().shape({\n            name: Yup.string().max(255).required(\"Name is required\"),\n            mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\").required(\"Mobile is required\")\n          }),\n          onSubmit: /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n              var resetForm, setErrors, setStatus, setSubmitting, response;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      resetForm = _ref2.resetForm, setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                      _context.prev = 1;\n                      _context.next = 4;\n                      return axios.post(\"/api/parties/\", _objectSpread({\n                        name: values.name.replace(/\\w\\S*/g, function (txt) {\n                          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                        })\n                      }, values));\n\n                    case 4:\n                      response = _context.sent;\n                      setFieldValue(type, response.data);\n                      resetForm();\n                      setStatus({\n                        success: true\n                      });\n                      setSubmitting(false);\n                      enqueueSnackbar(\"Party updated\", {\n                        variant: \"success\",\n                        action: /*#__PURE__*/_jsxDEV(Button, {\n                          children: \"See all\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 75,\n                          columnNumber: 27\n                        }, _this)\n                      });\n                      toggleOpen();\n                      _context.next = 19;\n                      break;\n\n                    case 13:\n                      _context.prev = 13;\n                      _context.t0 = _context[\"catch\"](1);\n                      console.log(_context.t0);\n                      setStatus({\n                        success: false\n                      });\n                      setErrors({\n                        submit: _context.t0.message\n                      });\n                      setSubmitting(false);\n\n                    case 19:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, null, [[1, 13]]);\n            }));\n\n            return function (_x, _x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }(),\n          children: function children(_ref4) {\n            var errors = _ref4.errors,\n                handleBlur = _ref4.handleBlur,\n                handleChange = _ref4.handleChange,\n                handleSubmit = _ref4.handleSubmit,\n                isSubmitting = _ref4.isSubmitting,\n                setFieldValue = _ref4.setFieldValue,\n                touched = _ref4.touched,\n                values = _ref4.values;\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.name && errors.name),\n                        fullWidth: true,\n                        helperText: touched.name && errors.name,\n                        label: \"Main Contact Name\",\n                        name: \"name\",\n                        onBlur: handleBlur,\n                        onChange: function onChange(event) {\n                          setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                          }));\n                        },\n                        required: true,\n                        value: values.name,\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        error: Boolean(touched.mobile && errors.mobile),\n                        fullWidth: true,\n                        helperText: touched.mobile && errors.mobile,\n                        label: \"Mobile\",\n                        name: \"mobile\",\n                        onBlur: handleBlur,\n                        onChange: function onChange(event) {\n                          setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                        },\n                        value: values.mobile,\n                        variant: \"outlined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: \"textPrimary\",\n                        children: \"Party Type\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: \"Is this party a transporter?\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: values.transporter,\n                        color: \"secondary\",\n                        edge: \"start\",\n                        name: \"transporter\",\n                        onChange: handleChange,\n                        value: values.transporter\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    mt: 2,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          type: \"submit\",\n                          disabled: isSubmitting,\n                          children: \"Create Party\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          color: \"secondary\",\n                          onClick: toggleOpen(false),\n                          children: \"Cancel\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 27\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = AddNewPartyFromAutocomplete;\nexport default AddNewPartyFromAutocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewPartyFromAutocomplete\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-addnew-autocomplete.js"],"names":["React","useState","useEffect","useCallback","Yup","Formik","Box","Button","Card","CardContent","Dialog","DialogTitle","Grid","Switch","TextField","Typography","GoogleMaps","AddNewPartyFromAutocomplete","open","dialogValue","setDialogValue","setFieldValue","toggleOpen","type","user","rest","console","log","name","mobile","location","transporter","submit","object","shape","string","max","required","matches","values","resetForm","setErrors","setStatus","setSubmitting","axios","post","replace","txt","charAt","toUpperCase","substr","toLowerCase","response","data","success","enqueueSnackbar","variant","action","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","event","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\n\nconst AddNewPartyFromAutocomplete = ({\n  open,\n  dialogValue,\n  setDialogValue,\n  setFieldValue,\n  toggleOpen,\n  type,\n  user,\n  ...rest\n}) => {\n  console.log(open);\n\n  return (\n    <React.Fragment>\n      <form>\n        <Dialog\n          onClose={toggleOpen}\n          open={open}\n          aria-labelledby=\"form-dialog-name\"\n        >\n          <DialogTitle id=\"form-dialog-name\">Add a new party</DialogTitle>\n          <Formik\n            initialValues={{\n              name: dialogValue.name || \"\",\n              mobile: dialogValue.mobile || \"\",\n              location: dialogValue.location || \"\",\n              transporter: dialogValue.transporter || \"\",\n              submit: null,\n            }}\n            validationSchema={Yup.object().shape({\n              name: Yup.string().max(255).required(\"Name is required\"),\n              mobile: Yup.string()\n                .matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\")\n                .required(\"Mobile is required\"),\n            })}\n            onSubmit={async (\n              values,\n              { resetForm, setErrors, setStatus, setSubmitting }\n            ) => {\n              try {\n                // NOTE: Make API request\n                const response = await axios.post(`/api/parties/`, {\n                  name: values.name.replace(/\\w\\S*/g, function (txt) {\n                    return (\n                      txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                    );\n                  }),\n                  ...values,\n                });\n                setFieldValue(type, response.data);\n                resetForm();\n                setStatus({ success: true });\n                setSubmitting(false);\n                enqueueSnackbar(\"Party updated\", {\n                  variant: \"success\",\n                  action: <Button>See all</Button>,\n                });\n                toggleOpen();\n              } catch (err) {\n                console.log(err);\n                setStatus({ success: false });\n                setErrors({ submit: err.message });\n                setSubmitting(false);\n              }\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              setFieldValue,\n              touched,\n              values,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Card>\n                  <CardContent>\n                    <Grid container spacing={3}>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={Boolean(touched.name && errors.name)}\n                          fullWidth\n                          helperText={touched.name && errors.name}\n                          label=\"Main Contact Name\"\n                          name=\"name\"\n                          onBlur={handleBlur}\n                          onChange={(event) => {\n                            setFieldValue(\n                              \"name\",\n                              event.target.value.replace(\n                                /\\w\\S*/g,\n                                function (txt) {\n                                  return (\n                                    txt.charAt(0).toUpperCase() +\n                                    txt.substr(1).toLowerCase()\n                                  );\n                                }\n                              )\n                            );\n                          }}\n                          required\n                          value={values.name}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          error={Boolean(touched.mobile && errors.mobile)}\n                          fullWidth\n                          helperText={touched.mobile && errors.mobile}\n                          label=\"Mobile\"\n                          name=\"mobile\"\n                          onBlur={handleBlur}\n                          onChange={(event) => {\n                            setFieldValue(\n                              \"mobile\",\n                              event.target.value.replace(/ /g, \"\")\n                            );\n                          }}\n                          value={values.mobile}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        {/* <GoogleMaps\n                          error={Boolean(touched.mobile && errors.mobile)}\n                          name={\"location\"}\n                          field={\"location\"}\n                          setFieldValue={setFieldValue}\n                          handleBlur={handleBlur}\n                          values={values}\n                        /> */}\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography variant=\"h5\" color=\"textPrimary\">\n                          Party Type\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Is this party a transporter?\n                        </Typography>\n                        <Switch\n                          checked={values.transporter}\n                          color=\"secondary\"\n                          edge=\"start\"\n                          name=\"transporter\"\n                          onChange={handleChange}\n                          value={values.transporter}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box mt={2}>\n                      <Grid container spacing={3}>\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            type=\"submit\"\n                            disabled={isSubmitting}\n                          >\n                            Create Party\n                          </Button>\n                        </Grid>\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={toggleOpen(false)}\n                          >\n                            Cancel\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </form>\n            )}\n          </Formik>\n        </Dialog>\n      </form>\n    </React.Fragment>\n  );\n};\nexport default AddNewPartyFromAutocomplete;\n"]},"metadata":{},"sourceType":"module"}