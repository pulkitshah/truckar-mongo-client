{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Grid, TextField, Typography } from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport moment from \"moment\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\nexport var OrderCreateForm = function OrderCreateForm(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState(null),\n      selectedVehicle = _useState[0],\n      setSelectedVehicle = _useState[1];\n\n  var _useState2 = useState(),\n      driver = _useState2[0],\n      setDriver = _useState2[1];\n\n  var _React$useState = React.useState(\"quantity\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      saleType = _React$useState2[0],\n      setSaleType = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"quantity\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      purchaseType = _React$useState4[0],\n      setPurchaseType = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"fixed\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      commissionType = _React$useState6[0],\n      setCommissionType = _React$useState6[1];\n\n  var saleTypes = [{\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  var purchaseTypes = [{\n    value: \"commission\",\n    label: \"Commission\"\n  }, {\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }];\n  var commissionTypes = [{\n    value: \"quantity\",\n    label: \"Per Ton\"\n  }, {\n    value: \"fixed\",\n    label: \"Fixed\"\n  }, {\n    value: \"percentage\",\n    label: \"Percentage\"\n  }];\n  var formik = useFormik({\n    initialValues: {\n      saleDate: moment()\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255)\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        var newOrder;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  console.log(values);\n                  newOrder = {\n                    orderNo: parseInt(values.orderNo),\n                    saleDate: values.saleDate.format(),\n                    customer: values.customer,\n                    vehicle: values.vehicle,\n                    user: user.id\n                  };\n                  toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n                } catch (err) {\n                  console.error(err);\n                  toast.error(\"Something went wrong!\");\n                  helpers.setStatus({\n                    success: false\n                  });\n                  helpers.setErrors({\n                    submit: err.message\n                  });\n                  helpers.setSubmitting(false);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Basic details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.orderNo && formik.errors.orderNo),\n                  fullWidth: true,\n                  helperText: formik.touched.orderNo && formik.errors.orderNo,\n                  label: \"Order No\",\n                  name: \"orderNo\",\n                  onBlur: formik.handleBlur,\n                  onChange: formik.handleChange,\n                  value: formik.values.orderNo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  id: \"saleDate\",\n                  name: \"saleDate\",\n                  label: \"Sale date\",\n                  showTodayButton: true,\n                  inputFormat: \"DD/MM/YYYY\",\n                  value: formik.values.saleDate,\n                  onClick: function onClick() {\n                    return setFieldTouched(\"end\");\n                  },\n                  onChange: function onChange(date) {\n                    return formik.setFieldValue(\"saleDate\", moment(date));\n                  },\n                  renderInput: function renderInput(params) {\n                    return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({\n                      fullWidth: true\n                    }, params), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, _this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"customer\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Vehicle details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(VehicleAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: typeof selectedVehicle === \"object\" && selectedVehicle !== null ? /*#__PURE__*/_jsxDEV(DriverAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  setSelectedVehicle: setSelectedVehicle,\n                  setDriver: setDriver,\n                  user: user,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, _this) : selectedVehicle !== null && /*#__PURE__*/_jsxDEV(PartyAutocomplete, {\n                  errors: formik.errors,\n                  touched: formik.touched,\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  type: \"transporter\",\n                  user: user,\n                  formik: formik\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Sale details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleType && formik.errors.saleType),\n                  onBlur: formik.handleBlur,\n                  name: \"saleType\",\n                  label: \"Sale Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"saleType\",\n                  select: true,\n                  value: saleType,\n                  onChange: function onChange(event) {\n                    setSaleType(event.target.value);\n                    formik.setFieldValue(\"saleType\", event.target.value);\n                  },\n                  SelectProps: {\n                    \"native\": true\n                  },\n                  helperText: \"Please select sale type\",\n                  variant: \"outlined\",\n                  children: saleTypes.map(function (option) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 23\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleRate && formik.errors.saleRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.saleRate && formik.errors.saleRate,\n                  id: \"saleRate\",\n                  name: \"saleRate\",\n                  label: \"Sale Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, _this), saleType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.saleMinimumGuarantee && formik.errors.saleMinimumGuarantee),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.saleMinimumGuarantee && formik.errors.saleMinimumGuarantee,\n                  id: \"saleMinimumGuarantee\",\n                  name: \"saleMinimumGuarantee\",\n                  label: \"Min. Load Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, _this), !(typeof selectedVehicle === \"object\" && selectedVehicle !== null) && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Purchase details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseType && formik.errors.purchaseType),\n                  onBlur: formik.handleBlur,\n                  name: \"purchaseType\",\n                  label: \"Purchase Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"purchaseType\",\n                  select: true,\n                  value: purchaseType,\n                  onChange: function onChange(event) {\n                    setPurchaseType(event.target.value);\n                    event.target.value;\n                    formik.setFieldValue(\"purchaseType\", event.target.value);\n                  },\n                  SelectProps: {\n                    \"native\": true\n                  },\n                  helperText: \"Please select purchase type\",\n                  variant: \"outlined\",\n                  children: purchaseTypes.map(function (option) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 25\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 4,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseRate && formik.errors.purchaseRate),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.purchaseRate && formik.errors.purchaseRate,\n                  id: \"purchaseRate\",\n                  name: \"purchaseRate\",\n                  label: \"Purchase Rate\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, _this), purchaseType === \"commission\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.commissionType && formik.errors.commissionType),\n                  onBlur: formik.handleBlur,\n                  name: \"commissionType\",\n                  label: \"Commission Type\",\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  fullWidth: true,\n                  id: \"commissionType\",\n                  select: true,\n                  value: commissionType,\n                  onChange: function onChange(event) {\n                    setCommissionType(event.target.value);\n                    formik.setFieldValue(\"commissionType\", event.target.value);\n                  },\n                  SelectProps: {\n                    \"native\": true\n                  },\n                  helperText: \"Please select Commission type\",\n                  variant: \"outlined\",\n                  children: commissionTypes.map(function (option) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: option.value,\n                      children: option.label\n                    }, option.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 27\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, _this), purchaseType === \"quantity\" && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.purchaseMinimumQuantity && formik.errors.purchaseMinimumQuantity),\n                  variant: \"outlined\",\n                  onChange: formik.handleChange,\n                  onBlur: formik.handleBlur,\n                  helperText: formik.touched.purchaseMinimumQuantity && formik.errors.purchaseMinimumQuantity,\n                  id: \"purchaseMinimumGuarantee\",\n                  name: \"purchaseMinimumGuarantee\",\n                  label: \"Purchase Minimum Guarantee\",\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrderCreateForm, \"EN7B7fJ5Tx6DYsomm/eD1rkPIpU=\", false, function () {\n  return [useRouter, useAuth, useFormik];\n});\n\n_c = OrderCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-create-form.js"],"names":["React","useState","useRouter","toast","Yup","useFormik","Box","Button","Card","CardContent","Grid","TextField","Typography","DatePicker","useAuth","PartyAutocomplete","VehicleAutocomplete","moment","DriverAutocomplete","OrderCreateForm","props","router","user","selectedVehicle","setSelectedVehicle","driver","setDriver","saleType","setSaleType","purchaseType","setPurchaseType","commissionType","setCommissionType","saleTypes","value","label","purchaseTypes","commissionTypes","formik","initialValues","saleDate","validationSchema","object","barcode","string","max","onSubmit","values","helpers","console","log","newOrder","orderNo","parseInt","format","customer","vehicle","id","success","err","error","setStatus","setErrors","submit","message","setSubmitting","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","setFieldTouched","date","setFieldValue","params","mt","shrink","event","target","map","option","saleRate","saleMinimumGuarantee","purchaseRate","purchaseMinimumQuantity","display","flexWrap","justifyContent","mx","mb","m","mr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport PartyAutocomplete from \"../autocompletes/party-autocomplete/party-autocomplete\";\nimport VehicleAutocomplete from \"../autocompletes/vehicle-autocomplete/vehicle-autocomplete\";\nimport moment from \"moment\";\nimport DriverAutocomplete from \"../autocompletes/driver-autocomplete/driver-autocomplete\";\n\nexport const OrderCreateForm = (props) => {\n  const router = useRouter();\n  const { user } = useAuth();\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\n  const [driver, setDriver] = useState();\n  const [saleType, setSaleType] = React.useState(\"quantity\");\n  const [purchaseType, setPurchaseType] = React.useState(\"quantity\");\n  const [commissionType, setCommissionType] = React.useState(\"fixed\");\n\n  const saleTypes = [\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  const purchaseTypes = [\n    {\n      value: \"commission\",\n      label: \"Commission\",\n    },\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n  ];\n\n  const commissionTypes = [\n    {\n      value: \"quantity\",\n      label: \"Per Ton\",\n    },\n    {\n      value: \"fixed\",\n      label: \"Fixed\",\n    },\n    {\n      value: \"percentage\",\n      label: \"Percentage\",\n    },\n  ];\n\n  const formik = useFormik({\n    initialValues: {\n      saleDate: moment(),\n    },\n    validationSchema: Yup.object({\n      barcode: Yup.string().max(255),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        console.log(values);\n\n        const newOrder = {\n          orderNo: parseInt(values.orderNo),\n          saleDate: values.saleDate.format(),\n          customer: values.customer,\n          vehicle: values.vehicle,\n          user: user.id,\n        };\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Basic details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.orderNo && formik.errors.orderNo\n                    )}\n                    fullWidth\n                    helperText={formik.touched.orderNo && formik.errors.orderNo}\n                    label=\"Order No\"\n                    name=\"orderNo\"\n                    onBlur={formik.handleBlur}\n                    onChange={formik.handleChange}\n                    value={formik.values.orderNo}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <DatePicker\n                    id=\"saleDate\"\n                    name=\"saleDate\"\n                    label=\"Sale date\"\n                    showTodayButton={true}\n                    inputFormat=\"DD/MM/YYYY\"\n                    value={formik.values.saleDate}\n                    onClick={() => setFieldTouched(\"end\")}\n                    onChange={(date) =>\n                      formik.setFieldValue(\"saleDate\", moment(date))\n                    }\n                    renderInput={(params) => (\n                      <TextField fullWidth {...params} />\n                    )}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <PartyAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    type=\"customer\"\n                    user={user}\n                    formik={formik}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Vehicle details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <VehicleAutocomplete\n                    errors={formik.errors}\n                    touched={formik.touched}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    setSelectedVehicle={setSelectedVehicle}\n                    setDriver={setDriver}\n                    user={user}\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  {typeof selectedVehicle === \"object\" &&\n                  selectedVehicle !== null ? (\n                    <DriverAutocomplete\n                      errors={formik.errors}\n                      touched={formik.touched}\n                      setFieldValue={formik.setFieldValue}\n                      handleBlur={formik.handleBlur}\n                      setSelectedVehicle={setSelectedVehicle}\n                      setDriver={setDriver}\n                      user={user}\n                      values={formik.values}\n                    />\n                  ) : (\n                    selectedVehicle !== null && (\n                      <PartyAutocomplete\n                        errors={formik.errors}\n                        touched={formik.touched}\n                        setFieldValue={formik.setFieldValue}\n                        handleBlur={formik.handleBlur}\n                        type=\"transporter\"\n                        user={user}\n                        formik={formik}\n                      />\n                    )\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Sale details</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <Grid container spacing={3}>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleType && formik.errors.saleType\n                    )}\n                    onBlur={formik.handleBlur}\n                    name=\"saleType\"\n                    label=\"Sale Type\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    id=\"saleType\"\n                    select\n                    value={saleType}\n                    onChange={(event) => {\n                      setSaleType(event.target.value);\n                      formik.setFieldValue(\"saleType\", event.target.value);\n                    }}\n                    SelectProps={{\n                      native: true,\n                    }}\n                    helperText=\"Please select sale type\"\n                    variant=\"outlined\"\n                  >\n                    {saleTypes.map((option) => (\n                      <option key={option.value} value={option.value}>\n                        {option.label}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.saleRate && formik.errors.saleRate\n                    )}\n                    variant=\"outlined\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    helperText={\n                      formik.touched.saleRate && formik.errors.saleRate\n                    }\n                    id=\"saleRate\"\n                    name=\"saleRate\"\n                    label=\"Sale Rate\"\n                    fullWidth\n                  />\n                </Grid>\n                {saleType === \"quantity\" && (\n                  <Grid item md={4} xs={6}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.saleMinimumGuarantee &&\n                          formik.errors.saleMinimumGuarantee\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.saleMinimumGuarantee &&\n                        formik.errors.saleMinimumGuarantee\n                      }\n                      id=\"saleMinimumGuarantee\"\n                      name=\"saleMinimumGuarantee\"\n                      label=\"Min. Load Guarantee\"\n                      fullWidth\n                    />\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      {!(typeof selectedVehicle === \"object\" && selectedVehicle !== null) && (\n        <Card sx={{ mt: 3 }}>\n          <CardContent>\n            <Grid container spacing={3}>\n              <Grid item md={4} xs={12}>\n                <Typography variant=\"h6\">Purchase details</Typography>\n              </Grid>\n              <Grid item md={8} xs={12}>\n                <Grid container spacing={3}>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseType &&\n                          formik.errors.purchaseType\n                      )}\n                      onBlur={formik.handleBlur}\n                      name=\"purchaseType\"\n                      label=\"Purchase Type\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      fullWidth\n                      id=\"purchaseType\"\n                      select\n                      value={purchaseType}\n                      onChange={(event) => {\n                        setPurchaseType(event.target.value);\n                        event.target.value;\n                        formik.setFieldValue(\n                          \"purchaseType\",\n                          event.target.value\n                        );\n                      }}\n                      SelectProps={{\n                        native: true,\n                      }}\n                      helperText=\"Please select purchase type\"\n                      variant=\"outlined\"\n                    >\n                      {purchaseTypes.map((option) => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item md={4} xs={12}>\n                    <TextField\n                      error={Boolean(\n                        formik.touched.purchaseRate &&\n                          formik.errors.purchaseRate\n                      )}\n                      variant=\"outlined\"\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                      helperText={\n                        formik.touched.purchaseRate &&\n                        formik.errors.purchaseRate\n                      }\n                      id=\"purchaseRate\"\n                      name=\"purchaseRate\"\n                      label=\"Purchase Rate\"\n                      fullWidth\n                    />\n                  </Grid>\n                  {purchaseType === \"commission\" && (\n                    <Grid item md={3} xs={6}>\n                      <TextField\n                        error={Boolean(\n                          formik.touched.commissionType &&\n                            formik.errors.commissionType\n                        )}\n                        onBlur={formik.handleBlur}\n                        name=\"commissionType\"\n                        label=\"Commission Type\"\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                        fullWidth\n                        id=\"commissionType\"\n                        select\n                        value={commissionType}\n                        onChange={(event) => {\n                          setCommissionType(event.target.value);\n                          formik.setFieldValue(\n                            \"commissionType\",\n                            event.target.value\n                          );\n                        }}\n                        SelectProps={{\n                          native: true,\n                        }}\n                        helperText=\"Please select Commission type\"\n                        variant=\"outlined\"\n                      >\n                        {commissionTypes.map((option) => (\n                          <option key={option.value} value={option.value}>\n                            {option.label}\n                          </option>\n                        ))}\n                      </TextField>\n                    </Grid>\n                  )}\n                  {purchaseType === \"quantity\" && (\n                    <Grid item md={3} xs={6}>\n                      <TextField\n                        error={Boolean(\n                          formik.touched.purchaseMinimumQuantity &&\n                            formik.errors.purchaseMinimumQuantity\n                        )}\n                        variant=\"outlined\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        helperText={\n                          formik.touched.purchaseMinimumQuantity &&\n                          formik.errors.purchaseMinimumQuantity\n                        }\n                        id=\"purchaseMinimumGuarantee\"\n                        name=\"purchaseMinimumGuarantee\"\n                        label=\"Purchase Minimum Guarantee\"\n                        fullWidth\n                      />\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}