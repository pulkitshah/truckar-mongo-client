{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-grid.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport moment from \"moment\";\nimport { debounce } from \"lodash\";\nimport { calculateAmount, checkTripStatus, formatNumber } from \"../../../utils/AmountCalculation\";\n\nvar Table = function Table(_ref) {\n  var orders = _ref.orders;\n  var visibleRowNodes;\n  var headerElement = document.querySelectorAll(\".ag-header\");\n  var agGrid = document.querySelectorAll(\".ag-body-viewport\");\n  var gridBodyHeight = (agGrid.length > 0 && agGrid[0].offsetHeight) - (headerElement.length > 0 && headerElement[0].offsetHeight);\n  var visibleRowsChange = debounce(function (v) {\n    var rowHeight = v.api.getDisplayedRowAtIndex(0) ? v.api.getDisplayedRowAtIndex(0).rowHeight : 48;\n    var topIndex = v.top / rowHeight;\n    var bottomIndex = (v.top + gridBodyHeight) / rowHeight - 1;\n    visibleRowNodes = v.api.getRenderedNodes();\n    var filteredVisibleRowNodes = visibleRowNodes ? visibleRowNodes.filter(function (node) {\n      return node.rowIndex >= topIndex && node.rowIndex <= bottomIndex;\n    }) : [];\n\n    if (filteredVisibleRowNodes.length > 0) {\n      var o = {};\n      o[\"ordersAll\"] = filteredVisibleRowNodes[0].rowIndex; // dispatch(updateLastSelectedRow(o));\n    }\n  }, 2000);\n\n  var onGridReady = function onGridReady(params) {// params.api.ensureIndexVisible(lastSelectedRow.ordersAll, 'top');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ag-theme-alpine-dark\",\n    style: {\n      height: \"70vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n      onGridReady: onGridReady,\n      rowSelection: \"multiple\",\n      suppressRowClickSelection: true,\n      statusBar: {\n        statusPanels: [{\n          statusPanel: \"agTotalAndFilteredRowCountComponent\",\n          align: \"left\"\n        }, {\n          statusPanel: \"agFilteredRowCountComponent\"\n        }, {\n          statusPanel: \"agSelectedRowCountComponent\"\n        }, {\n          statusPanel: \"agAggregationComponent\"\n        }]\n      },\n      enableRangeSelection: true,\n      masterDetail: true,\n      immutableData: true,\n      detailRowAutoHeight: true,\n      onBodyScroll: function onBodyScroll(event) {\n        if (event.direction === \"vertical\") {\n          visibleRowsChange(event);\n        }\n      },\n      getRowNodeId: function getRowNodeId(data) {\n        return data._id;\n      },\n      rowData: orders,\n      detailCellRenderer: \"detailRenderer\",\n      onFirstDataRendered: function onFirstDataRendered(params) {\n        var autoSizeAll = function autoSizeAll(skipHeader) {\n          var allColumnIds = [];\n          params.columnApi.getAllColumns().forEach(function (column) {\n            allColumnIds.push(column.colId);\n          });\n          params.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n        };\n\n        params.api.sizeColumnsToFit();\n        autoSizeAll(); // params.api.ensureIndexVisible(lastSelectedRow.ordersAll, 'top');\n      },\n      children: [/*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"orderNo\",\n        cellRenderer: \"agGroupCellRenderer\",\n        menuTabs: [\"filterMenuTab\", \"generalMenuTab\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(AgGridColumn, {\n        field: \"saleDate\",\n        valueFormatter: function valueFormatter(params) {\n          return moment(params.value).format(\"DD-MM-YY\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/order-grid.js"],"names":["React","AgGridColumn","AgGridReact","moment","debounce","calculateAmount","checkTripStatus","formatNumber","Table","orders","visibleRowNodes","headerElement","document","querySelectorAll","agGrid","gridBodyHeight","length","offsetHeight","visibleRowsChange","v","rowHeight","api","getDisplayedRowAtIndex","topIndex","top","bottomIndex","getRenderedNodes","filteredVisibleRowNodes","filter","node","rowIndex","o","onGridReady","params","height","width","statusPanels","statusPanel","align","event","direction","data","_id","autoSizeAll","skipHeader","allColumnIds","columnApi","getAllColumns","forEach","column","push","colId","autoSizeColumns","sizeColumnsToFit","value","format"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine-dark.css\";\nimport moment from \"moment\";\nimport { debounce } from \"lodash\";\n\nimport {\n  calculateAmount,\n  checkTripStatus,\n  formatNumber,\n} from \"../../../utils/AmountCalculation\";\n\nconst Table = ({ orders }) => {\n  let visibleRowNodes;\n  let headerElement = document.querySelectorAll(\".ag-header\");\n  let agGrid = document.querySelectorAll(\".ag-body-viewport\");\n  let gridBodyHeight =\n    (agGrid.length > 0 && agGrid[0].offsetHeight) -\n    (headerElement.length > 0 && headerElement[0].offsetHeight);\n\n  const visibleRowsChange = debounce((v) => {\n    const rowHeight = v.api.getDisplayedRowAtIndex(0)\n      ? v.api.getDisplayedRowAtIndex(0).rowHeight\n      : 48;\n    const topIndex = v.top / rowHeight;\n    const bottomIndex = (v.top + gridBodyHeight) / rowHeight - 1;\n\n    visibleRowNodes = v.api.getRenderedNodes();\n    let filteredVisibleRowNodes = visibleRowNodes\n      ? visibleRowNodes.filter(\n          (node) => node.rowIndex >= topIndex && node.rowIndex <= bottomIndex\n        )\n      : [];\n    if (filteredVisibleRowNodes.length > 0) {\n      let o = {};\n      o[\"ordersAll\"] = filteredVisibleRowNodes[0].rowIndex;\n      // dispatch(updateLastSelectedRow(o));\n    }\n  }, 2000);\n\n  const onGridReady = (params) => {\n    // params.api.ensureIndexVisible(lastSelectedRow.ordersAll, 'top');\n  };\n\n  return (\n    <div\n      className={\"ag-theme-alpine-dark\"}\n      style={{ height: \"70vh\", width: \"100%\" }}\n    >\n      <AgGridReact\n        onGridReady={onGridReady}\n        rowSelection={\"multiple\"}\n        suppressRowClickSelection={true}\n        statusBar={{\n          statusPanels: [\n            {\n              statusPanel: \"agTotalAndFilteredRowCountComponent\",\n              align: \"left\",\n            },\n            { statusPanel: \"agFilteredRowCountComponent\" },\n            { statusPanel: \"agSelectedRowCountComponent\" },\n            { statusPanel: \"agAggregationComponent\" },\n          ],\n        }}\n        enableRangeSelection={true}\n        masterDetail={true}\n        immutableData={true}\n        detailRowAutoHeight={true}\n        onBodyScroll={(event) => {\n          if (event.direction === \"vertical\") {\n            visibleRowsChange(event);\n          }\n        }}\n        getRowNodeId={(data) => {\n          return data._id;\n        }}\n        rowData={orders}\n        detailCellRenderer={\"detailRenderer\"}\n        onFirstDataRendered={(params) => {\n          const autoSizeAll = (skipHeader) => {\n            var allColumnIds = [];\n            params.columnApi.getAllColumns().forEach(function (column) {\n              allColumnIds.push(column.colId);\n            });\n            params.columnApi.autoSizeColumns(allColumnIds, skipHeader);\n          };\n          params.api.sizeColumnsToFit();\n          autoSizeAll();\n          // params.api.ensureIndexVisible(lastSelectedRow.ordersAll, 'top');\n        }}\n      >\n        <AgGridColumn\n          field=\"orderNo\"\n          cellRenderer={\"agGroupCellRenderer\"}\n          menuTabs={[\"filterMenuTab\", \"generalMenuTab\"]}\n        />\n        <AgGridColumn\n          field=\"saleDate\"\n          valueFormatter={(params) => {\n            return moment(params.value).format(\"DD-MM-YY\");\n          }}\n        />\n      </AgGridReact>\n    </div>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}