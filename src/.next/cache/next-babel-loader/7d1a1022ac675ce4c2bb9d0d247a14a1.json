{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/branch-create-form.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Divider, FormControlLabel, FormHelperText, Grid, MenuItem, Switch, TextField, Typography } from \"@mui/material\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nvar categoryOptions = [{\n  label: \"Healthcare\",\n  value: \"healthcare\"\n}, {\n  label: \"Makeup\",\n  value: \"makeup\"\n}, {\n  label: \"Dress\",\n  value: \"dress\"\n}, {\n  label: \"Skincare\",\n  value: \"skincare\"\n}, {\n  label: \"Jewelry\",\n  value: \"jewelry\"\n}, {\n  label: \"Blouse\",\n  value: \"blouse\"\n}];\nexport var BranchCreateForm = function BranchCreateForm(props) {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState([]),\n      files = _useState[0],\n      setFiles = _useState[1];\n\n  var formik = useFormik({\n    initialValues: {\n      name: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      submit: null\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      addressLine1: Yup.string().max(255).required(\"Address Line 1 is required\"),\n      city: Yup.object().required(\"City is required\")\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  // NOTE: Make API request\n                  toast.success(\"Branch created!\"); // router.push(\"/dashboard/branches\");\n                } catch (err) {\n                  console.error(err);\n                  toast.error(\"Something went wrong!\");\n                  helpers.setStatus({\n                    success: false\n                  });\n                  helpers.setErrors({\n                    submit: err.message\n                  });\n                  helpers.setSubmitting(false);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n\n  var handleDrop = function handleDrop(newFiles) {\n    setFiles(function (prevFiles) {\n      return [].concat(_toConsumableArray(prevFiles), _toConsumableArray(newFiles));\n    });\n  };\n\n  var handleRemove = function handleRemove(file) {\n    setFiles(function (prevFiles) {\n      return prevFiles.filter(function (_file) {\n        return _file.path !== file.path;\n      });\n    });\n  };\n\n  var handleRemoveAll = function handleRemoveAll() {\n    setFiles([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          alignItems: \"center\",\n          sx: {\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Tell us your city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n              formik: formik,\n              error: Boolean(formik.touched.city && formik.errors.city),\n              label: \"Your city in India\",\n              field: \"city\",\n              setFieldValue: formik.setFieldValue,\n              handleBlur: formik.handleBlur,\n              values: formik.values\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          alignItems: \"center\",\n          sx: {\n            mb: 4,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 4,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Please pick a name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            md: 8,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(formik.touched.branchname && formik.errors.branchname),\n              fullWidth: true,\n              helperText: formik.touched.branchname && formik.errors.branchname,\n              label: \"Your branch name\",\n              name: \"branchname\",\n              onBlur: formik.handleBlur,\n              onChange: formik.handleChange,\n              value: formik.values.branchname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n        mx: -1,\n        mb: -1,\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          m: 1,\n          mr: \"auto\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        variant: \"outlined\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          m: 1\n        },\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BranchCreateForm, \"GNu3yrEtc6xue3/XcNWye6ldsy0=\", false, function () {\n  return [useRouter, useFormik];\n});\n\n_c = BranchCreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchCreateForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/welcome/branch-create-form.js"],"names":["useState","useRouter","toast","Yup","useFormik","Box","Button","Card","CardContent","Divider","FormControlLabel","FormHelperText","Grid","MenuItem","Switch","TextField","Typography","FileDropzone","QuillEditor","GoogleMaps","categoryOptions","label","value","BranchCreateForm","props","router","files","setFiles","formik","initialValues","name","addressLine1","addressLine2","city","submit","validationSchema","object","string","max","required","onSubmit","values","helpers","success","err","console","error","setStatus","setErrors","message","setSubmitting","handleDrop","newFiles","prevFiles","handleRemove","file","filter","_file","path","handleRemoveAll","handleSubmit","mb","Boolean","touched","errors","setFieldValue","handleBlur","mt","branchname","handleChange","display","flexWrap","justifyContent","mx","m","mr"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport toast from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { FileDropzone } from \"../../file-dropzone\";\nimport { QuillEditor } from \"../../quill-editor\";\nimport GoogleMaps from \"./google-places-autocomplete\";\nconst categoryOptions = [\n  {\n    label: \"Healthcare\",\n    value: \"healthcare\",\n  },\n  {\n    label: \"Makeup\",\n    value: \"makeup\",\n  },\n  {\n    label: \"Dress\",\n    value: \"dress\",\n  },\n  {\n    label: \"Skincare\",\n    value: \"skincare\",\n  },\n  {\n    label: \"Jewelry\",\n    value: \"jewelry\",\n  },\n  {\n    label: \"Blouse\",\n    value: \"blouse\",\n  },\n];\n\nexport const BranchCreateForm = (props) => {\n  const router = useRouter();\n  const [files, setFiles] = useState([]);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      addressLine1: \"\",\n      addressLine2: \"\",\n      city: \"\",\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      addressLine1: Yup.string()\n        .max(255)\n        .required(\"Address Line 1 is required\"),\n      city: Yup.object().required(\"City is required\"),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        toast.success(\"Branch created!\");\n        // router.push(\"/dashboard/branches\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  const handleDrop = (newFiles) => {\n    setFiles((prevFiles) => [...prevFiles, ...newFiles]);\n  };\n\n  const handleRemove = (file) => {\n    setFiles((prevFiles) =>\n      prevFiles.filter((_file) => _file.path !== file.path)\n    );\n  };\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <Card>\n        <CardContent>\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 4 }}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Tell us your city</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              {/* <TextField\n                error={Boolean(formik.touched.name && formik.errors.name)}\n                fullWidth\n                helperText={formik.touched.name && formik.errors.name}\n                label=\"Branch Name\"\n                name=\"name\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                value={formik.values.name}\n              /> */}\n              <GoogleMaps\n                formik={formik}\n                error={Boolean(formik.touched.city && formik.errors.city)}\n                label={\"Your city in India\"}\n                field={\"city\"}\n                setFieldValue={formik.setFieldValue}\n                handleBlur={formik.handleBlur}\n                values={formik.values}\n              />\n            </Grid>\n          </Grid>\n          <Divider />\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 4, mt: 2 }}>\n            <Grid item md={4} xs={12}>\n              <Typography variant=\"h6\">Please pick a name</Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n              <TextField\n                error={Boolean(\n                  formik.touched.branchname && formik.errors.branchname\n                )}\n                fullWidth\n                helperText={\n                  formik.touched.branchname && formik.errors.branchname\n                }\n                label=\"Your branch name\"\n                name=\"branchname\"\n                onBlur={formik.handleBlur}\n                onChange={formik.handleChange}\n                value={formik.values.branchname}\n              />\n            </Grid>\n          </Grid>\n          <Divider />\n        </CardContent>\n      </Card>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          mx: -1,\n          mb: -1,\n          mt: 3,\n        }}\n      >\n        <Button\n          color=\"error\"\n          sx={{\n            m: 1,\n            mr: \"auto\",\n          }}\n        >\n          Delete\n        </Button>\n        <Button sx={{ m: 1 }} variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button sx={{ m: 1 }} type=\"submit\" variant=\"contained\">\n          Create\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}