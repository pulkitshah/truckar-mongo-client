{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-logo-dropzone.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\nimport { Box, Button, Link, Typography } from \"@mui/material\";\nexport var OrganisationLogoDropzone = function OrganisationLogoDropzone(props) {\n  _s();\n\n  var accept = props.accept,\n      croppedImage = props.croppedImage,\n      disabled = props.disabled,\n      file = props.file,\n      getFilesFromEvent = props.getFilesFromEvent,\n      maxFiles = props.maxFiles,\n      maxSize = props.maxSize,\n      minSize = props.minSize,\n      noClick = props.noClick,\n      noDrag = props.noDrag,\n      noDragEventsBubbling = props.noDragEventsBubbling,\n      noKeyboard = props.noKeyboard,\n      onDrop = props.onDrop,\n      onDropAccepted = props.onDropAccepted,\n      onDropRejected = props.onDropRejected,\n      onFileDialogCancel = props.onFileDialogCancel,\n      onRemove = props.onRemove,\n      onRemoveAll = props.onRemoveAll,\n      onUpload = props.onUpload,\n      preventDropOnDocument = props.preventDropOnDocument,\n      setCroppedImage = props.setCroppedImage,\n      showModal = props.showModal,\n      onModalClose = props.onModalClose,\n      imgURL = props.imgURL,\n      onSaveHandler = props.onSaveHandler,\n      other = _objectWithoutProperties(props, [\"accept\", \"croppedImage\", \"disabled\", \"file\", \"getFilesFromEvent\", \"maxFiles\", \"maxSize\", \"minSize\", \"noClick\", \"noDrag\", \"noDragEventsBubbling\", \"noKeyboard\", \"onDrop\", \"onDropAccepted\", \"onDropRejected\", \"onFileDialogCancel\", \"onRemove\", \"onRemoveAll\", \"onUpload\", \"preventDropOnDocument\", \"setCroppedImage\", \"showModal\", \"onModalClose\", \"imgURL\", \"onSaveHandler\"]); // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n\n\n  var _useDropzone = useDropzone({\n    accept: accept,\n    maxFiles: maxFiles,\n    maxSize: maxSize,\n    minSize: minSize,\n    onDrop: onDrop,\n    onDropAccepted: onDropAccepted\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive;\n\n  var cropperRef = useRef(null);\n\n  var _useState = useState(),\n      cropper = _useState[0],\n      setCropper = _useState[1];\n\n  var getCroppedImage = function getCroppedImage() {\n    if (typeof cropper !== \"undefined\") {\n      setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, other), {}, {\n    children: [!file && /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n      sx: _objectSpread(_objectSpread({\n        alignItems: \"center\",\n        border: 1,\n        borderRadius: 1,\n        borderStyle: \"dashed\",\n        borderColor: \"divider\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        outline: \"none\",\n        p: 6\n      }, isDragActive && {\n        backgroundColor: \"action.active\",\n        opacity: 0.5\n      }), {}, {\n        \"&:hover\": {\n          backgroundColor: \"action.hover\",\n          cursor: \"pointer\",\n          opacity: 0.5\n        }\n      })\n    }, getRootProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          \"& img\": {\n            width: 100\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Select file\",\n          src: \"/static/undraw_add_file2_gvbb.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select file\".concat(maxFiles && maxFiles === 1 ? \"\" : \"s\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Drop file\".concat(maxFiles && maxFiles === 1 ? \"\" : \"s\"), \" \", /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"always\",\n              children: \"browse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, _this), \" thorough your machine\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, _this), file && !croppedImage && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Cropper, {\n        src: file.preview,\n        style: {\n          height: 500,\n          width: \"732px\"\n        },\n        viewMode: 0 // dragMode=\"move\"\n        ,\n        guides: true,\n        initialAspectRatio: 4.5,\n        background: true,\n        ref: cropperRef,\n        minCropBoxHeight: 10,\n        minCropBoxWidth: 10,\n        responsive: true,\n        autoCropArea: 1,\n        onInitialized: function onInitialized(instance) {\n          setCropper(instance);\n        },\n        checkOrientation: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onRemove,\n          size: \"small\",\n          type: \"button\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: getCroppedImage,\n          size: \"small\",\n          sx: {\n            ml: 2\n          },\n          type: \"button\",\n          variant: \"contained\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, _this), croppedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\"\n          },\n          src: croppedImage,\n          alt: \"cropped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(OrganisationLogoDropzone, \"PiZ6t6GFIgVHBRCeT8bUMBVh/Wg=\", false, function () {\n  return [useDropzone];\n});\n\n_c = OrganisationLogoDropzone;\nOrganisationLogoDropzone.propTypes = {\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  disabled: PropTypes.bool,\n  file: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool\n};\nOrganisationLogoDropzone.defaultProps = {\n  files: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"OrganisationLogoDropzone\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/organisation/organisation-logo-dropzone.js"],"names":["React","useRef","useState","PropTypes","useDropzone","Cropper","Box","Button","Link","Typography","OrganisationLogoDropzone","props","accept","croppedImage","disabled","file","getFilesFromEvent","maxFiles","maxSize","minSize","noClick","noDrag","noDragEventsBubbling","noKeyboard","onDrop","onDropAccepted","onDropRejected","onFileDialogCancel","onRemove","onRemoveAll","onUpload","preventDropOnDocument","setCroppedImage","showModal","onModalClose","imgURL","onSaveHandler","other","getRootProps","getInputProps","isDragActive","cropperRef","cropper","setCropper","getCroppedImage","getCroppedCanvas","toDataURL","alignItems","border","borderRadius","borderStyle","borderColor","display","flexWrap","justifyContent","outline","p","backgroundColor","opacity","cursor","width","mt","preview","height","instance","ml","propTypes","oneOfType","string","arrayOf","bool","array","func","number","defaultProps","files"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport { Box, Button, Link, Typography } from \"@mui/material\";\n\nexport const OrganisationLogoDropzone = (props) => {\n  const {\n    accept,\n    croppedImage,\n    disabled,\n    file,\n    getFilesFromEvent,\n    maxFiles,\n    maxSize,\n    minSize,\n    noClick,\n    noDrag,\n    noDragEventsBubbling,\n    noKeyboard,\n    onDrop,\n    onDropAccepted,\n    onDropRejected,\n    onFileDialogCancel,\n    onRemove,\n    onRemoveAll,\n    onUpload,\n    preventDropOnDocument,\n    setCroppedImage,\n    showModal,\n    onModalClose,\n    imgURL,\n    onSaveHandler,\n    ...other\n  } = props;\n\n  // We did not add the remaining props to avoid component complexity\n  // but you can simply add it if you need to.\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept,\n    maxFiles,\n    maxSize,\n    minSize,\n    onDrop,\n    onDropAccepted,\n  });\n\n  const cropperRef = useRef(null);\n  const [cropper, setCropper] = useState();\n\n  const getCroppedImage = () => {\n    if (typeof cropper !== \"undefined\") {\n      setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n    }\n  };\n\n  return (\n    <div {...other}>\n      {!file && (\n        <Box\n          sx={{\n            alignItems: \"center\",\n            border: 1,\n            borderRadius: 1,\n            borderStyle: \"dashed\",\n            borderColor: \"divider\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\",\n            outline: \"none\",\n            p: 6,\n            ...(isDragActive && {\n              backgroundColor: \"action.active\",\n              opacity: 0.5,\n            }),\n            \"&:hover\": {\n              backgroundColor: \"action.hover\",\n              cursor: \"pointer\",\n              opacity: 0.5,\n            },\n          }}\n          {...getRootProps()}\n        >\n          <input {...getInputProps()} />\n          <Box\n            sx={{\n              \"& img\": {\n                width: 100,\n              },\n            }}\n          >\n            <img alt=\"Select file\" src=\"/static/undraw_add_file2_gvbb.svg\" />\n          </Box>\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\">\n              {`Select file${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`}\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"body1\">\n                {`Drop file${maxFiles && maxFiles === 1 ? \"\" : \"s\"}`}{\" \"}\n                <Link underline=\"always\">browse</Link> thorough your machine\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n      )}\n      {file && !croppedImage && (\n        <Box sx={{ mt: 2 }}>\n          <Cropper\n            src={file.preview}\n            style={{ height: 500, width: \"732px\" }}\n            viewMode={0}\n            // dragMode=\"move\"\n            guides={true}\n            initialAspectRatio={4.5}\n            background={true}\n            ref={cropperRef}\n            minCropBoxHeight={10}\n            minCropBoxWidth={10}\n            responsive={true}\n            autoCropArea={1}\n            onInitialized={(instance) => {\n              setCropper(instance);\n            }}\n            checkOrientation={false}\n          />\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              mt: 2,\n            }}\n          >\n            <Button onClick={onRemove} size=\"small\" type=\"button\">\n              Remove\n            </Button>\n            <Button\n              onClick={getCroppedImage}\n              size=\"small\"\n              sx={{ ml: 2 }}\n              type=\"button\"\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n            {croppedImage && (\n              <img style={{ width: \"100%\" }} src={croppedImage} alt=\"cropped\" />\n            )}\n          </Box>\n        </Box>\n      )}\n\n      {}\n    </div>\n  );\n};\n\nOrganisationLogoDropzone.propTypes = {\n  accept: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  disabled: PropTypes.bool,\n  file: PropTypes.array,\n  getFilesFromEvent: PropTypes.func,\n  maxFiles: PropTypes.number,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  noClick: PropTypes.bool,\n  noDrag: PropTypes.bool,\n  noDragEventsBubbling: PropTypes.bool,\n  noKeyboard: PropTypes.bool,\n  onDrop: PropTypes.func,\n  onDropAccepted: PropTypes.func,\n  onDropRejected: PropTypes.func,\n  onFileDialogCancel: PropTypes.func,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  onUpload: PropTypes.func,\n  preventDropOnDocument: PropTypes.bool,\n};\n\nOrganisationLogoDropzone.defaultProps = {\n  files: [],\n};\n"]},"metadata":{},"sourceType":"module"}