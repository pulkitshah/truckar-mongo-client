{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { branchApi } from \"../api/branch-api\";\nimport axios from \"../utils/axios\";\nvar initialState = {\n  branches: [],\n  branchIds: [],\n  isNextPageLoading: true\n};\nexport var slice = createSlice({\n  name: \"branch\",\n  initialState: initialState,\n  reducers: {\n    getBranches: function getBranches(state, action) {\n      var branches = action.payload;\n      state.branches = branches;\n      state.isNextPageLoading = false;\n    },\n    createBranch: function createBranch(state, action) {\n      var branch = action.payload.branch;\n      state.branches = [].concat(_toConsumableArray(state.branches), [branch]);\n    },\n    selectBranch: function selectBranch(state, action) {\n      var _action$payload$branc = action.payload.branchId,\n          branchId = _action$payload$branc === void 0 ? null : _action$payload$branc;\n      state.isModalOpen = true;\n      state.selectedBranchId = branchId;\n    },\n    updateBranch: function updateBranch(state, action) {\n      var branch = action.payload.branch;\n      state.branches = _.map(state.branches, function (_branch) {\n        if (_branch.id === branch.id) {\n          return branch;\n        }\n\n        return _branch;\n      });\n    },\n    deleteBranch: function deleteBranch(state, action) {\n      var branchId = action.payload.branchId;\n      state.branches = _.reject(state.branches, {\n        id: branchId\n      });\n    },\n    selectRange: function selectRange(state, action) {\n      var _action$payload = action.payload,\n          start = _action$payload.start,\n          end = _action$payload.end;\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start: start,\n        end: end\n      };\n    },\n    openModal: function openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal: function closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedBranchId = null;\n      state.selectedRange = null;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getBranches = function getBranches(limit) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return branchApi.getBranchesByUser();\n\n            case 2:\n              response = _context.sent;\n              console.log(\"getBranches = ()\");\n              dispatch(slice.actions.getBranches(response.data));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var createBranch = function createBranch(data) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"/api/calendar/branches/new\", data);\n\n            case 2:\n              response = _context2.sent;\n              dispatch(slice.actions.createBranch(response.data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var selectBranch = function selectBranch(branchId) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch(slice.actions.selectBranch({\n                branchId: branchId\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updateBranch = function updateBranch(branchId, update) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.post(\"/api/calendar/branches/update\", {\n                branchId: branchId,\n                update: update\n              });\n\n            case 2:\n              response = _context4.sent;\n              dispatch(slice.actions.updateBranch(response.data));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteBranch = function deleteBranch(branchId) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return axios.post(\"/api/calendar/branches/remove\", {\n                branchId: branchId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteBranch({\n                branchId: branchId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var selectRange = function selectRange(start, end) {\n  return function (dispatch) {\n    dispatch(slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime()\n    }));\n  };\n};\nexport var openModal = function openModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.openModal());\n  };\n};\nexport var closeModal = function closeModal() {\n  return function (dispatch) {\n    dispatch(slice.actions.closeModal());\n  };\n};\nexport default slice;","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/slices/branches.js"],"names":["createSlice","_","branchApi","axios","initialState","branches","branchIds","isNextPageLoading","slice","name","reducers","getBranches","state","action","payload","createBranch","branch","selectBranch","branchId","isModalOpen","selectedBranchId","updateBranch","map","_branch","id","deleteBranch","reject","selectRange","start","end","selectedRange","openModal","closeModal","reducer","limit","dispatch","getBranchesByUser","response","console","log","actions","data","post","update","getTime"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport _ from \"lodash\";\nimport { branchApi } from \"../api/branch-api\";\nimport axios from \"../utils/axios\";\n\nconst initialState = {\n  branches: [],\n  branchIds: [],\n  isNextPageLoading: true,\n};\n\nexport const slice = createSlice({\n  name: \"branch\",\n  initialState,\n  reducers: {\n    getBranches(state, action) {\n      const branches = action.payload;\n      state.branches = branches;\n      state.isNextPageLoading = false;\n    },\n    createBranch(state, action) {\n      const { branch } = action.payload;\n\n      state.branches = [...state.branches, branch];\n    },\n    selectBranch(state, action) {\n      const { branchId = null } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedBranchId = branchId;\n    },\n    updateBranch(state, action) {\n      const { branch } = action.payload;\n\n      state.branches = _.map(state.branches, (_branch) => {\n        if (_branch.id === branch.id) {\n          return branch;\n        }\n\n        return _branch;\n      });\n    },\n    deleteBranch(state, action) {\n      const { branchId } = action.payload;\n\n      state.branches = _.reject(state.branches, {\n        id: branchId,\n      });\n    },\n    selectRange(state, action) {\n      const { start, end } = action.payload;\n\n      state.isModalOpen = true;\n      state.selectedRange = {\n        start,\n        end,\n      };\n    },\n    openModal(state) {\n      state.isModalOpen = true;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n      state.selectedBranchId = null;\n      state.selectedRange = null;\n    },\n  },\n});\n\nexport const reducer = slice.reducer;\n\nexport const getBranches = (limit) => async (dispatch) => {\n  const response = await branchApi.getBranchesByUser();\n  console.log(\"getBranches = ()\");\n  dispatch(slice.actions.getBranches(response.data));\n};\n\nexport const createBranch = (data) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/branches/new\", data);\n\n  dispatch(slice.actions.createBranch(response.data));\n};\n\nexport const selectBranch = (branchId) => async (dispatch) => {\n  dispatch(slice.actions.selectBranch({ branchId }));\n};\n\nexport const updateBranch = (branchId, update) => async (dispatch) => {\n  const response = await axios.post(\"/api/calendar/branches/update\", {\n    branchId,\n    update,\n  });\n\n  dispatch(slice.actions.updateBranch(response.data));\n};\n\nexport const deleteBranch = (branchId) => async (dispatch) => {\n  await axios.post(\"/api/calendar/branches/remove\", {\n    branchId,\n  });\n\n  dispatch(slice.actions.deleteBranch({ branchId }));\n};\n\nexport const selectRange = (start, end) => (dispatch) => {\n  dispatch(\n    slice.actions.selectRange({\n      start: start.getTime(),\n      end: end.getTime(),\n    })\n  );\n};\n\nexport const openModal = () => (dispatch) => {\n  dispatch(slice.actions.openModal());\n};\n\nexport const closeModal = () => (dispatch) => {\n  dispatch(slice.actions.closeModal());\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}