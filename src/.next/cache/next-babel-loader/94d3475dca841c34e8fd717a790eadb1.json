{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/google-maps.js\";\nimport React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport { GoogleMap, Marker, DirectionsService, DirectionsRenderer } from \"@react-google-maps/api\";\n\nconst GoogleMaps = ({\n  addresses\n}) => {\n  const {\n    0: googleResponse,\n    1: setResponse\n  } = useState(null);\n  const {\n    0: totalDistance,\n    1: setTotalDistance\n  } = useState(0);\n\n  let directionsCallback = response => {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        if (JSON.stringify(googleResponse) === JSON.stringify(response)) {\n          return;\n        } else {\n          setResponse(response);\n          response.routes[0].legs.map(leg => {\n            setTotalDistance(totalDistance + leg.distance.value);\n          });\n        }\n      } else {\n        console.log(\"response: \");\n      }\n    }\n  };\n\n  console.log(totalDistance);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    options: {\n      mapTypeId: \"hybrid\",\n      disableDefaultUI: true\n    },\n    mapContainerStyle: {\n      width: \"90%\",\n      height: \"100%\",\n      minHeight: \"12rem\"\n    },\n    center: {\n      lat: 22.309425,\n      lng: 72.13623\n    },\n    zoom: 5,\n    children: [addresses.origin && addresses.destination && /*#__PURE__*/_jsxDEV(DirectionsService // required\n    , {\n      options: {\n        origin: addresses.origin,\n        destination: addresses.destination,\n        waypoints: addresses.waypoints,\n        travelMode: \"DRIVING\",\n        optimizeWaypoints: true\n      } // required\n      ,\n      callback: directionsCallback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), googleResponse && /*#__PURE__*/_jsxDEV(DirectionsRenderer // required\n    , {\n      options: {\n        // eslint-disable-line react-perf/jsx-no-new-object-as-prop\n        directions: googleResponse\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default /*#__PURE__*/React.memo(GoogleMaps);","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/google-maps.js"],"names":["React","useState","useRef","useMemo","useCallback","GoogleMap","Marker","DirectionsService","DirectionsRenderer","GoogleMaps","addresses","googleResponse","setResponse","totalDistance","setTotalDistance","directionsCallback","response","status","JSON","stringify","routes","legs","map","leg","distance","value","console","log","mapTypeId","disableDefaultUI","width","height","minHeight","lat","lng","origin","destination","waypoints","travelMode","optimizeWaypoints","directions","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,iBAHF,EAIEC,kBAJF,QAKO,wBALP;;AAOA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACpC,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAgCX,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAA,OAACY,aAAD;AAAA,OAAgBC;AAAhB,MAAoCb,QAAQ,CAAC,CAAD,CAAlD;;AAEA,MAAIc,kBAAkB,GAAIC,QAAD,IAAc;AACrC,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,IAAxB,EAA8B;AAC5B,YAAIC,IAAI,CAACC,SAAL,CAAeR,cAAf,MAAmCO,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAvC,EAAiE;AAC/D;AACD,SAFD,MAEO;AACLJ,UAAAA,WAAW,CAACI,QAAD,CAAX;AACAA,UAAAA,QAAQ,CAACI,MAAT,CAAgB,CAAhB,EAAmBC,IAAnB,CAAwBC,GAAxB,CAA6BC,GAAD,IAAS;AACnCT,YAAAA,gBAAgB,CAACD,aAAa,GAAGU,GAAG,CAACC,QAAJ,CAAaC,KAA9B,CAAhB;AACD,WAFD;AAGD;AACF,OATD,MASO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;AACF,GAfD;;AAgBAD,EAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAE;AAAEe,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,gBAAgB,EAAE;AAAzC,KADX;AAEE,IAAA,iBAAiB,EAAE;AACjBC,MAAAA,KAAK,EAAE,KADU;AAEjBC,MAAAA,MAAM,EAAE,MAFS;AAGjBC,MAAAA,SAAS,EAAE;AAHM,KAFrB;AAOE,IAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAE,SADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KAPV;AAWE,IAAA,IAAI,EAAE,CAXR;AAAA,eAaGxB,SAAS,CAACyB,MAAV,IAAoBzB,SAAS,CAAC0B,WAA9B,iBACC,QAAC,iBAAD,CACE;AADF;AAEE,MAAA,OAAO,EAAE;AACPD,QAAAA,MAAM,EAAEzB,SAAS,CAACyB,MADX;AAEPC,QAAAA,WAAW,EAAE1B,SAAS,CAAC0B,WAFhB;AAGPC,QAAAA,SAAS,EAAE3B,SAAS,CAAC2B,SAHd;AAIPC,QAAAA,UAAU,EAAE,SAJL;AAKPC,QAAAA,iBAAiB,EAAE;AALZ,OAFX,CASE;AATF;AAUE,MAAA,QAAQ,EAAExB;AAVZ;AAAA;AAAA;AAAA;AAAA,YAdJ,EA4BGJ,cAAc,iBACb,QAAC,kBAAD,CACE;AADF;AAEE,MAAA,OAAO,EAAE;AACP;AACA6B,QAAAA,UAAU,EAAE7B;AAFL;AAFX;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA9DD;;AAgEA,4BAAeX,KAAK,CAACyC,IAAN,CAAWhC,UAAX,CAAf","sourcesContent":["import React, { useState, useRef, useMemo, useCallback } from \"react\";\nimport {\n  GoogleMap,\n  Marker,\n  DirectionsService,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\n\nconst GoogleMaps = ({ addresses }) => {\n  const [googleResponse, setResponse] = useState(null);\n  const [totalDistance, setTotalDistance] = useState(0);\n\n  let directionsCallback = (response) => {\n    if (response !== null) {\n      if (response.status === \"OK\") {\n        if (JSON.stringify(googleResponse) === JSON.stringify(response)) {\n          return;\n        } else {\n          setResponse(response);\n          response.routes[0].legs.map((leg) => {\n            setTotalDistance(totalDistance + leg.distance.value);\n          });\n        }\n      } else {\n        console.log(\"response: \");\n      }\n    }\n  };\n  console.log(totalDistance);\n\n  return (\n    <GoogleMap\n      options={{ mapTypeId: \"hybrid\", disableDefaultUI: true }}\n      mapContainerStyle={{\n        width: \"90%\",\n        height: \"100%\",\n        minHeight: \"12rem\",\n      }}\n      center={{\n        lat: 22.309425,\n        lng: 72.13623,\n      }}\n      zoom={5}\n    >\n      {addresses.origin && addresses.destination && (\n        <DirectionsService\n          // required\n          options={{\n            origin: addresses.origin,\n            destination: addresses.destination,\n            waypoints: addresses.waypoints,\n            travelMode: \"DRIVING\",\n            optimizeWaypoints: true,\n          }}\n          // required\n          callback={directionsCallback}\n        />\n      )}\n\n      {googleResponse && (\n        <DirectionsRenderer\n          // required\n          options={{\n            // eslint-disable-line react-perf/jsx-no-new-object-as-prop\n            directions: googleResponse,\n          }}\n        />\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default React.memo(GoogleMaps);\n"]},"metadata":{},"sourceType":"module"}