{"ast":null,"code":"import _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/PartyAutocomplete.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Dialog, DialogTitle, Divider, Grid, Switch, TextField, Typography } from \"@mui/material\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { orderApi } from \"../../../api/order-api\";\nvar filter = createFilterOptions();\n\nvar FreeSoloCreateOptionDialog = function FreeSoloCreateOptionDialog(_ref) {\n  _s();\n\n  var className = _ref.className,\n      touched = _ref.touched,\n      setFieldValue = _ref.setFieldValue,\n      errors = _ref.errors,\n      handleBlur = _ref.handleBlur,\n      type = _ref.type,\n      values = _ref.values,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"touched\", \"setFieldValue\", \"errors\", \"handleBlur\", \"type\", \"values\"]);\n\n  var _React$useState = React.useState(values && values[type]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      toggleOpen = _React$useState4[1];\n\n  var _useState = useState([]),\n      parties = _useState[0],\n      setParties = _useState[1];\n\n  var formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\").required(\"Mobile is required\")\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var resetForm, setErrors, setStatus, setSubmitting, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm, setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                _context.prev = 1;\n                // NOTE: Make API request\n                console.log(values);\n                _context.next = 5;\n                return axios.post(\"/api/parties/\", _objectSpread({\n                  name: values.name.replace(/\\w\\S*/g, function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                  })\n                }, values));\n\n              case 5:\n                response = _context.sent;\n                setFieldValue(type, response.data); // dispatch(updateParty(party, values));\n\n                resetForm();\n                setStatus({\n                  success: true\n                });\n                setSubmitting(false);\n                handleClose();\n                _context.next = 19;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 13]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var partiesDB;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return orderApi.getPartiesByUser(user);\n\n          case 3:\n            partiesDB = _context2.sent;\n            setParties(partiesDB.data.partiesByUser.items);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n            if (!open) {\n              setParties([]);\n            }\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  })), [open]);\n\n  var handleClose = function handleClose() {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false\n    });\n    toggleOpen(false);\n  };\n\n  var _React$useState5 = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dialogValue = _React$useState6[0],\n      setDialogValue = _React$useState6[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              setValue({\n                name: dialogValue.name,\n                transporter: dialogValue.transporter\n              });\n              _context3.prev = 2;\n              // NOTE: Make API request\n              console.log(value);\n              _context3.next = 6;\n              return axios.post(\"/api/parties/\", {\n                name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }),\n                transporter: dialogValue.transporter\n              });\n\n            case 6:\n              response = _context3.sent;\n              console.log(response.data);\n              setFieldValue(type, response.data);\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error(_context3.t0);\n\n            case 14:\n              handleClose();\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 11]]);\n    }));\n\n    return function handleSubmit(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      value: value,\n      onChange: function onChange(event, newValue) {\n        if (typeof newValue === \"string\") {\n          // timeout to avoid instant validation of the dialog's form.\n          setTimeout(function () {\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.replace(/\\w\\S*/g, function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n              }),\n              transporter: type !== \"customer\" ? true : false\n            });\n          });\n        } else if (newValue && newValue.inputValue) {\n          toggleOpen(true);\n          setDialogValue({\n            name: newValue.inputValue,\n            transporter: type !== \"customer\" ? true : false\n          });\n        } else {\n          setFieldValue(type, newValue);\n          setValue(newValue);\n        }\n      },\n      filterOptions: function filterOptions(options, params) {\n        var filtered = filter(options, params);\n\n        if (params.inputValue !== \"\") {\n          filtered.push({\n            inputValue: params.inputValue,\n            name: \"Add \\\"\".concat(params.inputValue, \"\\\"\")\n          });\n        }\n\n        return filtered;\n      },\n      id: type,\n      options: parties,\n      getOptionLabel: function getOptionLabel(option) {\n        // e.g value selected with enter, right from the input\n        if (typeof option === \"string\") {\n          return option.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }\n\n        if (option.inputValue) {\n          return option.inputValue.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }\n\n        return option.name.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n      },\n      clearOnBlur: true,\n      handleHomeEndKeys: true,\n      renderOption: function renderOption(option) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [option.name && option.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, _this), option.mobile && \"(M) \".concat(option.mobile.replace(/ /g, \"\")), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, _this), option.location && \"Location - \".concat(option.location.structured_formatting.main_text), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, _this);\n      },\n      fullWidth: true,\n      freeSolo: true,\n      renderInput: function renderInput(params) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n          label: type.charAt(0).toUpperCase() + type.slice(1),\n          error: Boolean(type === \"customer\" ? touched.customer && errors.customer : touched.transporter && errors.transporter),\n          onBlur: handleBlur,\n          helperText: type === \"customer\" ? touched.customer && errors.customer : touched.transporter && errors.transporter,\n          variant: \"outlined\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-name\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-name\",\n          children: \"Add a new party\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n          onSubmit: handleSubmit\n        }, rest), {}, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.name && errors.name),\n                    fullWidth: true,\n                    helperText: touched.name && errors.name,\n                    label: \"Main Contact Name\",\n                    name: \"name\",\n                    onBlur: handleBlur,\n                    onChange: function onChange(event) {\n                      setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                      }));\n                    },\n                    required: true,\n                    value: values.name,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    error: Boolean(touched.mobile && errors.mobile),\n                    fullWidth: true,\n                    helperText: touched.mobile && errors.mobile,\n                    label: \"Mobile\",\n                    name: \"mobile\",\n                    onBlur: handleBlur,\n                    onChange: function onChange(event) {\n                      setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                    },\n                    value: values.mobile,\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                    name: \"location\",\n                    field: \"location\",\n                    formik: formik,\n                    error: Boolean(formik.touched.city && formik.errors.city),\n                    label: \"Your city in India\",\n                    setFieldValue: formik.setFieldValue,\n                    handleBlur: formik.handleBlur,\n                    values: formik.values\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    color: \"textPrimary\",\n                    children: \"Party Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"Is this party a transporter?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n                    checked: values.transporter,\n                    color: \"secondary\",\n                    edge: \"start\",\n                    name: \"transporter\",\n                    onChange: handleChange,\n                    value: values.transporter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 2,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      type: \"submit\",\n                      disabled: isSubmitting,\n                      children: \"Create Party\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      onClick: handleClose,\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FreeSoloCreateOptionDialog, \"UVkdC4h6vbGBxBJ3fN9Fo5EBlyw=\", false, function () {\n  return [useFormik];\n});\n\n_c = FreeSoloCreateOptionDialog;\nexport default FreeSoloCreateOptionDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FreeSoloCreateOptionDialog\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/PartyAutocomplete.js"],"names":["React","useState","useEffect","useCallback","clsx","Yup","Formik","useFormik","Box","Button","Card","CardContent","Dialog","DialogTitle","Divider","Grid","Switch","TextField","Typography","Autocomplete","createFilterOptions","GoogleMaps","orderApi","filter","FreeSoloCreateOptionDialog","className","touched","setFieldValue","errors","handleBlur","type","values","rest","value","setValue","open","toggleOpen","parties","setParties","formik","initialValues","name","dialogValue","mobile","location","transporter","submit","validationSchema","object","shape","string","max","required","matches","onSubmit","resetForm","setErrors","setStatus","setSubmitting","console","log","axios","post","replace","txt","charAt","toUpperCase","substr","toLowerCase","response","data","success","handleClose","message","getPartiesByUser","user","partiesDB","partiesByUser","items","setDialogValue","handleSubmit","event","preventDefault","error","newValue","setTimeout","inputValue","options","params","filtered","push","option","structured_formatting","main_text","slice","Boolean","customer","target","city","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useFormik } from \"formik\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Divider,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { orderApi } from \"../../../api/order-api\";\n\nconst filter = createFilterOptions();\n\nconst FreeSoloCreateOptionDialog = ({\n  className,\n  touched,\n  setFieldValue,\n  errors,\n  handleBlur,\n  type,\n  values,\n  ...rest\n}) => {\n  const [value, setValue] = React.useState(values && values[type]);\n  const [open, toggleOpen] = React.useState(false);\n  const [parties, setParties] = useState([]);\n\n  const formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null,\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string()\n        .matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\")\n        .required(\"Mobile is required\"),\n    }),\n    onSubmit: async (\n      values,\n      { resetForm, setErrors, setStatus, setSubmitting }\n    ) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        const response = await axios.post(`/api/parties/`, {\n          name: values.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }),\n          ...values,\n        });\n        setFieldValue(type, response.data);\n        // dispatch(updateParty(party, values));\n        resetForm();\n        setStatus({ success: true });\n        setSubmitting(false);\n        handleClose();\n      } catch (err) {\n        console.log(err);\n        setStatus({ success: false });\n        setErrors({ submit: err.message });\n        setSubmitting(false);\n      }\n    },\n  });\n\n  useEffect(async () => {\n    try {\n      const partiesDB = await orderApi.getPartiesByUser(user);\n      setParties(partiesDB.data.partiesByUser.items);\n    } catch (error) {\n      console.log(error);\n    }\n\n    if (!open) {\n      setParties([]);\n    }\n  }, [open]);\n\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false,\n    });\n\n    toggleOpen(false);\n  };\n\n  const [dialogValue, setDialogValue] = React.useState({\n    name: \"\",\n    transporter: type !== \"customer\" ? true : false,\n  });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      transporter: dialogValue.transporter,\n    });\n\n    try {\n      // NOTE: Make API request\n      console.log(value);\n      const response = await axios.post(`/api/parties/`, {\n        name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n          return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        }),\n        transporter: dialogValue.transporter,\n      });\n      console.log(response.data);\n      setFieldValue(type, response.data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    handleClose();\n  };\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          if (typeof newValue === \"string\") {\n            // timeout to avoid instant validation of the dialog's form.\n            setTimeout(() => {\n              toggleOpen(true);\n              setDialogValue({\n                name: newValue.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                }),\n                transporter: type !== \"customer\" ? true : false,\n              });\n            });\n          } else if (newValue && newValue.inputValue) {\n            toggleOpen(true);\n            setDialogValue({\n              name: newValue.inputValue,\n              transporter: type !== \"customer\" ? true : false,\n            });\n          } else {\n            setFieldValue(type, newValue);\n            setValue(newValue);\n          }\n        }}\n        filterOptions={(options, params) => {\n          const filtered = filter(options, params);\n\n          if (params.inputValue !== \"\") {\n            filtered.push({\n              inputValue: params.inputValue,\n              name: `Add \"${params.inputValue}\"`,\n            });\n          }\n          return filtered;\n        }}\n        id={type}\n        options={parties}\n        getOptionLabel={(option) => {\n          // e.g value selected with enter, right from the input\n          if (typeof option === \"string\") {\n            return option.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n          }\n          if (option.inputValue) {\n            return option.inputValue.replace(/\\w\\S*/g, function (txt) {\n              return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            });\n          }\n          return option.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          });\n        }}\n        clearOnBlur\n        handleHomeEndKeys\n        renderOption={(option) => {\n          return (\n            <React.Fragment>\n              {option.name &&\n                option.name.replace(/\\w\\S*/g, function (txt) {\n                  return (\n                    txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n                  );\n                })}\n              <br />\n              {option.mobile && `(M) ${option.mobile.replace(/ /g, \"\")}`}\n              <br />\n              {option.location &&\n                `Location - ${option.location.structured_formatting.main_text}`}\n              <Divider />\n            </React.Fragment>\n          );\n        }}\n        fullWidth\n        freeSolo\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label={type.charAt(0).toUpperCase() + type.slice(1)}\n            error={Boolean(\n              type === \"customer\"\n                ? touched.customer && errors.customer\n                : touched.transporter && errors.transporter\n            )}\n            onBlur={handleBlur}\n            helperText={\n              type === \"customer\"\n                ? touched.customer && errors.customer\n                : touched.transporter && errors.transporter\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-name\"\n      >\n        <form>\n          <DialogTitle id=\"form-dialog-name\">Add a new party</DialogTitle>\n\n          <form onSubmit={handleSubmit} {...rest}>\n            <Card>\n              <CardContent>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <TextField\n                      error={Boolean(touched.name && errors.name)}\n                      fullWidth\n                      helperText={touched.name && errors.name}\n                      label=\"Main Contact Name\"\n                      name=\"name\"\n                      onBlur={handleBlur}\n                      onChange={(event) => {\n                        setFieldValue(\n                          \"name\",\n                          event.target.value.replace(/\\w\\S*/g, function (txt) {\n                            return (\n                              txt.charAt(0).toUpperCase() +\n                              txt.substr(1).toLowerCase()\n                            );\n                          })\n                        );\n                      }}\n                      required\n                      value={values.name}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      error={Boolean(touched.mobile && errors.mobile)}\n                      fullWidth\n                      helperText={touched.mobile && errors.mobile}\n                      label=\"Mobile\"\n                      name=\"mobile\"\n                      onBlur={handleBlur}\n                      onChange={(event) => {\n                        setFieldValue(\n                          \"mobile\",\n                          event.target.value.replace(/ /g, \"\")\n                        );\n                      }}\n                      value={values.mobile}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <GoogleMaps\n                      name={\"location\"}\n                      field={\"location\"}\n                      formik={formik}\n                      error={Boolean(formik.touched.city && formik.errors.city)}\n                      label={\"Your city in India\"}\n                      setFieldValue={formik.setFieldValue}\n                      handleBlur={formik.handleBlur}\n                      values={formik.values}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h5\" color=\"textPrimary\">\n                      Party Type\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      Is this party a transporter?\n                    </Typography>\n                    <Switch\n                      checked={values.transporter}\n                      color=\"secondary\"\n                      edge=\"start\"\n                      name=\"transporter\"\n                      onChange={handleChange}\n                      value={values.transporter}\n                    />\n                  </Grid>\n                </Grid>\n                <Box mt={2}>\n                  <Grid container spacing={3}>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                      >\n                        Create Party\n                      </Button>\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleClose}\n                      >\n                        Cancel\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </CardContent>\n            </Card>\n          </form>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n};\nexport default FreeSoloCreateOptionDialog;\n"]},"metadata":{},"sourceType":"module"}