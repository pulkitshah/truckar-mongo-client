{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { useAuth } from '../../hooks/use-auth';\nexport const GuestGuard = props => {\n  const {\n    children\n  } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const {\n    0: checked,\n    1: setChecked\n  } = useState(false);\n  const disableGuard = router.query.disableGuard;\n  useEffect(() => {\n    // if (!router.isReady) {\n    //   return;\n    // }\n    // You should remove the \"disableGuard\" check, because it's meant to be used only in the demo.\n    if (auth.isAuthenticated && disableGuard !== 'true') {\n      router.push('/dashboard');\n    } else {\n      setChecked(true);\n    }\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n\n  if (!checked) {\n    return null;\n  } // If got here, it means that the redirect did not occur, and that tells us that the user is\n  // not authenticated / authorized.\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\nGuestGuard.propTypes = {\n  children: PropTypes.node\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/guest-guard.js"],"names":["useEffect","useState","useRouter","PropTypes","useAuth","GuestGuard","props","children","auth","router","checked","setChecked","disableGuard","query","isAuthenticated","push","propTypes","node"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAME,IAAI,GAAGJ,OAAO,EAApB;AACA,QAAMK,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMW,YAAY,GAAGH,MAAM,CAACI,KAAP,CAAaD,YAAlC;AAEAZ,EAAAA,SAAS,CACP,MAAM;AACJ;AACA;AACA;AAEA;AACA,QAAIQ,IAAI,CAACM,eAAL,IAAwBF,YAAY,KAAK,MAA7C,EAAqD;AACnDH,MAAAA,MAAM,CAACM,IAAP,CAAY,YAAZ;AACD,KAFD,MAEO;AACLJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAZM,EAaP;AACA,IAdO,CAAT;;AAiBA,MAAI,CAACD,OAAL,EAAc;AACZ,WAAO,IAAP;AACD,GA1BkC,CA4BnC;AACA;;;AAEA,sBAAO;AAAA,cAAGH;AAAH,mBAAP;AACD,CAhCM;AAkCPF,UAAU,CAACW,SAAX,GAAuB;AACrBT,EAAAA,QAAQ,EAAEJ,SAAS,CAACc;AADC,CAAvB","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { useAuth } from '../../hooks/use-auth';\n\nexport const GuestGuard = (props) => {\n  const { children } = props;\n  const auth = useAuth();\n  const router = useRouter();\n  const [checked, setChecked] = useState(false);\n  const disableGuard = router.query.disableGuard;\n\n  useEffect(\n    () => {\n      // if (!router.isReady) {\n      //   return;\n      // }\n\n      // You should remove the \"disableGuard\" check, because it's meant to be used only in the demo.\n      if (auth.isAuthenticated && disableGuard !== 'true') {\n        router.push('/dashboard');\n      } else {\n        setChecked(true);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  if (!checked) {\n    return null;\n  }\n\n  // If got here, it means that the redirect did not occur, and that tells us that the user is\n  // not authenticated / authorized.\n\n  return <>{children}</>;\n};\n\nGuestGuard.propTypes = {\n  children: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}