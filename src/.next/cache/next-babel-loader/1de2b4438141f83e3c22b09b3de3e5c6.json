{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-addnew-autocomplete.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, Card, CardContent, Dialog, DialogTitle, Grid, Switch, TextField, Typography } from \"@mui/material\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { partyApi } from \"../../../api/party-api\";\n\nvar AddNewPartyFromAutocomplete = function AddNewPartyFromAutocomplete(_ref) {\n  _s();\n\n  var user = _ref.user,\n      rest = _objectWithoutProperties(_ref, [\"user\"]);\n\n  var handleClose = function handleClose() {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false\n    });\n    toggleOpen(false);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setValue({\n                name: dialogValue.name,\n                transporter: dialogValue.transporter\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return partyApi.createParty({\n                name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                }),\n                transporter: dialogValue.transporter\n              }, dispatch);\n\n            case 5:\n              setFieldValue(type, response.data);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](2);\n              console.error(_context.t0);\n\n            case 11:\n              handleClose();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 8]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string().matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\").required(\"Mobile is required\")\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref3) {\n        var resetForm, setErrors, setStatus, setSubmitting, _response;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                resetForm = _ref3.resetForm, setErrors = _ref3.setErrors, setStatus = _ref3.setStatus, setSubmitting = _ref3.setSubmitting;\n                _context2.prev = 1;\n                // NOTE: Make API request\n                console.log(values);\n                _context2.next = 5;\n                return axios.post(\"/api/parties/\", _objectSpread({\n                  name: values.name.replace(/\\w\\S*/g, function (txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                  })\n                }, values));\n\n              case 5:\n                _response = _context2.sent;\n                setFieldValue(type, _response.data); // dispatch(updateParty(party, values));\n\n                resetForm();\n                setStatus({\n                  success: true\n                });\n                setSubmitting(false);\n                handleClose();\n                _context2.next = 19;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context2.t0.message\n                });\n                setSubmitting(false);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 13]]);\n      }));\n\n      function onSubmit(_x2, _x3) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-name\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-name\",\n        children: \"Add a new party\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n        onSubmit: handleSubmit\n      }, rest), {}, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.name && formik.errors.name),\n                  fullWidth: true,\n                  helperText: formik.touched.name && formik.errors.name,\n                  label: \"Main Contact Name\",\n                  name: \"name\",\n                  onBlur: handleBlur,\n                  onChange: function onChange(event) {\n                    formik.setFieldValue(\"name\", event.target.value.replace(/\\w\\S*/g, function (txt) {\n                      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                    }));\n                  },\n                  required: true,\n                  value: formik.values.name,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(formik.touched.mobile && formik.errors.mobile),\n                  fullWidth: true,\n                  helperText: formik.touched.mobile && formik.errors.mobile,\n                  label: \"Mobile\",\n                  name: \"mobile\",\n                  onBlur: handleBlur,\n                  onChange: function onChange(event) {\n                    setFieldValue(\"mobile\", event.target.value.replace(/ /g, \"\"));\n                  },\n                  value: formik.values.mobile,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  name: \"location\",\n                  field: \"location\",\n                  formik: formik,\n                  error: Boolean(formik.touched.city && formik.errors.city),\n                  label: \"Your city in India\",\n                  setFieldValue: formik.setFieldValue,\n                  handleBlur: formik.handleBlur,\n                  values: formik.values\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: \"textPrimary\",\n                  children: \"Party Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Is this party a transporter?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: formik.values.transporter,\n                  color: \"secondary\",\n                  edge: \"start\",\n                  name: \"transporter\",\n                  onChange: formik.handleChange,\n                  value: formik.values.transporter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    type: \"submit\",\n                    disabled: formik.isSubmitting,\n                    children: \"Create Party\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    onClick: handleClose,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddNewPartyFromAutocomplete, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = AddNewPartyFromAutocomplete;\nexport default AddNewPartyFromAutocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewPartyFromAutocomplete\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/autocompletes/party-addnew-autocomplete.js"],"names":["React","useState","useEffect","useCallback","Yup","useFormik","Box","Button","Card","CardContent","Dialog","DialogTitle","Grid","Switch","TextField","Typography","useDispatch","GoogleMaps","partyApi","AddNewPartyFromAutocomplete","user","rest","handleClose","setDialogValue","name","transporter","type","toggleOpen","handleSubmit","event","preventDefault","setValue","dialogValue","createParty","replace","txt","charAt","toUpperCase","substr","toLowerCase","dispatch","setFieldValue","response","data","console","error","formik","initialValues","mobile","location","submit","validationSchema","object","shape","string","max","required","matches","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","log","axios","post","success","message","open","Boolean","touched","errors","handleBlur","target","value","city","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useDispatch } from \"../../../store\";\nimport GoogleMaps from \"../welcome/google-places-autocomplete\";\nimport { partyApi } from \"../../../api/party-api\";\n\nconst AddNewPartyFromAutocomplete = ({ user, ...rest }) => {\n  const handleClose = () => {\n    setDialogValue({\n      name: \"\",\n      transporter: type !== \"customer\" ? true : false,\n    });\n\n    toggleOpen(false);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setValue({\n      name: dialogValue.name,\n      transporter: dialogValue.transporter,\n    });\n\n    try {\n      await partyApi.createParty(\n        {\n          name: dialogValue.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }),\n          transporter: dialogValue.transporter,\n        },\n        dispatch\n      );\n      setFieldValue(type, response.data);\n    } catch (err) {\n      console.error(err);\n    }\n\n    handleClose();\n  };\n\n  let formik = useFormik({\n    initialValues: {\n      name: dialogValue.name || \"\",\n      mobile: dialogValue.mobile || \"\",\n      location: dialogValue.location || \"\",\n      transporter: dialogValue.transporter || \"\",\n      submit: null,\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      mobile: Yup.string()\n        .matches(/^[6-9]\\d{9}$/, \"Phone number is not valid\")\n        .required(\"Mobile is required\"),\n    }),\n    onSubmit: async (\n      values,\n      { resetForm, setErrors, setStatus, setSubmitting }\n    ) => {\n      try {\n        // NOTE: Make API request\n        console.log(values);\n        const response = await axios.post(`/api/parties/`, {\n          name: values.name.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n          }),\n          ...values,\n        });\n        setFieldValue(type, response.data);\n        // dispatch(updateParty(party, values));\n        resetForm();\n        setStatus({ success: true });\n        setSubmitting(false);\n        handleClose();\n      } catch (err) {\n        console.log(err);\n        setStatus({ success: false });\n        setErrors({ submit: err.message });\n        setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-name\"\n      >\n        <DialogTitle id=\"form-dialog-name\">Add a new party</DialogTitle>\n        <form onSubmit={handleSubmit} {...rest}>\n          <Card>\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <TextField\n                    error={Boolean(formik.touched.name && formik.errors.name)}\n                    fullWidth\n                    helperText={formik.touched.name && formik.errors.name}\n                    label=\"Main Contact Name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={(event) => {\n                      formik.setFieldValue(\n                        \"name\",\n                        event.target.value.replace(/\\w\\S*/g, function (txt) {\n                          return (\n                            txt.charAt(0).toUpperCase() +\n                            txt.substr(1).toLowerCase()\n                          );\n                        })\n                      );\n                    }}\n                    required\n                    value={formik.values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    error={Boolean(\n                      formik.touched.mobile && formik.errors.mobile\n                    )}\n                    fullWidth\n                    helperText={formik.touched.mobile && formik.errors.mobile}\n                    label=\"Mobile\"\n                    name=\"mobile\"\n                    onBlur={handleBlur}\n                    onChange={(event) => {\n                      setFieldValue(\n                        \"mobile\",\n                        event.target.value.replace(/ /g, \"\")\n                      );\n                    }}\n                    value={formik.values.mobile}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <GoogleMaps\n                    name={\"location\"}\n                    field={\"location\"}\n                    formik={formik}\n                    error={Boolean(formik.touched.city && formik.errors.city)}\n                    label={\"Your city in India\"}\n                    setFieldValue={formik.setFieldValue}\n                    handleBlur={formik.handleBlur}\n                    values={formik.values}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"h5\" color=\"textPrimary\">\n                    Party Type\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Is this party a transporter?\n                  </Typography>\n                  <Switch\n                    checked={formik.values.transporter}\n                    color=\"secondary\"\n                    edge=\"start\"\n                    name=\"transporter\"\n                    onChange={formik.handleChange}\n                    value={formik.values.transporter}\n                  />\n                </Grid>\n              </Grid>\n              <Box mt={2}>\n                <Grid container spacing={3}>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      type=\"submit\"\n                      disabled={formik.isSubmitting}\n                    >\n                      Create Party\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={handleClose}\n                    >\n                      Cancel\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      </Dialog>\n    </React.Fragment>\n  );\n};\nexport default AddNewPartyFromAutocomplete;\n"]},"metadata":{},"sourceType":"module"}