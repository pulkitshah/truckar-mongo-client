{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch as useReduxDispatch, useSelector as useReduxSelector } from \"react-redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./root-reducer\";\nexport var store = configureStore({\n  reducer: rootReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    });\n  },\n  devTools: process.env.REACT_APP_ENABLE_REDUX_DEV_TOOLS === \"true\"\n});\nexport var useSelector = useReduxSelector;\nexport var useDispatch = function useDispatch() {\n  _s();\n\n  return useReduxDispatch();\n};\n\n_s(useDispatch, \"5ndQXOdge1P9g14BR+Rgk1KaKWo=\", false, function () {\n  return [useReduxDispatch];\n});","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/store/index.js"],"names":["useDispatch","useReduxDispatch","useSelector","useReduxSelector","configureStore","getDefaultMiddleware","rootReducer","store","reducer","middleware","serializableCheck","devTools","process","env","REACT_APP_ENABLE_REDUX_DEV_TOOLS"],"mappings":";;AAAA,SACEA,WAAW,IAAIC,gBADjB,EAEEC,WAAW,IAAIC,gBAFjB,QAGO,aAHP;AAIA,SAASC,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,IAAMC,KAAK,GAAGH,cAAc,CAAC;AAClCI,EAAAA,OAAO,EAAEF,WADyB;AAElCG,EAAAA,UAAU,EAAE,oBAACJ,oBAAD;AAAA,WACVA,oBAAoB,CAAC;AACnBK,MAAAA,iBAAiB,EAAE;AADA,KAAD,CADV;AAAA,GAFsB;AAMlCC,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,gCAAZ,KAAiD;AANzB,CAAD,CAA5B;AASP,OAAO,IAAMZ,WAAW,GAAGC,gBAApB;AAEP,OAAO,IAAMH,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA,SAAMC,gBAAgB,EAAtB;AAAA,CAApB;;GAAMD,W;UAAoBC,gB","sourcesContent":["import {\n  useDispatch as useReduxDispatch,\n  useSelector as useReduxSelector,\n} from \"react-redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { rootReducer } from \"./root-reducer\";\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n  devTools: process.env.REACT_APP_ENABLE_REDUX_DEV_TOOLS === \"true\",\n});\n\nexport const useSelector = useReduxSelector;\n\nexport const useDispatch = () => useReduxDispatch();\n"]},"metadata":{},"sourceType":"module"}