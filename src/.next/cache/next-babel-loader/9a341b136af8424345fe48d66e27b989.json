{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../../utils/axios\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { LanguagePopover } from \"../language-popover\";\nimport { Avatar, Box, Button, Card, CardContent, Checkbox, FormGroup, FormControlLabel, Grid, IconButton, TextField, Typography } from \"@mui/material\";\nimport { UserCircle as UserCircleIcon } from \"../../../icons/user-circle\";\nvar languages = {\n  english: \"English\",\n  hindi: \"हिन्दी\"\n};\n\nvar LanguageButton = function LanguageButton() {\n  _s();\n\n  var anchorRef = useRef(null);\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var _useState = useState(false),\n      openPopover = _useState[0],\n      setOpenPopover = _useState[1];\n\n  var handleOpenPopover = function handleOpenPopover() {\n    setOpenPopover(true);\n  };\n\n  var handleClosePopover = function handleClosePopover() {\n    setOpenPopover(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleOpenPopover,\n      ref: anchorRef,\n      sx: {\n        ml: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"button\",\n        color: \"primary\",\n        children: languages[i18n.language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LanguagePopover, {\n      anchorEl: anchorRef.current,\n      onClose: handleClosePopover,\n      open: openPopover\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(LanguageButton, \"PWZ+e2uzKgRhcsi+G4nRmOHXkkI=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguageButton;\nexport var AccountOrderLRInvoiceSettings = function AccountOrderLRInvoiceSettings(props) {\n  _s2();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  console.log(user);\n\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t;\n\n  console.log(t(\"Basic Details\"));\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: user.name || \"\",\n      marketName: user.marketName || \"\",\n      email: user.email || \"\",\n      mobile: user.mobile || \"\",\n      accountType: user.accountType || {\n        vehicleOwner: false,\n        trader: true,\n        commissionAgent: false\n      },\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      name: Yup.string().max(255).required(\"Name is required\"),\n      marketName: Yup.string().max(255).required(\"Market Name is required\"),\n      mobile: Yup.string().max(10).required(\"Phone Number is required\"),\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var resetForm, setErrors, setStatus, setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref.resetForm, setErrors = _ref.setErrors, setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n                _context.prev = 1;\n                // NOTE: Make API request\n                console.log(values);\n                _context.next = 5;\n                return axios.patch(\"/api/auth/\", values);\n\n              case 5:\n                _context.next = 7;\n                return initialise();\n\n              case 7:\n                resetForm();\n                setStatus({\n                  success: true\n                });\n                setSubmitting(false);\n                toast.success(t(\"User updated\"));\n                _context.next = 19;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 13]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: function children(_ref3) {\n      var errors = _ref3.errors,\n          setFieldValue = _ref3.setFieldValue,\n          handleBlur = _ref3.handleBlur,\n          handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit,\n          isSubmitting = _ref3.isSubmitting,\n          touched = _ref3.touched,\n          values = _ref3.values;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n          sx: {\n            mt: 4\n          }\n        }, props), {}, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: t(\"Basic Details\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 8,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      alignItems: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.name && errors.name),\n                      fullWidth: true,\n                      helperText: touched.name && errors.name,\n                      label: t(\"Full Name\"),\n                      name: \"name\",\n                      size: \"small\",\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      required: true,\n                      value: values.name,\n                      sx: {\n                        flexGrow: 1,\n                        mr: 3\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      mt: 3,\n                      alignItems: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.marketName && errors.marketName),\n                      fullWidth: true,\n                      helperText: touched.marketName && errors.marketName,\n                      label: t(\"Market Name\"),\n                      name: \"marketName\",\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      required: true,\n                      value: values.marketName,\n                      size: \"small\",\n                      sx: {\n                        flexGrow: 1,\n                        mr: 3\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      mt: 3,\n                      alignItems: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.email && errors.email),\n                      fullWidth: true,\n                      helperText: touched.email && errors.email ? errors.email : \"We will use this email to contact you\",\n                      label: t(\"Email Address\"),\n                      name: \"email\",\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      required: true,\n                      type: \"email\",\n                      value: values.email,\n                      size: \"small\",\n                      sx: {\n                        flexGrow: 1,\n                        mr: 3\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      mt: 3,\n                      alignItems: \"center\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      error: Boolean(touched.mobile && errors.mobile),\n                      fullWidth: true,\n                      helperText: touched.mobile && errors.mobile ? errors.mobile : \"We will use this connect with you on call and Whatsapp\",\n                      label: t(\"Mobile Number\"),\n                      name: \"mobile\",\n                      onBlur: handleBlur,\n                      onChange: handleChange,\n                      required: true,\n                      value: values.mobile,\n                      size: \"small\",\n                      sx: {\n                        flexGrow: 1,\n                        mr: 3\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      mt: 3,\n                      alignItems: \"center\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    p: 2,\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"secondary\",\n                      disabled: isSubmitting,\n                      type: \"submit\",\n                      variant: \"contained\",\n                      children: \"Save Changes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              mt: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"Other Settings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 8,\n                  sm: 12,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      alignItems: \"center\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      mb: 3\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle1\",\n                        children: t(\"Select your preferred language\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(LanguageButton, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, _this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(AccountOrderLRInvoiceSettings, \"bl+Wg8Kza+UKTkPQQwrVAlOXlUE=\", false, function () {\n  return [useAuth, useTranslation];\n});\n\n_c2 = AccountOrderLRInvoiceSettings;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LanguageButton\");\n$RefreshReg$(_c2, \"AccountOrderLRInvoiceSettings\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js"],"names":["useRef","useState","useTranslation","toast","Formik","Yup","axios","useAuth","LanguagePopover","Avatar","Box","Button","Card","CardContent","Checkbox","FormGroup","FormControlLabel","Grid","IconButton","TextField","Typography","UserCircle","UserCircleIcon","languages","english","hindi","LanguageButton","anchorRef","i18n","openPopover","setOpenPopover","handleOpenPopover","handleClosePopover","ml","language","current","AccountOrderLRInvoiceSettings","props","user","console","log","t","name","marketName","email","mobile","accountType","vehicleOwner","trader","commissionAgent","submit","object","shape","string","max","required","values","resetForm","setErrors","setStatus","setSubmitting","patch","initialise","success","error","message","errors","setFieldValue","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mt","display","alignItems","Boolean","flexGrow","mr","justifyContent","mb"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"../../../utils/axios\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { LanguagePopover } from \"../language-popover\";\n\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { UserCircle as UserCircleIcon } from \"../../../icons/user-circle\";\n\nconst languages = {\n  english: \"English\",\n  hindi: \"हिन्दी\",\n};\n\nconst LanguageButton = () => {\n  const anchorRef = useRef(null);\n  const { i18n } = useTranslation();\n  const [openPopover, setOpenPopover] = useState(false);\n\n  const handleOpenPopover = () => {\n    setOpenPopover(true);\n  };\n\n  const handleClosePopover = () => {\n    setOpenPopover(false);\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleOpenPopover} ref={anchorRef} sx={{ ml: 1 }}>\n        <Typography variant=\"button\" color=\"primary\">\n          {languages[i18n.language]}\n        </Typography>\n      </IconButton>\n      <LanguagePopover\n        anchorEl={anchorRef.current}\n        onClose={handleClosePopover}\n        open={openPopover}\n      />\n    </>\n  );\n};\n\nexport const AccountOrderLRInvoiceSettings = (props) => {\n  const { user } = useAuth();\n  console.log(user);\n  const { t } = useTranslation();\n  console.log(t(\"Basic Details\"));\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        name: user.name || \"\",\n        marketName: user.marketName || \"\",\n        email: user.email || \"\",\n        mobile: user.mobile || \"\",\n        accountType: user.accountType || {\n          vehicleOwner: false,\n          trader: true,\n          commissionAgent: false,\n        },\n        submit: null,\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(255).required(\"Name is required\"),\n        marketName: Yup.string().max(255).required(\"Market Name is required\"),\n        mobile: Yup.string().max(10).required(\"Phone Number is required\"),\n        email: Yup.string()\n          .email(\"Must be a valid email\")\n          .max(255)\n          .required(\"Email is required\"),\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          // NOTE: Make API request\n          console.log(values);\n          await axios.patch(\"/api/auth/\", values);\n          await initialise();\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          toast.success(t(\"User updated\"));\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        setFieldValue,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box sx={{ mt: 4 }} {...props}>\n            <Card>\n              <CardContent>\n                <Grid container spacing={3}>\n                  <Grid item md={4} xs={12}>\n                    <Typography variant=\"h6\">{t(\"Basic Details\")}</Typography>\n                  </Grid>\n                  <Grid item md={8} xs={12}>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label={t(\"Full Name\")}\n                        name=\"name\"\n                        size=\"small\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        required\n                        value={values.name}\n                        sx={{\n                          flexGrow: 1,\n                          mr: 3,\n                        }}\n                      />\n                    </Box>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        mt: 3,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <TextField\n                        error={Boolean(touched.marketName && errors.marketName)}\n                        fullWidth\n                        helperText={touched.marketName && errors.marketName}\n                        label={t(\"Market Name\")}\n                        name=\"marketName\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        required\n                        value={values.marketName}\n                        size=\"small\"\n                        sx={{\n                          flexGrow: 1,\n                          mr: 3,\n                        }}\n                      />\n                    </Box>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        mt: 3,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={\n                          touched.email && errors.email\n                            ? errors.email\n                            : \"We will use this email to contact you\"\n                        }\n                        label={t(\"Email Address\")}\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        required\n                        type=\"email\"\n                        value={values.email}\n                        size=\"small\"\n                        sx={{\n                          flexGrow: 1,\n                          mr: 3,\n                        }}\n                      />\n                    </Box>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        mt: 3,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <TextField\n                        error={Boolean(touched.mobile && errors.mobile)}\n                        fullWidth\n                        helperText={\n                          touched.mobile && errors.mobile\n                            ? errors.mobile\n                            : \"We will use this connect with you on call and Whatsapp\"\n                        }\n                        label={t(\"Mobile Number\")}\n                        name=\"mobile\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        required\n                        value={values.mobile}\n                        size=\"small\"\n                        sx={{\n                          flexGrow: 1,\n                          mr: 3,\n                        }}\n                      />\n                    </Box>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        mt: 3,\n                        alignItems: \"center\",\n                      }}\n                    >\n                      {/* {user.id.toString() === user.createdBy.toString() && (\n                        <Grid item xs={12}>\n                          <Typography\n                            gutterBottom\n                            variant=\"h6\"\n                            color=\"textPrimary\"\n                          >\n                            Account Type\n                          </Typography>\n                          <FormGroup>\n                            <FormControlLabel\n                              checked={values.accountType.vehicleOwner}\n                              onChange={() =>\n                                setFieldValue(\n                                  \"accountType.vehicleOwner\",\n                                  !values.accountType.vehicleOwner\n                                )\n                              }\n                              control={<Checkbox />}\n                              label=\"Vehicle Owner\"\n                            />\n                            <FormControlLabel\n                              checked={values.accountType.trader}\n                              onChange={() =>\n                                setFieldValue(\n                                  \"accountType.trader\",\n                                  !values.accountType.trader\n                                )\n                              }\n                              control={<Checkbox />}\n                              label=\"Trader\"\n                            />\n                            <FormControlLabel\n                              checked={values.accountType.commissionAgent}\n                              onChange={() =>\n                                setFieldValue(\n                                  \"accountType.commissionAgent\",\n                                  !values.accountType.commissionAgent\n                                )\n                              }\n                              control={<Checkbox />}\n                              label=\"Commission Agent\"\n                            />\n                          </FormGroup>\n                        </Grid>\n                      )} */}\n                    </Box>\n                    <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n                      <Button\n                        color=\"secondary\"\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                        variant=\"contained\"\n                      >\n                        Save Changes\n                      </Button>\n                    </Box>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n            <Card sx={{ mt: 4 }}>\n              <CardContent>\n                <Grid container spacing={3}>\n                  <Grid item md={4} xs={12}>\n                    <Typography variant=\"h6\">Other Settings</Typography>\n                  </Grid>\n                  <Grid item md={8} sm={12} xs={12}>\n                    <Box\n                      sx={{\n                        alignItems: \"center\",\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        mb: 3,\n                      }}\n                    >\n                      <div>\n                        <Typography variant=\"subtitle1\">\n                          {t(\"Select your preferred language\")}\n                        </Typography>\n                      </div>\n                      <LanguageButton />\n                    </Box>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}