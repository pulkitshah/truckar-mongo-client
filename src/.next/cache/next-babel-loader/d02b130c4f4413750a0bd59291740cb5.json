{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { useFormik, FormikProvider, FieldArray, getIn } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../../hooks/use-auth\";\nimport { Box, Button, Card, CardContent, Checkbox, FormGroup, FormControlLabel, Grid, IconButton, TextField, Typography } from \"@mui/material\";\nexport const AccountOrderLRInvoiceSettings = props => {\n  const {\n    user\n  } = useAuth();\n  const {\n    t\n  } = useTranslation();\n  const formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [{\n        id: uuidv4(),\n        driverExpenseName: \"\",\n        showDefault: \"\"\n      }]\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        const newOrder = {\n          deliveries: JSON.stringify(values.deliveryDetails)\n        };\n        await orderApi.createOrder(newOrder, dispatch);\n        toast.success(\"Order created!\"); // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n      value: formik,\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"deliveryDetails\",\n        error: formik.errors,\n        children: ({\n          remove,\n          push\n        }) => /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n          sx: {\n            mt: 4\n          }\n        }, props), {}, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 4,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: t(\"Truck Driver Expenses Categories\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: t(\"Expenses to store the purpose of giving money to driver of own vehicles \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  md: 8,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 3,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: t(\"Truck Driver Expenses Categories\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: t(\"Show Default\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 8,\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: \"flex\",\n                          alignItems: \"center\"\n                        },\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          fullWidth: true,\n                          name: \"name\",\n                          size: \"small\",\n                          required: true,\n                          sx: {\n                            flexGrow: 1,\n                            mr: 3\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 4,\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        defaultChecked: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    p: 2,\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      startIcon: /*#__PURE__*/_jsxDEV(PlusIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 38\n                      }, this),\n                      onClick: () => {\n                        push({\n                          id: uuidv4(),\n                          loading: \"\",\n                          unloading: \"\",\n                          billQuantity: \"\",\n                          unloadingQuantity: \"\"\n                        });\n                      },\n                      children: \"Add Delivery\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"secondary\",\n                      type: \"submit\",\n                      variant: \"contained\",\n                      children: \"Save Changes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/account/account-order-lr-invoice-settings.js"],"names":["useRef","useState","v4","uuidv4","useTranslation","toast","useFormik","FormikProvider","FieldArray","getIn","Yup","useAuth","Box","Button","Card","CardContent","Checkbox","FormGroup","FormControlLabel","Grid","IconButton","TextField","Typography","AccountOrderLRInvoiceSettings","props","user","t","formik","initialValues","driverExpensesCategories","id","driverExpenseName","showDefault","onSubmit","values","helpers","newOrder","deliveries","JSON","stringify","deliveryDetails","orderApi","createOrder","dispatch","success","err","console","error","setStatus","setErrors","submit","message","setSubmitting","handleSubmit","errors","remove","push","mt","display","alignItems","flexGrow","mr","loading","unloading","billQuantity","unloadingQuantity"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useTranslation } from \"react-i18next\";\nimport { toast } from \"react-hot-toast\";\nimport { useFormik, FormikProvider, FieldArray, getIn } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useAuth } from \"../../../hooks/use-auth\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Checkbox,\n  FormGroup,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\n\nexport const AccountOrderLRInvoiceSettings = (props) => {\n  const { user } = useAuth();\n  const { t } = useTranslation();\n\n  const formik = useFormik({\n    initialValues: {\n      driverExpensesCategories: [\n        {\n          id: uuidv4(),\n          driverExpenseName: \"\",\n          showDefault: \"\",\n        },\n      ],\n    },\n    onSubmit: async (values, helpers) => {\n      try {\n        const newOrder = {\n          deliveries: JSON.stringify(values.deliveryDetails),\n        };\n\n        await orderApi.createOrder(newOrder, dispatch);\n\n        toast.success(\"Order created!\");\n        // router.push(\"/dashboard/orders\");\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} {...props}>\n      <FormikProvider value={formik}>\n        <FieldArray name=\"deliveryDetails\" error={formik.errors}>\n          {({ remove, push }) => (\n            <Box sx={{ mt: 4 }} {...props}>\n              <Card>\n                <CardContent>\n                  <Grid container spacing={3}>\n                    <Grid item md={4} xs={12}>\n                      <Typography variant=\"h6\">\n                        {t(\"Truck Driver Expenses Categories\")}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {t(\n                          \"Expenses to store the purpose of giving money to driver of own vehicles \"\n                        )}\n                      </Typography>\n                    </Grid>\n                    <Grid item md={8} xs={12}>\n                      <Grid container spacing={3}>\n                        <Grid item xs={8}>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            {t(\"Truck Driver Expenses Categories\")}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            {t(\"Show Default\")}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={8}>\n                          <Box\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <TextField\n                              fullWidth\n                              name=\"name\"\n                              size=\"small\"\n                              required\n                              sx={{\n                                flexGrow: 1,\n                                mr: 3,\n                              }}\n                            />\n                          </Box>\n                        </Grid>\n                        <Grid item xs={4}>\n                          <Checkbox defaultChecked />\n                        </Grid>\n                      </Grid>\n\n                      <Box p={2} display=\"flex\" justifyContent=\"flex-end\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          startIcon={<PlusIcon fontSize=\"small\" />}\n                          onClick={() => {\n                            push({\n                              id: uuidv4(),\n                              loading: \"\",\n                              unloading: \"\",\n                              billQuantity: \"\",\n                              unloadingQuantity: \"\",\n                            });\n                          }}\n                        >\n                          Add Delivery\n                        </Button>\n                        <Button\n                          color=\"secondary\"\n                          type=\"submit\"\n                          variant=\"contained\"\n                        >\n                          Save Changes\n                        </Button>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </CardContent>\n              </Card>\n            </Box>\n          )}\n        </FieldArray>\n      </FormikProvider>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}