{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/branch/branch-drawer.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport { Storage } from \"aws-amplify\";\nimport { useFormik } from \"formik\";\nimport toast from \"react-hot-toast\";\nimport { Box, Button, Divider, Drawer, IconButton, TextField, Typography, useMediaQuery } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { useDispatch } from \"../../../store\";\nimport { X as XIcon } from \"../../../icons/x\";\nimport { getInitials } from \"../../../utils/get-initials\";\nimport { PropertyList } from \"../../property-list\";\nimport { PropertyListItem } from \"../../property-list-item\";\nimport { branchApi } from \"../../../api/branch-api\";\nimport { BranchLogoDropzone } from \"./branch-logo-dropzone\";\n\nconst BranchPreview = props => {\n  const dispatch = useDispatch();\n  const {\n    lgUp,\n    onEdit,\n    branch\n  } = props;\n  const align = lgUp ? \"horizontal\" : \"vertical\";\n  const {\n    0: branchLogo,\n    1: setBranchLogo\n  } = useState();\n  const {\n    0: file,\n    1: setFile\n  } = useState();\n  const {\n    0: croppedImage,\n    1: setCroppedImage\n  } = useState();\n\n  const handleDrop = newFile => {\n    newFile.length > 0 && setFile(Object.assign(newFile[0], {\n      preview: URL.createObjectURL(newFile[0])\n    }));\n  };\n\n  const handleRemove = file => {\n    setFile();\n    setCroppedImage(\"\");\n  };\n\n  const handleSaveCroppedImage = async cropper => {\n    const filename = `${branch.user}_branchLogo_${branch.id}`;\n    let logoBase64;\n    let logo;\n    logoBase64 = await fetch(cropper.getCroppedCanvas().toDataURL());\n    logo = await logoBase64.blob();\n    await Storage.put(filename, logo);\n    let editedBranch = {\n      id: branch.id,\n      _version: branch._version,\n      logo: filename\n    };\n    await branchApi.updateBranch(editedBranch, dispatch);\n    setBranchLogo(logo);\n  };\n\n  useEffect(async () => {\n    try {\n      setBranchLogo(null);\n\n      if (branch.logo) {\n        const logo = await Storage.get(branch.logo);\n        setBranchLogo(logo);\n      } else {\n        setBranchLogo(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [branch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [branchLogo && /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      },\n      src: branchLogo,\n      alt: \"Business Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), !branchLogo && /*#__PURE__*/_jsxDEV(BranchLogoDropzone, {\n      accept: \"image/*\",\n      file: file,\n      croppedImage: croppedImage,\n      onDrop: handleDrop,\n      onRemove: handleRemove,\n      maxFiles: 1,\n      onSaveCroppedImage: handleSaveCroppedImage,\n      displayInDrawer: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: \"center\",\n        borderRadius: 1,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 3\n        },\n        variant: \"h6\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: \"center\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          mt: 3,\n          m: -1,\n          \"& > button\": {\n            m: 1\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onEdit,\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 24\n          }, this),\n          sx: {\n            pt: 3\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PropertyList, {\n      children: [/*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Business Name\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"primary\",\n          variant: \"body2\",\n          children: `${branch.name} (${branch.initials})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.addressLine1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.addressLine2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.pincode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Bank Details\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.bankName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.bankAccountNumber && `A/c: ${branch.bankAccountNumber}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.bankIFSC && `IFSC: ${branch.bankIFSC}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textSecondary\",\n          variant: \"body2\",\n          children: branch.bankBranchName && `Branch: ${branch.bankBranchName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          mt: 3\n        },\n        variant: \"h6\",\n        children: \"Billing Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"PAN\",\n        value: branch.pan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"GSTIN\",\n        value: branch.gstin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Contact No.\",\n        value: branch.contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"E-mail\",\n        value: branch.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PropertyListItem, {\n        align: align,\n        disableGutters: true,\n        label: \"Terms & Conditions\",\n        value: branch.invoiceTermsAndConditions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nconst BranchForm = props => {\n  const {\n    onCancel,\n    branch\n  } = props;\n  const dispatch = useDispatch();\n  const {\n    0: file,\n    1: setFile\n  } = useState();\n  const {\n    0: croppedImage,\n    1: setCroppedImage\n  } = useState();\n  const formik = useFormik({\n    initialValues: {\n      id: branch.id,\n      name: branch.name,\n      initials: branch.initials,\n      addressLine1: branch.addressLine1,\n      addressLine2: branch.addressLine2,\n      city: branch.city,\n      pincode: branch.pincode,\n      gstin: branch.gstin,\n      pan: branch.pan,\n      invoiceTermsAndConditions: branch.invoiceTermsAndConditions,\n      bankName: branch.bankName,\n      bankAccountNumber: branch.bankAccountNumber,\n      bankBranchName: branch.bankBranchName,\n      bankIFSC: branch.bankIFSC,\n      contact: branch.contact,\n      _version: branch._version\n    },\n    // validationSchema: Yup.object({\n    //   name: Yup.string().max(255).required(\"Name is required\"),\n    //   initials: Yup.string().max(255).required(\"Required\"),\n    //   addressLine1: Yup.string()\n    //     .max(255)\n    //     .required(\"Address Line 1 is required\"),\n    //   city: Yup.string().max(255).required(\"City is required\"),\n    //   pincode: Yup.string().max(255).required(\"Pincode is required\"),\n    //   gstin: Yup.string()\n    //     .trim()\n    //     .matches(\n    //       /^([0-9]){2}([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}([0-9]){1}([a-zA-Z]){1}([0-9]){1}?$/,\n    //       \"Invalid GST Number\"\n    //     ),\n    //   pan: Yup.string().max(255).required(\"PAN is required\"),\n    //   jurisdiction: Yup.string().max(255).required(\"Jurisdiction is required\"),\n    // }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        const filename = `${branch.user}_branchLogo_${branch.id}`;\n        let logoBase64;\n        let logo;\n\n        if (values.logo) {\n          logoBase64 = await fetch(values.logo);\n          logo = await logoBase64.blob();\n          values.logo = filename;\n          await Storage.put(filename, logo);\n        }\n\n        await branchApi.updateBranch(values, dispatch);\n        toast.success(\"Branch updated!\");\n        onCancel();\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({\n          success: false\n        });\n        helpers.setErrors({\n          submit: err.message\n        });\n        helpers.setSubmitting(false);\n      }\n    }\n  });\n\n  const handleDrop = newFile => {\n    newFile.length > 0 && setFile(Object.assign(newFile[0], {\n      preview: URL.createObjectURL(newFile[0])\n    }));\n  };\n\n  const handleRemove = file => {\n    setFile();\n    setCroppedImage(\"\");\n  };\n\n  const handleSaveCroppedImage = cropper => {\n    setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n    formik.setFieldValue(`logo`, cropper.getCroppedCanvas().toDataURL());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n      onSubmit: formik.handleSubmit\n    }, props), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          alignItems: \"center\",\n          backgroundColor: theme => theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n          bbranchRadius: 1,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          px: 3,\n          py: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"overline\",\n          sx: {\n            mr: 2\n          },\n          color: \"textSecondary\",\n          children: \"Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: \"center\",\n            display: \"flex\",\n            m: -1,\n            \"& > button\": {\n              m: 1\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"submit\",\n            size: \"small\",\n            variant: \"contained\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onCancel,\n            size: \"small\",\n            variant: \"outlined\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(BranchLogoDropzone, {\n          accept: \"image/*\",\n          file: file,\n          croppedImage: croppedImage,\n          onDrop: handleDrop,\n          onRemove: handleRemove,\n          maxFiles: 1,\n          onSaveCroppedImage: handleSaveCroppedImage,\n          displayInDrawer: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: \"100%\",\n            height: \"auto\"\n          },\n          src: croppedImage,\n          alt: \"cropped\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), croppedImage && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleRemove,\n            size: \"small\",\n            type: \"button\",\n            children: \"Remove Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          my: 3\n        },\n        variant: \"h6\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMaps, {\n        formik: formik,\n        error: Boolean(formik.touched.city && formik.errors.city),\n        label: \"Your city in India\",\n        field: \"city\",\n        setFieldValue: formik.setFieldValue,\n        handleBlur: formik.handleBlur,\n        values: formik.values\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.name && formik.errors.name),\n        fullWidth: true,\n        helperText: formik.touched.name && formik.errors.name,\n        label: \"Business Name\",\n        name: \"name\",\n        onBlur: formik.handleBlur,\n        onChange: event => {\n          formik.setFieldValue(`initials`, `${getInitials(event.target.value)}`);\n          formik.setFieldValue(`name`, event.target.value);\n        },\n        value: formik.values.name,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.initials && formik.errors.initials),\n        fullWidth: true,\n        helperText: formik.touched.initials && formik.errors.initials,\n        label: \"Initials\",\n        name: \"initials\",\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange,\n        value: formik.values.initials,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        error: Boolean(formik.touched.addressLine1 && formik.errors.addressLine1),\n        fullWidth: true,\n        helperText: formik.touched.addressLine1 && formik.errors.addressLine1,\n        label: \"Address Line 1\",\n        name: \"addressLine1\",\n        onBlur: formik.handleBlur,\n        onChange: formik.handleChange,\n        value: formik.values.addressLine1,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"error\",\n        sx: {\n          mt: 3\n        },\n        children: \"Delete branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nconst BranchDrawerDesktop = styled(Drawer)({\n  width: 500,\n  flexShrink: 0,\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    width: 500\n  }\n});\nconst BranchDrawerMobile = styled(Drawer)({\n  flexShrink: 0,\n  maxWidth: \"100%\",\n  height: \"calc(100% - 64px)\",\n  width: 500,\n  \"& .MuiDrawer-paper\": {\n    height: \"calc(100% - 64px)\",\n    maxWidth: \"100%\",\n    top: 64,\n    width: 500\n  }\n});\nexport const BranchDrawer = props => {\n  const {\n    containerRef,\n    onClose,\n    open,\n    branch\n  } = props,\n        other = _objectWithoutProperties(props, [\"containerRef\", \"onClose\", \"open\", \"branch\"]);\n\n  const {\n    0: isEditing,\n    1: setIsEditing\n  } = useState(false);\n  const lgUp = useMediaQuery(theme => theme.breakpoints.up(\"lg\"));\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  }; // The reason for doing this, is that the persistent drawer has to be rendered, but not it's\n  // content if an branch is not passed.\n\n\n  const content = branch ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        alignItems: \"center\",\n        backgroundColor: \"primary.main\",\n        color: \"primary.contrastText\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        px: 3,\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"inherit\",\n        variant: \"h6\",\n        children: branch.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"inherit\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(XIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3,\n        py: 4\n      },\n      children: !isEditing ? /*#__PURE__*/_jsxDEV(BranchPreview, {\n        onApprove: onClose,\n        onEdit: handleEdit,\n        onReject: onClose,\n        branch: branch,\n        lgUp: lgUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(BranchForm, {\n        onCancel: handleCancel,\n        branch: branch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : null;\n\n  if (lgUp) {\n    return /*#__PURE__*/_jsxDEV(BranchDrawerDesktop, _objectSpread(_objectSpread({\n      anchor: \"right\",\n      open: open,\n      SlideProps: {\n        container: containerRef === null || containerRef === void 0 ? void 0 : containerRef.current\n      },\n      variant: \"persistent\"\n    }, other), {}, {\n      children: content\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BranchDrawerMobile, _objectSpread(_objectSpread({\n    anchor: \"right\",\n    ModalProps: {\n      container: containerRef === null || containerRef === void 0 ? void 0 : containerRef.current\n    },\n    onClose: onClose,\n    open: open,\n    SlideProps: {\n      container: containerRef === null || containerRef === void 0 ? void 0 : containerRef.current\n    },\n    variant: \"temporary\"\n  }, other), {}, {\n    children: content\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 538,\n    columnNumber: 5\n  }, this);\n};\nBranchDrawer.propTypes = {\n  containerRef: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  branch: PropTypes.object\n};","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/branch/branch-drawer.js"],"names":["useState","useEffect","PropTypes","format","Storage","useFormik","toast","Box","Button","Divider","Drawer","IconButton","TextField","Typography","useMediaQuery","styled","EditIcon","useDispatch","X","XIcon","getInitials","PropertyList","PropertyListItem","branchApi","BranchLogoDropzone","BranchPreview","props","dispatch","lgUp","onEdit","branch","align","branchLogo","setBranchLogo","file","setFile","croppedImage","setCroppedImage","handleDrop","newFile","length","Object","assign","preview","URL","createObjectURL","handleRemove","handleSaveCroppedImage","cropper","filename","user","id","logoBase64","logo","fetch","getCroppedCanvas","toDataURL","blob","put","editedBranch","_version","updateBranch","get","error","console","log","width","height","alignItems","borderRadius","display","flexWrap","justifyContent","mt","m","pt","my","name","initials","addressLine1","addressLine2","city","pincode","bankName","bankAccountNumber","bankIFSC","bankBranchName","pan","gstin","contact","email","invoiceTermsAndConditions","BranchForm","onCancel","formik","initialValues","onSubmit","values","helpers","success","err","setStatus","setErrors","submit","message","setSubmitting","setFieldValue","handleSubmit","backgroundColor","theme","palette","mode","bbranchRadius","px","py","mr","Boolean","touched","errors","handleBlur","event","target","value","handleChange","BranchDrawerDesktop","flexShrink","position","BranchDrawerMobile","maxWidth","top","BranchDrawer","containerRef","onClose","open","other","isEditing","setIsEditing","breakpoints","up","handleEdit","handleCancel","content","color","number","container","current","propTypes","any","func","bool","object"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"date-fns\";\nimport { Storage } from \"aws-amplify\";\nimport { useFormik } from \"formik\";\nimport toast from \"react-hot-toast\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  IconButton,\n  TextField,\n  Typography,\n  useMediaQuery,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { useDispatch } from \"../../../store\";\nimport { X as XIcon } from \"../../../icons/x\";\nimport { getInitials } from \"../../../utils/get-initials\";\nimport { PropertyList } from \"../../property-list\";\nimport { PropertyListItem } from \"../../property-list-item\";\nimport { branchApi } from \"../../../api/branch-api\";\nimport { BranchLogoDropzone } from \"./branch-logo-dropzone\";\n\nconst BranchPreview = (props) => {\n  const dispatch = useDispatch();\n  const { lgUp, onEdit, branch } = props;\n  const align = lgUp ? \"horizontal\" : \"vertical\";\n  const [branchLogo, setBranchLogo] = useState();\n  const [file, setFile] = useState();\n  const [croppedImage, setCroppedImage] = useState();\n\n  const handleDrop = (newFile) => {\n    newFile.length > 0 &&\n      setFile(\n        Object.assign(newFile[0], {\n          preview: URL.createObjectURL(newFile[0]),\n        })\n      );\n  };\n\n  const handleRemove = (file) => {\n    setFile();\n    setCroppedImage(\"\");\n  };\n\n  const handleSaveCroppedImage = async (cropper) => {\n    const filename = `${branch.user}_branchLogo_${branch.id}`;\n    let logoBase64;\n    let logo;\n    logoBase64 = await fetch(cropper.getCroppedCanvas().toDataURL());\n    logo = await logoBase64.blob();\n    await Storage.put(filename, logo);\n\n    let editedBranch = {\n      id: branch.id,\n      _version: branch._version,\n      logo: filename,\n    };\n\n    await branchApi.updateBranch(editedBranch, dispatch);\n    setBranchLogo(logo);\n  };\n\n  useEffect(async () => {\n    try {\n      setBranchLogo(null);\n      if (branch.logo) {\n        const logo = await Storage.get(branch.logo);\n        setBranchLogo(logo);\n      } else {\n        setBranchLogo(null);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [branch]);\n\n  return (\n    <>\n      {branchLogo && (\n        <img\n          style={{ width: \"100%\", height: \"auto\" }}\n          src={branchLogo}\n          alt=\"Business Logo\"\n        />\n      )}\n      {!branchLogo && (\n        <BranchLogoDropzone\n          accept=\"image/*\"\n          file={file}\n          croppedImage={croppedImage}\n          onDrop={handleDrop}\n          onRemove={handleRemove}\n          maxFiles={1}\n          onSaveCroppedImage={handleSaveCroppedImage}\n          displayInDrawer={true}\n        />\n      )}\n      <Box\n        sx={{\n          alignItems: \"center\",\n          borderRadius: 1,\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography sx={{ mt: 3 }} variant=\"h6\">\n          Details\n        </Typography>\n        <Box\n          sx={{\n            alignItems: \"center\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            mt: 3,\n            m: -1,\n            \"& > button\": {\n              m: 1,\n            },\n          }}\n        >\n          <Button\n            onClick={onEdit}\n            size=\"small\"\n            startIcon={<EditIcon fontSize=\"small\" />}\n            sx={{ pt: 3 }}\n          >\n            Edit\n          </Button>\n        </Box>\n      </Box>\n      <Divider sx={{ my: 3 }} />\n\n      <PropertyList>\n        <PropertyListItem align={align} disableGutters label=\"Business Name\">\n          <Typography color=\"primary\" variant=\"body2\">\n            {`${branch.name} (${branch.initials})`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.addressLine1}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.addressLine2}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.city}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.pincode}\n          </Typography>\n        </PropertyListItem>\n\n        <PropertyListItem align={align} disableGutters label=\"Bank Details\">\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.bankName}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.bankAccountNumber && `A/c: ${branch.bankAccountNumber}`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.bankIFSC && `IFSC: ${branch.bankIFSC}`}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"body2\">\n            {branch.bankBranchName && `Branch: ${branch.bankBranchName}`}\n          </Typography>\n        </PropertyListItem>\n\n        <Typography sx={{ mt: 3 }} variant=\"h6\">\n          Billing Details\n        </Typography>\n        <Divider sx={{ my: 3 }} />\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"PAN\"\n          value={branch.pan}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"GSTIN\"\n          value={branch.gstin}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"Contact No.\"\n          value={branch.contact}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"E-mail\"\n          value={branch.email}\n        />\n\n        <PropertyListItem\n          align={align}\n          disableGutters\n          label=\"Terms & Conditions\"\n          value={branch.invoiceTermsAndConditions}\n        />\n      </PropertyList>\n    </>\n  );\n};\n\nconst BranchForm = (props) => {\n  const { onCancel, branch } = props;\n  const dispatch = useDispatch();\n  const [file, setFile] = useState();\n  const [croppedImage, setCroppedImage] = useState();\n\n  const formik = useFormik({\n    initialValues: {\n      id: branch.id,\n      name: branch.name,\n      initials: branch.initials,\n      addressLine1: branch.addressLine1,\n      addressLine2: branch.addressLine2,\n      city: branch.city,\n      pincode: branch.pincode,\n      gstin: branch.gstin,\n      pan: branch.pan,\n      invoiceTermsAndConditions: branch.invoiceTermsAndConditions,\n      bankName: branch.bankName,\n      bankAccountNumber: branch.bankAccountNumber,\n      bankBranchName: branch.bankBranchName,\n      bankIFSC: branch.bankIFSC,\n      contact: branch.contact,\n      _version: branch._version,\n    },\n    // validationSchema: Yup.object({\n    //   name: Yup.string().max(255).required(\"Name is required\"),\n    //   initials: Yup.string().max(255).required(\"Required\"),\n    //   addressLine1: Yup.string()\n    //     .max(255)\n    //     .required(\"Address Line 1 is required\"),\n    //   city: Yup.string().max(255).required(\"City is required\"),\n    //   pincode: Yup.string().max(255).required(\"Pincode is required\"),\n    //   gstin: Yup.string()\n    //     .trim()\n    //     .matches(\n    //       /^([0-9]){2}([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}([0-9]){1}([a-zA-Z]){1}([0-9]){1}?$/,\n    //       \"Invalid GST Number\"\n    //     ),\n    //   pan: Yup.string().max(255).required(\"PAN is required\"),\n    //   jurisdiction: Yup.string().max(255).required(\"Jurisdiction is required\"),\n    // }),\n    onSubmit: async (values, helpers) => {\n      try {\n        // NOTE: Make API request\n        const filename = `${branch.user}_branchLogo_${branch.id}`;\n        let logoBase64;\n        let logo;\n        if (values.logo) {\n          logoBase64 = await fetch(values.logo);\n          logo = await logoBase64.blob();\n          values.logo = filename;\n          await Storage.put(filename, logo);\n        }\n\n        await branchApi.updateBranch(values, dispatch);\n\n        toast.success(\"Branch updated!\");\n        onCancel();\n      } catch (err) {\n        console.error(err);\n        toast.error(\"Something went wrong!\");\n        helpers.setStatus({ success: false });\n        helpers.setErrors({ submit: err.message });\n        helpers.setSubmitting(false);\n      }\n    },\n  });\n\n  const handleDrop = (newFile) => {\n    newFile.length > 0 &&\n      setFile(\n        Object.assign(newFile[0], {\n          preview: URL.createObjectURL(newFile[0]),\n        })\n      );\n  };\n\n  const handleRemove = (file) => {\n    setFile();\n    setCroppedImage(\"\");\n  };\n\n  const handleSaveCroppedImage = (cropper) => {\n    setCroppedImage(cropper.getCroppedCanvas().toDataURL());\n    formik.setFieldValue(`logo`, cropper.getCroppedCanvas().toDataURL());\n  };\n\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit} {...props}>\n        <Box\n          sx={{\n            alignItems: \"center\",\n            backgroundColor: (theme) =>\n              theme.palette.mode === \"dark\" ? \"neutral.800\" : \"neutral.100\",\n            bbranchRadius: 1,\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            px: 3,\n            py: 2.5,\n          }}\n        >\n          <Typography variant=\"overline\" sx={{ mr: 2 }} color=\"textSecondary\">\n            Branch\n          </Typography>\n          <Box\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n              m: -1,\n              \"& > button\": {\n                m: 1,\n              },\n            }}\n          >\n            <Button\n              color=\"primary\"\n              type=\"submit\"\n              size=\"small\"\n              variant=\"contained\"\n            >\n              Save changes\n            </Button>\n            <Button onClick={onCancel} size=\"small\" variant=\"outlined\">\n              Cancel\n            </Button>\n          </Box>\n        </Box>\n        <Box sx={{ mt: 3 }}>\n          <BranchLogoDropzone\n            accept=\"image/*\"\n            file={file}\n            croppedImage={croppedImage}\n            onDrop={handleDrop}\n            onRemove={handleRemove}\n            maxFiles={1}\n            onSaveCroppedImage={handleSaveCroppedImage}\n            displayInDrawer={true}\n          />\n          {croppedImage && (\n            <img\n              style={{ width: \"100%\", height: \"auto\" }}\n              src={croppedImage}\n              alt=\"cropped\"\n            />\n          )}\n          {croppedImage && (\n            <Box\n              sx={{\n                display: \"flex\",\n\n                mt: 2,\n              }}\n            >\n              <Button onClick={handleRemove} size=\"small\" type=\"button\">\n                Remove Logo\n              </Button>\n            </Box>\n          )}\n        </Box>\n\n        <Typography sx={{ my: 3 }} variant=\"h6\">\n          Details\n        </Typography>\n\n        <GoogleMaps\n          formik={formik}\n          error={Boolean(formik.touched.city && formik.errors.city)}\n          label={\"Your city in India\"}\n          field={\"city\"}\n          setFieldValue={formik.setFieldValue}\n          handleBlur={formik.handleBlur}\n          values={formik.values}\n        />\n\n        <TextField\n          margin=\"normal\"\n          error={Boolean(formik.touched.name && formik.errors.name)}\n          fullWidth\n          helperText={formik.touched.name && formik.errors.name}\n          label=\"Business Name\"\n          name=\"name\"\n          onBlur={formik.handleBlur}\n          onChange={(event) => {\n            formik.setFieldValue(\n              `initials`,\n              `${getInitials(event.target.value)}`\n            );\n            formik.setFieldValue(`name`, event.target.value);\n          }}\n          value={formik.values.name}\n          variant=\"outlined\"\n        />\n\n        <TextField\n          margin=\"normal\"\n          error={Boolean(formik.touched.initials && formik.errors.initials)}\n          fullWidth\n          helperText={formik.touched.initials && formik.errors.initials}\n          label=\"Initials\"\n          name=\"initials\"\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n          value={formik.values.initials}\n          variant=\"outlined\"\n        />\n        <TextField\n          margin=\"normal\"\n          error={Boolean(\n            formik.touched.addressLine1 && formik.errors.addressLine1\n          )}\n          fullWidth\n          helperText={formik.touched.addressLine1 && formik.errors.addressLine1}\n          label=\"Address Line 1\"\n          name=\"addressLine1\"\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n          value={formik.values.addressLine1}\n          variant=\"outlined\"\n        />\n        <Button color=\"error\" sx={{ mt: 3 }}>\n          Delete branch\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst BranchDrawerDesktop = styled(Drawer)({\n  width: 500,\n  flexShrink: 0,\n  \"& .MuiDrawer-paper\": {\n    position: \"relative\",\n    width: 500,\n  },\n});\n\nconst BranchDrawerMobile = styled(Drawer)({\n  flexShrink: 0,\n  maxWidth: \"100%\",\n  height: \"calc(100% - 64px)\",\n  width: 500,\n  \"& .MuiDrawer-paper\": {\n    height: \"calc(100% - 64px)\",\n    maxWidth: \"100%\",\n    top: 64,\n    width: 500,\n  },\n});\n\nexport const BranchDrawer = (props) => {\n  const { containerRef, onClose, open, branch, ...other } = props;\n  const [isEditing, setIsEditing] = useState(false);\n  const lgUp = useMediaQuery((theme) => theme.breakpoints.up(\"lg\"));\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n  };\n\n  // The reason for doing this, is that the persistent drawer has to be rendered, but not it's\n  // content if an branch is not passed.\n  const content = branch ? (\n    <>\n      <Box\n        sx={{\n          alignItems: \"center\",\n          backgroundColor: \"primary.main\",\n          color: \"primary.contrastText\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          px: 3,\n          py: 2,\n        }}\n      >\n        <Typography color=\"inherit\" variant=\"h6\">\n          {branch.number}\n        </Typography>\n        <IconButton color=\"inherit\" onClick={onClose}>\n          <XIcon fontSize=\"small\" />\n        </IconButton>\n      </Box>\n      <Box\n        sx={{\n          px: 3,\n          py: 4,\n        }}\n      >\n        {!isEditing ? (\n          <BranchPreview\n            onApprove={onClose}\n            onEdit={handleEdit}\n            onReject={onClose}\n            branch={branch}\n            lgUp={lgUp}\n          />\n        ) : (\n          <BranchForm onCancel={handleCancel} branch={branch} />\n        )}\n      </Box>\n    </>\n  ) : null;\n\n  if (lgUp) {\n    return (\n      <BranchDrawerDesktop\n        anchor=\"right\"\n        open={open}\n        SlideProps={{ container: containerRef?.current }}\n        variant=\"persistent\"\n        {...other}\n      >\n        {content}\n      </BranchDrawerDesktop>\n    );\n  }\n\n  return (\n    <BranchDrawerMobile\n      anchor=\"right\"\n      ModalProps={{ container: containerRef?.current }}\n      onClose={onClose}\n      open={open}\n      SlideProps={{ container: containerRef?.current }}\n      variant=\"temporary\"\n      {...other}\n    >\n      {content}\n    </BranchDrawerMobile>\n  );\n};\n\nBranchDrawer.propTypes = {\n  containerRef: PropTypes.any,\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  branch: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}