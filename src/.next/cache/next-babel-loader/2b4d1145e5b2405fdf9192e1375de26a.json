{"ast":null,"code":"import _slicedToArray from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { FieldArray } from \"formik\";\nimport { getIn } from \"formik\";\nimport { Grid, Typography, Button } from \"@mui/material\";\nimport GoogleMaps from \"src/components/Formik/GoogleMapsAutocomplete\";\n\nvar DeliveryForm = function DeliveryForm(_ref) {\n  _s();\n\n  var className = _ref.className,\n      touched = _ref.touched,\n      setFieldValue = _ref.setFieldValue,\n      errors = _ref.errors,\n      handleBlur = _ref.handleBlur,\n      handleChange = _ref.handleChange,\n      values = _ref.values,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"touched\", \"setFieldValue\", \"errors\", \"handleBlur\", \"handleChange\", \"values\"]);\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      noOfDeliveries = _React$useState2[0],\n      setNoOfDeliveries = _React$useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"deliveryDetails\",\n      error: errors,\n      children: function children(_ref2) {\n        var remove = _ref2.remove,\n            push = _ref2.push;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                color: \"textSecondary\",\n                children: [\"No of Deliveries: \", noOfDeliveries]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: function onClick() {\n                  setNoOfDeliveries(noOfDeliveries + 1);\n                  push({\n                    loading: \"\",\n                    unloading: \"\"\n                  });\n                },\n                children: \"Add Delivery\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, _this), values.deliveryDetails.length > 0 && values.deliveryDetails.map(function (delivery, index) {\n            var loading = \"deliveryDetails[\".concat(index, \"].loading\");\n            var touchedLoading = getIn(touched, loading);\n            var errorLoading = getIn(errors, loading);\n            var unloading = \"deliveryDetails[\".concat(index, \"].unloading\");\n            var touchedUnloading = getIn(touched, unloading);\n            var errorUnloading = getIn(errors, unloading);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 12,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  error: errorLoading,\n                  touched: touchedLoading,\n                  name: loading,\n                  setFieldValue: setFieldValue,\n                  handleBlur: handleBlur,\n                  values: values,\n                  index: index,\n                  type: \"loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 23\n                }, _this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                md: 3,\n                xs: 12,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(GoogleMaps, {\n                  error: errorUnloading,\n                  touched: touchedUnloading,\n                  name: loading,\n                  setFieldValue: setFieldValue,\n                  handleBlur: handleBlur,\n                  values: values,\n                  index: index,\n                  type: \"unloading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: index < 1,\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  onClick: function onClick() {\n                    setNoOfDeliveries(noOfDeliveries - 1);\n                    remove(index);\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DeliveryForm, \"ZTvxkYaLXWXNKkEQsk9o96DKDMc=\");\n\n_c = DeliveryForm;\nexport default DeliveryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeliveryForm\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/dashboard/order/delivery-details.js"],"names":["React","FieldArray","getIn","Grid","Typography","Button","GoogleMaps","DeliveryForm","className","touched","setFieldValue","errors","handleBlur","handleChange","values","rest","useState","noOfDeliveries","setNoOfDeliveries","remove","push","loading","unloading","deliveryDetails","length","map","delivery","index","touchedLoading","errorLoading","touchedUnloading","errorUnloading"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FieldArray } from \"formik\";\nimport { getIn } from \"formik\";\n\nimport { Grid, Typography, Button } from \"@mui/material\";\n\nimport GoogleMaps from \"src/components/Formik/GoogleMapsAutocomplete\";\n\nconst DeliveryForm = ({\n  className,\n  touched,\n  setFieldValue,\n  errors,\n  handleBlur,\n  handleChange,\n  values,\n  ...rest\n}) => {\n  const [noOfDeliveries, setNoOfDeliveries] = React.useState(1);\n\n  return (\n    <React.Fragment>\n      <FieldArray name=\"deliveryDetails\" error={errors}>\n        {({ remove, push }) => (\n          <React.Fragment>\n            <Grid container spacing={3}>\n              <Grid item>\n                <Typography variant=\"h3\" color=\"textSecondary\">\n                  No of Deliveries: {noOfDeliveries}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    setNoOfDeliveries(noOfDeliveries + 1);\n                    push({ loading: \"\", unloading: \"\" });\n                  }}\n                >\n                  Add Delivery\n                </Button>\n              </Grid>\n            </Grid>\n\n            {values.deliveryDetails.length > 0 &&\n              values.deliveryDetails.map((delivery, index) => {\n                const loading = `deliveryDetails[${index}].loading`;\n                const touchedLoading = getIn(touched, loading);\n                const errorLoading = getIn(errors, loading);\n\n                const unloading = `deliveryDetails[${index}].unloading`;\n                const touchedUnloading = getIn(touched, unloading);\n                const errorUnloading = getIn(errors, unloading);\n\n                return (\n                  <Grid container spacing={3} className=\"row\" key={index}>\n                    <Grid item md={3} xs={12} className=\"col\" key={index}>\n                      <GoogleMaps\n                        error={errorLoading}\n                        touched={touchedLoading}\n                        name={loading}\n                        setFieldValue={setFieldValue}\n                        handleBlur={handleBlur}\n                        values={values}\n                        index={index}\n                        type=\"loading\"\n                      />\n                    </Grid>\n                    <Grid item md={3} xs={12} className=\"col\">\n                      <GoogleMaps\n                        error={errorUnloading}\n                        touched={touchedUnloading}\n                        name={loading}\n                        setFieldValue={setFieldValue}\n                        handleBlur={handleBlur}\n                        values={values}\n                        index={index}\n                        type=\"unloading\"\n                      />\n                    </Grid>\n                    <Grid item className=\"col\">\n                      <Button\n                        disabled={index < 1}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => {\n                          setNoOfDeliveries(noOfDeliveries - 1);\n                          remove(index);\n                        }}\n                      >\n                        Remove\n                      </Button>\n                    </Grid>\n                  </Grid>\n                );\n              })}\n          </React.Fragment>\n        )}\n      </FieldArray>\n    </React.Fragment>\n  );\n};\n\nexport default DeliveryForm;\n"]},"metadata":{},"sourceType":"module"}