{"ast":null,"code":"import _defineProperty from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pulkitshah/Desktop/truckarv2/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-verify-code.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { Box, Button, FormHelperText, TextField, Typography } from \"@mui/material\";\nimport { useAuth } from \"../../hooks/use-auth\";\nimport { useMounted } from \"../../hooks/use-mounted\";\nexport var AmplifyVerifyCode = function AmplifyVerifyCode(props) {\n  _s();\n\n  var isMounted = useMounted();\n  var router = useRouter();\n\n  var _useAuth = useAuth(),\n      verifyCode = _useAuth.verifyCode;\n\n  var itemsRef = useRef([]);\n\n  var _useState = useState(props.email),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var formik = useFormik({\n    initialValues: {\n      email: username,\n      code: [\"\", \"\", \"\", \"\", \"\", \"\"],\n      submit: null\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\"),\n      code: Yup.array().of(Yup.string().required(\"Code is required\"))\n    }),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, helpers) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return verifyCode(values.email, values.code.join(\"\"));\n\n              case 3:\n                if (isMounted()) {\n                  router.push(\"/authentication/login\");\n                }\n\n                _context.next = 10;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n                if (isMounted()) {\n                  helpers.setStatus({\n                    success: false\n                  });\n                  helpers.setErrors({\n                    submit: _context.t0.message\n                  });\n                  helpers.setSubmitting(false);\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  useEffect(function () {\n    itemsRef.current = itemsRef.current.slice(0, 6);\n    var storedUsername = sessionStorage.getItem(\"username\");\n\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", _objectSpread(_objectSpread({\n    noValidate: true,\n    onSubmit: formik.handleSubmit\n  }, props), {}, {\n    children: [!username ? /*#__PURE__*/_jsxDEV(TextField, {\n      autoFocus: true,\n      error: Boolean(formik.touched.email && formik.errors.email),\n      fullWidth: true,\n      helperText: formik.touched.email && formik.errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: formik.handleBlur,\n      onChange: formik.handleChange,\n      type: \"email\",\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Email Address\",\n      disabled: true,\n      fullWidth: true,\n      margin: \"normal\",\n      value: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textSecondary\",\n      sx: {\n        mb: 2,\n        mt: 3\n      },\n      variant: \"subtitle2\",\n      children: \"Verification code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        columnGap: \"16px\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(7, 1fr)\",\n        pt: 1\n      },\n      children: [1, 2, 3, 4, 5, 6].map(function (ref, i) {\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          error: Boolean(Array.isArray(formik.touched.code) && formik.touched.code.length === 6 && formik.errors.code),\n          fullWidth: true,\n          inputRef: function inputRef(el) {\n            return itemsRef.current[i] = el;\n          } // eslint-disable-next-line react/no-array-index-key\n          ,\n          name: \"code[\".concat(i, \"]\"),\n          onBlur: formik.handleBlur,\n          onKeyDown: function onKeyDown(event) {\n            if (event.code === \"Enter\") {\n              if (formik.values.code[i]) {\n                formik.setFieldValue(\"code[\".concat(i, \"]\"), \"\");\n                return;\n              }\n\n              if (i > 0) {\n                formik.setFieldValue(\"code[\".concat(i, \"]\"), \"\");\n                itemsRef.current[i - 1].focus();\n                return;\n              }\n            }\n\n            if (Number.isInteger(parseInt(event.key, 10))) {\n              formik.setFieldValue(\"code[\".concat(i, \"]\"), event.key);\n\n              if (i < 5) {\n                itemsRef.current[i + 1].focus();\n              }\n            }\n          },\n          onPaste: function onPaste(event) {\n            var paste = event.clipboardData.getData(\"text\");\n            var pasteArray = paste.split(\"\");\n\n            if (pasteArray.length !== 6) {\n              return;\n            }\n\n            var valid = true;\n            pasteArray.forEach(function (x) {\n              if (!Number.isInteger(parseInt(x, 10))) {\n                valid = false;\n              }\n            });\n\n            if (valid) {\n              formik.setFieldValue(\"code\", pasteArray);\n              itemsRef.current[5].focus();\n            }\n          },\n          value: formik.values.code[i],\n          sx: {\n            display: \"inline-block\",\n            textAlign: \"center\",\n            \"& .MuiInputBase-input\": {\n              textAlign: \"center\"\n            }\n          }\n        }, \"code-\".concat(i), false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this), Boolean(Array.isArray(formik.touched.code) && formik.touched.code.length === 6 && formik.errors.code) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      sx: {\n        mx: \"14px\"\n      },\n      children: Array.isArray(formik.errors.code) && formik.errors.code.find(function (x) {\n        return x !== undefined;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, _this), formik.errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n        error: true,\n        children: formik.errors.submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: formik.isSubmitting,\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AmplifyVerifyCode, \"n+IXjn+ClXre40xKl+rsHr0fgXo=\", false, function () {\n  return [useMounted, useRouter, useAuth, useFormik];\n});\n\n_c = AmplifyVerifyCode;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmplifyVerifyCode\");","map":{"version":3,"sources":["/Users/pulkitshah/Desktop/truckarv2/renderer/components/authentication/amplify-verify-code.js"],"names":["useEffect","useRef","useState","useRouter","Yup","useFormik","Box","Button","FormHelperText","TextField","Typography","useAuth","useMounted","AmplifyVerifyCode","props","isMounted","router","verifyCode","itemsRef","email","username","setUsername","formik","initialValues","code","submit","validationSchema","object","string","max","required","array","of","onSubmit","values","helpers","join","push","console","error","setStatus","success","setErrors","message","setSubmitting","current","slice","storedUsername","sessionStorage","getItem","handleSubmit","Boolean","touched","errors","handleBlur","handleChange","mb","mt","columnGap","display","gridTemplateColumns","pt","map","ref","i","Array","isArray","length","el","event","setFieldValue","focus","Number","isInteger","parseInt","key","paste","clipboardData","getData","pasteArray","split","valid","forEach","x","textAlign","mx","find","undefined","isSubmitting"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,cAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,eANP;AAOA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA;;AAC1C,MAAMC,SAAS,GAAGH,UAAU,EAA5B;AACA,MAAMI,MAAM,GAAGb,SAAS,EAAxB;;AAF0C,iBAGnBQ,OAAO,EAHY;AAAA,MAGlCM,UAHkC,YAGlCA,UAHkC;;AAI1C,MAAMC,QAAQ,GAAGjB,MAAM,CAAC,EAAD,CAAvB;;AAJ0C,kBAKVC,QAAQ,CAACY,KAAK,CAACK,KAAP,CALE;AAAA,MAKnCC,QALmC;AAAA,MAKzBC,WALyB;;AAM1C,MAAMC,MAAM,GAAGjB,SAAS,CAAC;AACvBkB,IAAAA,aAAa,EAAE;AACbJ,MAAAA,KAAK,EAAEC,QADM;AAEbI,MAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAFO;AAGbC,MAAAA,MAAM,EAAE;AAHK,KADQ;AAMvBC,IAAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,CAAW;AAC3BR,MAAAA,KAAK,EAAEf,GAAG,CAACwB,MAAJ,GACJT,KADI,CACE,uBADF,EAEJU,GAFI,CAEA,GAFA,EAGJC,QAHI,CAGK,mBAHL,CADoB;AAK3BN,MAAAA,IAAI,EAAEpB,GAAG,CAAC2B,KAAJ,GAAYC,EAAZ,CAAe5B,GAAG,CAACwB,MAAJ,GAAaE,QAAb,CAAsB,kBAAtB,CAAf;AALqB,KAAX,CANK;AAavBG,IAAAA,QAAQ;AAAA,+EAAE,iBAAOC,MAAP,EAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAlB,UAAU,CAACiB,MAAM,CAACf,KAAR,EAAee,MAAM,CAACV,IAAP,CAAYY,IAAZ,CAAiB,EAAjB,CAAf,CAFV;;AAAA;AAIN,oBAAIrB,SAAS,EAAb,EAAiB;AACfC,kBAAAA,MAAM,CAACqB,IAAP,CAAY,uBAAZ;AACD;;AANK;AAAA;;AAAA;AAAA;AAAA;AAQNC,gBAAAA,OAAO,CAACC,KAAR;;AACA,oBAAIxB,SAAS,EAAb,EAAiB;AACfoB,kBAAAA,OAAO,CAACK,SAAR,CAAkB;AAAEC,oBAAAA,OAAO,EAAE;AAAX,mBAAlB;AACAN,kBAAAA,OAAO,CAACO,SAAR,CAAkB;AAAEjB,oBAAAA,MAAM,EAAE,YAAIkB;AAAd,mBAAlB;AACAR,kBAAAA,OAAO,CAACS,aAAR,CAAsB,KAAtB;AACD;;AAbK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAbe,GAAD,CAAxB;AA+BA5C,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,QAAQ,CAAC2B,OAAT,GAAmB3B,QAAQ,CAAC2B,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,CAA1B,CAAnB;AAEA,QAAMC,cAAc,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAAvB;;AAEA,QAAIF,cAAJ,EAAoB;AAClB1B,MAAAA,WAAW,CAAC0B,cAAD,CAAX;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEzB,MAAM,CAAC4B;AAAlC,KAAoDpC,KAApD;AAAA,eACG,CAACM,QAAD,gBACC,QAAC,SAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,KAAK,EAAE+B,OAAO,CAAC7B,MAAM,CAAC8B,OAAP,CAAejC,KAAf,IAAwBG,MAAM,CAAC+B,MAAP,CAAclC,KAAvC,CAFhB;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,UAAU,EAAEG,MAAM,CAAC8B,OAAP,CAAejC,KAAf,IAAwBG,MAAM,CAAC+B,MAAP,CAAclC,KAJpD;AAKE,MAAA,KAAK,EAAC,eALR;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,IAAI,EAAC,OAPP;AAQE,MAAA,MAAM,EAAEG,MAAM,CAACgC,UARjB;AASE,MAAA,QAAQ,EAAEhC,MAAM,CAACiC,YATnB;AAUE,MAAA,IAAI,EAAC,OAVP;AAWE,MAAA,KAAK,EAAEjC,MAAM,CAACY,MAAP,CAAcf;AAXvB;AAAA;AAAA;AAAA;AAAA,aADD,gBAeC,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,MAAM,EAAC,QAJT;AAKE,MAAA,KAAK,EAAEC;AALT;AAAA;AAAA;AAAA;AAAA,aAhBJ,eAwBE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,EAAE,EAAE;AACFoC,QAAAA,EAAE,EAAE,CADF;AAEFC,QAAAA,EAAE,EAAE;AAFF,OAFN;AAME,MAAA,OAAO,EAAC,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxBF,eAkCE,QAAC,GAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,SAAS,EAAE,MADT;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFC,QAAAA,mBAAmB,EAAE,gBAHnB;AAIFC,QAAAA,EAAE,EAAE;AAJF,OADN;AAAA,gBAQG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmBC,GAAnB,CAAuB,UAACC,GAAD,EAAMC,CAAN;AAAA,4BACtB,QAAC,SAAD;AACE,UAAA,KAAK,EAAEb,OAAO,CACZc,KAAK,CAACC,OAAN,CAAc5C,MAAM,CAAC8B,OAAP,CAAe5B,IAA7B,KACEF,MAAM,CAAC8B,OAAP,CAAe5B,IAAf,CAAoB2C,MAApB,KAA+B,CADjC,IAEE7C,MAAM,CAAC+B,MAAP,CAAc7B,IAHJ,CADhB;AAME,UAAA,SAAS,MANX;AAOE,UAAA,QAAQ,EAAE,kBAAC4C,EAAD;AAAA,mBAASlD,QAAQ,CAAC2B,OAAT,CAAiBmB,CAAjB,IAAsBI,EAA/B;AAAA,WAPZ,CAQE;AARF;AAUE,UAAA,IAAI,iBAAUJ,CAAV,MAVN;AAWE,UAAA,MAAM,EAAE1C,MAAM,CAACgC,UAXjB;AAYE,UAAA,SAAS,EAAE,mBAACe,KAAD,EAAW;AACpB,gBAAIA,KAAK,CAAC7C,IAAN,KAAe,OAAnB,EAA4B;AAC1B,kBAAIF,MAAM,CAACY,MAAP,CAAcV,IAAd,CAAmBwC,CAAnB,CAAJ,EAA2B;AACzB1C,gBAAAA,MAAM,CAACgD,aAAP,gBAA6BN,CAA7B,QAAmC,EAAnC;AACA;AACD;;AAED,kBAAIA,CAAC,GAAG,CAAR,EAAW;AACT1C,gBAAAA,MAAM,CAACgD,aAAP,gBAA6BN,CAA7B,QAAmC,EAAnC;AACA9C,gBAAAA,QAAQ,CAAC2B,OAAT,CAAiBmB,CAAC,GAAG,CAArB,EAAwBO,KAAxB;AACA;AACD;AACF;;AAED,gBAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACL,KAAK,CAACM,GAAP,EAAY,EAAZ,CAAzB,CAAJ,EAA+C;AAC7CrD,cAAAA,MAAM,CAACgD,aAAP,gBAA6BN,CAA7B,QAAmCK,KAAK,CAACM,GAAzC;;AAEA,kBAAIX,CAAC,GAAG,CAAR,EAAW;AACT9C,gBAAAA,QAAQ,CAAC2B,OAAT,CAAiBmB,CAAC,GAAG,CAArB,EAAwBO,KAAxB;AACD;AACF;AACF,WAjCH;AAkCE,UAAA,OAAO,EAAE,iBAACF,KAAD,EAAW;AAClB,gBAAMO,KAAK,GAAGP,KAAK,CAACQ,aAAN,CAAoBC,OAApB,CAA4B,MAA5B,CAAd;AACA,gBAAMC,UAAU,GAAGH,KAAK,CAACI,KAAN,CAAY,EAAZ,CAAnB;;AAEA,gBAAID,UAAU,CAACZ,MAAX,KAAsB,CAA1B,EAA6B;AAC3B;AACD;;AAED,gBAAIc,KAAK,GAAG,IAAZ;AAEAF,YAAAA,UAAU,CAACG,OAAX,CAAmB,UAACC,CAAD,EAAO;AACxB,kBAAI,CAACX,MAAM,CAACC,SAAP,CAAiBC,QAAQ,CAACS,CAAD,EAAI,EAAJ,CAAzB,CAAL,EAAwC;AACtCF,gBAAAA,KAAK,GAAG,KAAR;AACD;AACF,aAJD;;AAMA,gBAAIA,KAAJ,EAAW;AACT3D,cAAAA,MAAM,CAACgD,aAAP,CAAqB,MAArB,EAA6BS,UAA7B;AACA7D,cAAAA,QAAQ,CAAC2B,OAAT,CAAiB,CAAjB,EAAoB0B,KAApB;AACD;AACF,WAtDH;AAuDE,UAAA,KAAK,EAAEjD,MAAM,CAACY,MAAP,CAAcV,IAAd,CAAmBwC,CAAnB,CAvDT;AAwDE,UAAA,EAAE,EAAE;AACFL,YAAAA,OAAO,EAAE,cADP;AAEFyB,YAAAA,SAAS,EAAE,QAFT;AAGF,qCAAyB;AACvBA,cAAAA,SAAS,EAAE;AADY;AAHvB;AAxDN,0BASepB,CATf;AAAA;AAAA;AAAA;AAAA,iBADsB;AAAA,OAAvB;AARH;AAAA;AAAA;AAAA;AAAA,aAlCF,EA6GGb,OAAO,CACNc,KAAK,CAACC,OAAN,CAAc5C,MAAM,CAAC8B,OAAP,CAAe5B,IAA7B,KACEF,MAAM,CAAC8B,OAAP,CAAe5B,IAAf,CAAoB2C,MAApB,KAA+B,CADjC,IAEE7C,MAAM,CAAC+B,MAAP,CAAc7B,IAHV,CAAP,iBAKC,QAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,EAAE,EAAE;AAAE6D,QAAAA,EAAE,EAAE;AAAN,OAA1B;AAAA,gBACGpB,KAAK,CAACC,OAAN,CAAc5C,MAAM,CAAC+B,MAAP,CAAc7B,IAA5B,KACCF,MAAM,CAAC+B,MAAP,CAAc7B,IAAd,CAAmB8D,IAAnB,CAAwB,UAACH,CAAD;AAAA,eAAOA,CAAC,KAAKI,SAAb;AAAA,OAAxB;AAFJ;AAAA;AAAA;AAAA;AAAA,aAlHJ,EAuHGjE,MAAM,CAAC+B,MAAP,CAAc5B,MAAd,iBACC,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEgC,QAAAA,EAAE,EAAE;AAAN,OAAT;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAA,kBAAuBnC,MAAM,CAAC+B,MAAP,CAAc5B;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAxHJ,eA4HE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEgC,QAAAA,EAAE,EAAE;AAAN,OAAT;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEnC,MAAM,CAACkE,YADnB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,IAAI,EAAC,QAJP;AAKE,QAAA,OAAO,EAAC,WALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aA5HF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA0ID,CAzLM;;GAAM3E,iB;UACOD,U,EACHT,S,EACQQ,O,EAGRN,S;;;KANJQ,iB","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useAuth } from \"../../hooks/use-auth\";\nimport { useMounted } from \"../../hooks/use-mounted\";\n\nexport const AmplifyVerifyCode = (props) => {\n  const isMounted = useMounted();\n  const router = useRouter();\n  const { verifyCode } = useAuth();\n  const itemsRef = useRef([]);\n  const [username, setUsername] = useState(props.email);\n  const formik = useFormik({\n    initialValues: {\n      email: username,\n      code: [\"\", \"\", \"\", \"\", \"\", \"\"],\n      submit: null,\n    },\n    validationSchema: Yup.object({\n      email: Yup.string()\n        .email(\"Must be a valid email\")\n        .max(255)\n        .required(\"Email is required\"),\n      code: Yup.array().of(Yup.string().required(\"Code is required\")),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await verifyCode(values.email, values.code.join(\"\"));\n\n        if (isMounted()) {\n          router.push(\"/authentication/login\");\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted()) {\n          helpers.setStatus({ success: false });\n          helpers.setErrors({ submit: err.message });\n          helpers.setSubmitting(false);\n        }\n      }\n    },\n  });\n\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, 6);\n\n    const storedUsername = sessionStorage.getItem(\"username\");\n\n    if (storedUsername) {\n      setUsername(storedUsername);\n    }\n  }, []);\n\n  return (\n    <form noValidate onSubmit={formik.handleSubmit} {...props}>\n      {!username ? (\n        <TextField\n          autoFocus\n          error={Boolean(formik.touched.email && formik.errors.email)}\n          fullWidth\n          helperText={formik.touched.email && formik.errors.email}\n          label=\"Email Address\"\n          margin=\"normal\"\n          name=\"email\"\n          onBlur={formik.handleBlur}\n          onChange={formik.handleChange}\n          type=\"email\"\n          value={formik.values.email}\n        />\n      ) : (\n        <TextField\n          label=\"Email Address\"\n          disabled\n          fullWidth\n          margin=\"normal\"\n          value={username}\n        />\n      )}\n      <Typography\n        color=\"textSecondary\"\n        sx={{\n          mb: 2,\n          mt: 3,\n        }}\n        variant=\"subtitle2\"\n      >\n        Verification code\n      </Typography>\n      <Box\n        sx={{\n          columnGap: \"16px\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(7, 1fr)\",\n          pt: 1,\n        }}\n      >\n        {[1, 2, 3, 4, 5, 6].map((ref, i) => (\n          <TextField\n            error={Boolean(\n              Array.isArray(formik.touched.code) &&\n                formik.touched.code.length === 6 &&\n                formik.errors.code\n            )}\n            fullWidth\n            inputRef={(el) => (itemsRef.current[i] = el)}\n            // eslint-disable-next-line react/no-array-index-key\n            key={`code-${i}`}\n            name={`code[${i}]`}\n            onBlur={formik.handleBlur}\n            onKeyDown={(event) => {\n              if (event.code === \"Enter\") {\n                if (formik.values.code[i]) {\n                  formik.setFieldValue(`code[${i}]`, \"\");\n                  return;\n                }\n\n                if (i > 0) {\n                  formik.setFieldValue(`code[${i}]`, \"\");\n                  itemsRef.current[i - 1].focus();\n                  return;\n                }\n              }\n\n              if (Number.isInteger(parseInt(event.key, 10))) {\n                formik.setFieldValue(`code[${i}]`, event.key);\n\n                if (i < 5) {\n                  itemsRef.current[i + 1].focus();\n                }\n              }\n            }}\n            onPaste={(event) => {\n              const paste = event.clipboardData.getData(\"text\");\n              const pasteArray = paste.split(\"\");\n\n              if (pasteArray.length !== 6) {\n                return;\n              }\n\n              let valid = true;\n\n              pasteArray.forEach((x) => {\n                if (!Number.isInteger(parseInt(x, 10))) {\n                  valid = false;\n                }\n              });\n\n              if (valid) {\n                formik.setFieldValue(\"code\", pasteArray);\n                itemsRef.current[5].focus();\n              }\n            }}\n            value={formik.values.code[i]}\n            sx={{\n              display: \"inline-block\",\n              textAlign: \"center\",\n              \"& .MuiInputBase-input\": {\n                textAlign: \"center\",\n              },\n            }}\n          />\n        ))}\n      </Box>\n      {Boolean(\n        Array.isArray(formik.touched.code) &&\n          formik.touched.code.length === 6 &&\n          formik.errors.code\n      ) && (\n        <FormHelperText error sx={{ mx: \"14px\" }}>\n          {Array.isArray(formik.errors.code) &&\n            formik.errors.code.find((x) => x !== undefined)}\n        </FormHelperText>\n      )}\n      {formik.errors.submit && (\n        <Box sx={{ mt: 3 }}>\n          <FormHelperText error>{formik.errors.submit}</FormHelperText>\n        </Box>\n      )}\n      <Box sx={{ mt: 3 }}>\n        <Button\n          disabled={formik.isSubmitting}\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Verify\n        </Button>\n      </Box>\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}